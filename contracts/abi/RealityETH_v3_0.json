{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"arbitrator_question_fees","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"askQuestion","inputs":[{"name":"template_id","type":"uint256","internalType":"uint256"},{"name":"question","type":"string","internalType":"string"},{"name":"arbitrator","type":"address","internalType":"address"},{"name":"timeout","type":"uint32","internalType":"uint32"},{"name":"opening_ts","type":"uint32","internalType":"uint32"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"payable"},{"type":"function","name":"askQuestionWithMinBond","inputs":[{"name":"template_id","type":"uint256","internalType":"uint256"},{"name":"question","type":"string","internalType":"string"},{"name":"arbitrator","type":"address","internalType":"address"},{"name":"timeout","type":"uint32","internalType":"uint32"},{"name":"opening_ts","type":"uint32","internalType":"uint32"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"min_bond","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"payable"},{"type":"function","name":"assignWinnerAndSubmitAnswerByArbitrator","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"},{"name":"answer","type":"bytes32","internalType":"bytes32"},{"name":"payee_if_wrong","type":"address","internalType":"address"},{"name":"last_history_hash","type":"bytes32","internalType":"bytes32"},{"name":"last_answer_or_commitment_id","type":"bytes32","internalType":"bytes32"},{"name":"last_answerer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"cancelArbitration","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimMultipleAndWithdrawBalance","inputs":[{"name":"question_ids","type":"bytes32[]","internalType":"bytes32[]"},{"name":"lengths","type":"uint256[]","internalType":"uint256[]"},{"name":"hist_hashes","type":"bytes32[]","internalType":"bytes32[]"},{"name":"addrs","type":"address[]","internalType":"address[]"},{"name":"bonds","type":"uint256[]","internalType":"uint256[]"},{"name":"answers","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimWinnings","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"},{"name":"history_hashes","type":"bytes32[]","internalType":"bytes32[]"},{"name":"addrs","type":"address[]","internalType":"address[]"},{"name":"bonds","type":"uint256[]","internalType":"uint256[]"},{"name":"answers","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"commitments","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"reveal_ts","type":"uint32","internalType":"uint32"},{"name":"is_revealed","type":"bool","internalType":"bool"},{"name":"revealed_answer","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"createTemplate","inputs":[{"name":"content","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createTemplateAndAskQuestion","inputs":[{"name":"content","type":"string","internalType":"string"},{"name":"question","type":"string","internalType":"string"},{"name":"arbitrator","type":"address","internalType":"address"},{"name":"timeout","type":"uint32","internalType":"uint32"},{"name":"opening_ts","type":"uint32","internalType":"uint32"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"payable"},{"type":"function","name":"fundAnswerBounty","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"getArbitrator","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getBestAnswer","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getBond","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBounty","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getContentHash","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getFinalAnswer","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getFinalAnswerIfMatches","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"},{"name":"content_hash","type":"bytes32","internalType":"bytes32"},{"name":"arbitrator","type":"address","internalType":"address"},{"name":"min_timeout","type":"uint32","internalType":"uint32"},{"name":"min_bond","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getFinalizeTS","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getHistoryHash","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getMinBond","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getOpeningTS","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getTimeout","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"isFinalized","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPendingArbitration","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isSettledTooSoon","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"notifyOfArbitrationRequest","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"},{"name":"requester","type":"address","internalType":"address"},{"name":"max_previous","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"question_claims","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"payee","type":"address","internalType":"address"},{"name":"last_bond","type":"uint256","internalType":"uint256"},{"name":"queued_funds","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"questions","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"content_hash","type":"bytes32","internalType":"bytes32"},{"name":"arbitrator","type":"address","internalType":"address"},{"name":"opening_ts","type":"uint32","internalType":"uint32"},{"name":"timeout","type":"uint32","internalType":"uint32"},{"name":"finalize_ts","type":"uint32","internalType":"uint32"},{"name":"is_pending_arbitration","type":"bool","internalType":"bool"},{"name":"bounty","type":"uint256","internalType":"uint256"},{"name":"best_answer","type":"bytes32","internalType":"bytes32"},{"name":"history_hash","type":"bytes32","internalType":"bytes32"},{"name":"bond","type":"uint256","internalType":"uint256"},{"name":"min_bond","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"reopenQuestion","inputs":[{"name":"template_id","type":"uint256","internalType":"uint256"},{"name":"question","type":"string","internalType":"string"},{"name":"arbitrator","type":"address","internalType":"address"},{"name":"timeout","type":"uint32","internalType":"uint32"},{"name":"opening_ts","type":"uint32","internalType":"uint32"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"min_bond","type":"uint256","internalType":"uint256"},{"name":"reopens_question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"payable"},{"type":"function","name":"reopened_questions","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"reopener_questions","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"resultFor","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"resultForOnceSettled","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"setQuestionFee","inputs":[{"name":"fee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"submitAnswer","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"},{"name":"answer","type":"bytes32","internalType":"bytes32"},{"name":"max_previous","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"submitAnswerByArbitrator","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"},{"name":"answer","type":"bytes32","internalType":"bytes32"},{"name":"answerer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"submitAnswerCommitment","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"},{"name":"answer_hash","type":"bytes32","internalType":"bytes32"},{"name":"max_previous","type":"uint256","internalType":"uint256"},{"name":"_answerer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"submitAnswerFor","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"},{"name":"answer","type":"bytes32","internalType":"bytes32"},{"name":"max_previous","type":"uint256","internalType":"uint256"},{"name":"answerer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"submitAnswerReveal","inputs":[{"name":"question_id","type":"bytes32","internalType":"bytes32"},{"name":"answer","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"bond","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"template_hashes","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"templates","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"withdraw","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"LogAnswerReveal","inputs":[{"name":"question_id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"answer_hash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"answer","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"nonce","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"bond","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LogCancelArbitration","inputs":[{"name":"question_id","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"LogClaim","inputs":[{"name":"question_id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LogFinalize","inputs":[{"name":"question_id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"answer","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"LogFundAnswerBounty","inputs":[{"name":"question_id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"bounty_added","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"bounty","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"user","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"LogMinimumBond","inputs":[{"name":"question_id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"min_bond","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LogNewAnswer","inputs":[{"name":"answer","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"question_id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"history_hash","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"bond","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"ts","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"is_commitment","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"LogNewQuestion","inputs":[{"name":"question_id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"template_id","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"question","type":"string","indexed":false,"internalType":"string"},{"name":"content_hash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"arbitrator","type":"address","indexed":false,"internalType":"address"},{"name":"timeout","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"opening_ts","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"nonce","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"created","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LogNewTemplate","inputs":[{"name":"template_id","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"question_text","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"LogNotifyOfArbitrationRequest","inputs":[{"name":"question_id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"user","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"LogReopenQuestion","inputs":[{"name":"question_id","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"reopened_question_id","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"LogSetQuestionFee","inputs":[{"name":"arbitrator","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LogWithdraw","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x60806040525f600155348015610013575f5ffd5b506100356040518060600160405280603f81526020016142c4603f91396100c3565b506100576040518060800160405280604f81526020016143a0604f91396100c3565b506100796040518060800160405280605a8152602001614346605a91396100c3565b5061009b6040518060800160405280605c8152602001614268605c91396100c3565b506100bd604051806080016040528060438152602001614303604391396100c3565b506101cb565b6001545f818152600260209081526040808320439055519192916100e99185910161015b565b60408051601f1981840301815282825280516020918201205f858152600390925291902055339082907fb87fb721c0a557bb8dff89a86796466931d82ba530a66a239263eb8735ade2e49061013f908790610171565b60405180910390a36101528160016101a6565b60015592915050565b5f82518060208501845e5f920191825250919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b808201808211156101c557634e487b7160e01b5f52601160045260245ffd5b92915050565b614090806101d85f395ff3fe60806040526004361061025f575f3560e01c80637f8d429e1161013f578063ab5a4e35116100b3578063d44e293c11610078578063d44e293c14610949578063d7cff98614610968578063e83bfb581461097b578063ebbdd2b0146109a9578063f6a94ecb146109c8578063fe92049d146109e7575f5ffd5b8063ab5a4e3514610899578063acae8f4e146108b8578063bc525652146108f3578063c081d8a31461091e578063d09cc57e1461087a575f5ffd5b8063924532fb11610104578063924532fb146106b957806395addb90146106ea5780639e63fa6a146107dc5780639f1025c61461082c578063a1130d0414610867578063a462fb7b1461087a575f5ffd5b80637f8d429e146105b657806382ffa9f7146105d5578063839df9451461060357806383bf46091461066b5780638d552d461461068a575f5ffd5b8063484c0714116101d6578063590158a71161019b578063590158a7146104be57806359245ff3146105275780636fa427421461053a57806370a0823114610565578063762c38fd1461059057806377f325df146105a3575f5ffd5b8063484c0714146103fc5780634dc266b41461042a5780634df6ca2a146104495780634e60f8831461046857806351577ea914610493575f5ffd5b80632417395c116102275780632417395c1461030b5780632518904c1461033957806326d6c97b1461038857806328828b1e146103b65780633ccfd60b146103d5578063484b93c4146103e9575f5ffd5b806306c3b67a146102635780631101a0fd14610297578063111ec138146102b85780631126a9dc146102cb57806312a203c3146102ec575b5f5ffd5b34801561026e575f5ffd5b5061028261027d36600461340f565b610a06565b60405190151581526020015b60405180910390f35b3480156102a2575f5ffd5b506102b66102b136600461356e565b610a1a565b005b6102b66102c636600461362c565b610d0e565b6102de6102d93660046136e6565b610f6a565b60405190815260200161028e565b3480156102f7575f5ffd5b506102de610306366004613773565b6113a3565b348015610316575f5ffd5b506102de61032536600461340f565b5f9081526004602052604090206003015490565b348015610344575f5ffd5b5061037061035336600461340f565b5f908152600460205260409020600101546001600160a01b031690565b6040516001600160a01b03909116815260200161028e565b348015610393575f5ffd5b506102de6103a236600461340f565b5f9081526004602052604090206006015490565b3480156103c1575f5ffd5b506102b66103d03660046137bd565b611578565b3480156103e0575f5ffd5b506102b6611816565b6102de6103f73660046138c3565b61188d565b348015610407575f5ffd5b506102de61041636600461340f565b5f9081526004602052604090206007015490565b348015610435575f5ffd5b506102b6610444366004613949565b6119ab565b348015610454575f5ffd5b506102b661046336600461340f565b611caa565b348015610473575f5ffd5b506102de61048236600461340f565b60036020525f908152604090205481565b34801561049e575f5ffd5b506102de6104ad36600461340f565b5f9081526004602052604090205490565b3480156104c9575f5ffd5b506105026104d836600461340f565b60056020525f90815260409020805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b03909416845260208401929092529082015260600161028e565b6102b661053536600461340f565b611cf7565b348015610545575f5ffd5b506102de610554366004613978565b60076020525f908152604090205481565b348015610570575f5ffd5b506102de61057f366004613978565b5f6020819052908152604090205481565b6102de61059e366004613991565b611e84565b6102b66105b1366004613a0e565b611fa1565b3480156105c1575f5ffd5b506102826105d036600461340f565b6121a6565b3480156105e0575f5ffd5b506102de6105ef36600461340f565b5f9081526004602052604090206005015490565b34801561060e575f5ffd5b5061064961061d36600461340f565b60066020525f90815260409020805460019091015463ffffffff821691640100000000900460ff169083565b6040805163ffffffff909416845291151560208401529082015260600161028e565b348015610676575f5ffd5b506102de610685366004613a37565b612201565b348015610695575f5ffd5b506102de6106a436600461340f565b5f908152600460208190526040909120015490565b3480156106c4575f5ffd5b506102826106d336600461340f565b5f9081526004602052604090206002015460ff1690565b3480156106f5575f5ffd5b5061077561070436600461340f565b600460208190525f91825260409091208054600182015460028301546003840154948401546005850154600686015460079096015494966001600160a01b0385169663ffffffff600160a01b8704811697600160c01b8804821697600160e01b90049091169560ff1694929391908b565b604080519b8c526001600160a01b03909a1660208c015263ffffffff988916998b019990995295871660608a015295909316608088015290151560a087015260c086015260e08501526101008401919091526101208301526101408201526101600161028e565b3480156107e7575f5ffd5b506108176107f636600461340f565b5f90815260046020526040902060010154600160a01b900463ffffffff1690565b60405163ffffffff909116815260200161028e565b348015610837575f5ffd5b5061081761084636600461340f565b5f90815260046020526040902060010154600160c01b900463ffffffff1690565b6102de610875366004613a70565b61229b565b348015610885575f5ffd5b506102de61089436600461340f565b6122b6565b3480156108a4575f5ffd5b506102de6108b336600461340f565b6122f4565b3480156108c3575f5ffd5b506108176108d236600461340f565b5f90815260046020526040902060010154600160e01b900463ffffffff1690565b3480156108fe575f5ffd5b506102de61090d36600461340f565b60026020525f908152604090205481565b348015610929575f5ffd5b506102de61093836600461340f565b60086020525f908152604090205481565b348015610954575f5ffd5b506102b6610963366004613ac1565b61241f565b6102b661097636600461362c565b612531565b348015610986575f5ffd5b5061028261099536600461340f565b60096020525f908152604090205460ff1681565b3480156109b4575f5ffd5b506102b66109c336600461340f565b61278a565b3480156109d3575f5ffd5b506102b66109e2366004613b15565b61288a565b3480156109f2575f5ffd5b506102b6610a01366004613b48565b612b02565b5f600119610a13836122b6565b1492915050565b84610a24816121a6565b610a495760405162461bcd60e51b8152600401610a4090613b7a565b60405180910390fd5b5f855111610ab25760405162461bcd60e51b815260206004820152603060248201527f6174206c65617374206f6e6520686973746f7279206861736820656e7472792060448201526f1b5d5cdd081899481c1c9bdd9a59195960821b6064820152608401610a40565b5f868152600560208181526040808420805460018201546002909201546004948590529286209485015494909301546001600160a01b039093169490939192905b8a51811015610c56575f610b6e848d8481518110610b1357610b13613bb1565b60200260200101518b8581518110610b2d57610b2d613bb1565b60200260200101518d8681518110610b4757610b47613bb1565b60200260200101518f8781518110610b6157610b61613bb1565b6020026020010151612c4f565b9050610b7a8686613bd9565b9450610bd78d84878a8f8781518110610b9557610b95613bb1565b60200260200101518f8881518110610baf57610baf613bb1565b60200260200101518f8981518110610bc957610bc9613bb1565b602002602001015188612d3a565b8098508196505050898281518110610bf157610bf1613bb1565b6020026020010151955060045f8e81526020019081526020015f20600601548614610c2e57610c21602887613c00565b610c2b9087613c13565b95505b8b8281518110610c4057610c40613bb1565b6020908102919091010151935050600101610af3565b8215610cb2576001600160a01b03861615610c7a57610c768c8786612e7a565b5f93505b5f8c815260056020526040902080546001600160a01b0319166001600160a01b03881617815560018101869055600201849055610ced565b610cc68c87610cc18888613bd9565b612e7a565b5f8c815260056020526040812080546001600160a01b031916815560018101829055600201555b50505f998a5260046020526040909920600501989098555050505050505050565b5f848152600460205260409020600101548490600160c01b900463ffffffff16610d4a5760405162461bcd60e51b8152600401610a4090613c26565b5f8181526004602052604090206002015460ff1615610d7b5760405162461bcd60e51b8152600401610a4090613c53565b5f81815260046020526040902060010154600160e01b900463ffffffff16801580610db157504263ffffffff168163ffffffff16115b610dcd5760405162461bcd60e51b8152600401610a4090613c9b565b5f82815260046020526040902060010154600160a01b900463ffffffff16801580610e0457504263ffffffff168163ffffffff1611155b610e205760405162461bcd60e51b8152600401610a4090613ce5565b865f3411610e405760405162461bcd60e51b8152600401610a4090613d1c565b5f8181526004602052604081206006015490819003610e8e575f82815260046020526040902060070154341015610e895760405162461bcd60e51b8152600401610a4090613d4b565b610eb8565b610e99816002613d82565b341015610eb85760405162461bcd60e51b8152600401610a4090613d99565b88878015610ef0575f82815260046020526040902060060154811015610ef05760405162461bcd60e51b8152600401610a4090613de3565b6001600160a01b038816610f465760405162461bcd60e51b815260206004820152601960248201527f616e737765726572206d757374206265206e6f6e2d7a65726f000000000000006044820152606401610a40565b610f538b8b8a345f612ef2565b610f5d8b8b612fc6565b5050505050505050505050565b5f610f7482610a06565b610fe65760405162461bcd60e51b815260206004820152603f60248201527f596f752063616e206f6e6c792072656f70656e207175657374696f6e7320746860448201527f6174207265736f6c76656420617320736574746c656420746f6f20736f6f6e006064820152608401610a40565b5f89868a604051602001610ffc93929190613e31565b60408051601f1981840301815291815281516020928301205f868152600490935291205490915081146110695760405162461bcd60e51b81526020600482015260156024820152740c6dedce8cadce840d0c2e6d040dad2e6dac2e8c6d605b1b6044820152606401610a40565b5f838152600460205260409020600101546001600160a01b038981169116146110ca5760405162461bcd60e51b81526020600482015260136024820152720c2e4c4d2e8e4c2e8dee440dad2e6dac2e8c6d606b1b6044820152606401610a40565b5f8381526004602052604090206001015463ffffffff888116600160c01b909204161461112c5760405162461bcd60e51b815260206004820152601060248201526f0e8d2dacadeeae840dad2e6dac2e8c6d60831b6044820152606401610a40565b5f8381526004602052604090206001015463ffffffff878116600160a01b90920416146111915760405162461bcd60e51b81526020600482015260136024820152720dee0cadcd2dccebee8e640dad2e6dac2e8c6d606b1b6044820152606401610a40565b5f8381526004602052604090206007015484146111e45760405162461bcd60e51b81526020600482015260116024820152700dad2dcbec4dedcc840dad2e6dac2e8c6d607b1b6044820152606401610a40565b5f8381526009602052604090205460ff161561125c5760405162461bcd60e51b815260206004820152603160248201527f5175657374696f6e20697320616c72656164792072656f70656e696e67206120604482015270383932bb34b7bab99038bab2b9ba34b7b760791b6064820152608401610a40565b5f838152600860205260409020548381156112e95761127a82610a06565b6112d15760405162461bcd60e51b815260206004820152602260248201527f5175657374696f6e2068617320616c7265616479206265656e2072656f70656e604482015261195960f21b6064820152608401610a40565b505f818152600960205260409020805460ff19169055805b5f6112f98d8d8d8d8d8d8d61188d565b5f87815260086020908152604080832084905583835260098252808320805460ff191660011790556004909152808220600390810154868452919092209091015491925061134691613bd9565b5f828152600460205260408082206003908101939093558482528082209092018190559051879183917f32e7d5617fb1be6bd0e7c3974d438d4514c4cf349e9330691d8abf6f6fd431219190a39c9b505050505050505050505050565b5f856113ae816121a6565b6113ca5760405162461bcd60e51b8152600401610a4090613b7a565b5f8781526004602052604090205486146114265760405162461bcd60e51b815260206004820152601760248201527f636f6e74656e742068617368206d757374206d617463680000000000000000006044820152606401610a40565b5f878152600460205260409020600101546001600160a01b038681169116146114895760405162461bcd60e51b81526020600482015260156024820152740c2e4c4d2e8e4c2e8dee440daeae6e840dac2e8c6d605b1b6044820152606401610a40565b5f8781526004602052604090206001015463ffffffff600160c01b909104811690851611156114fa5760405162461bcd60e51b815260206004820152601b60248201527f74696d656f7574206d757374206265206c6f6e6720656e6f75676800000000006044820152606401610a40565b5f8781526004602052604090206006015483111561155a5760405162461bcd60e51b815260206004820152601860248201527f626f6e64206d757374206265206869676820656e6f75676800000000000000006044820152606401610a40565b5f878152600460208190526040909120015491505095945050505050565b5f805b8751821015611804575f88838151811061159757611597613bb1565b602002602001015190505f8884815181106115b4576115b4613bb1565b602002602001015190505f816001600160401b038111156115d7576115d7613426565b604051908082528060200260200182016040528015611600578160200160208202803683370190505b5090505f826001600160401b0381111561161c5761161c613426565b604051908082528060200260200182016040528015611645578160200160208202803683370190505b5090505f836001600160401b0381111561166157611661613426565b60405190808252806020026020018201604052801561168a578160200160208202803683370190505b5090505f846001600160401b038111156116a6576116a6613426565b6040519080825280602002602001820160405280156116cf578160200160208202803683370190505b5090505f5b858110156117e4578c88815181106116ee576116ee613bb1565b602002602001015185828151811061170857611708613bb1565b6020026020010181815250508b888151811061172657611726613bb1565b602002602001015184828151811061174057611740613bb1565b60200260200101906001600160a01b031690816001600160a01b0316815250508a888151811061177257611772613bb1565b602002602001015183828151811061178c5761178c613bb1565b6020026020010181815250508988815181106117aa576117aa613bb1565b60200260200101518282815181106117c4576117c4613bb1565b6020908102919091010152876117d981613e56565b9850506001016116d4565b6117f18786868686610a1a565b50506001909601955061157b9350505050565b61180c611816565b5050505050505050565b335f81815260208190526040808220805490839055905190929183156108fc02918491818181858888f19350505050158015611854573d5f5f3e3d5ffd5b5060405181815233907f4ce7033d118120e254016dccf195288400b28fc8936425acd5f17ce2df3ab7089060200160405180910390a250565b5f878152600260205260408120546118dd5760405162461bcd60e51b81526020600482015260136024820152721d195b5c1b185d19481b5d5cdd08195e1a5cdd606a1b6044820152606401610a40565b5f8885896040516020016118f393929190613e31565b6040516020818303038152906040528051906020012090505f8188888630338a6040516020016119299796959493929190613e6e565b60405160208183030381529060405280519060200120905081336001600160a01b0316827ffe2dac156a3890636ce13f65f4fdf41dcaee11526e4a5374531572d92194796c8d8d8d8d8d8d426040516119889796959493929190613ef5565b60405180910390a461199e81838a8a8a8961302e565b9998505050505050505050565b5f848152600460205260409020600101548490600160c01b900463ffffffff166119e75760405162461bcd60e51b8152600401610a4090613c26565b5f81815260046020526040902060010154600160e01b900463ffffffff16801580611a1d57504263ffffffff168163ffffffff16115b611a7b5760405162461bcd60e51b815260206004820152602960248201527f66696e616c697a6174696f6e206465616c696e65206d757374206e6f742068616044820152681d99481c185cdcd95960ba1b6064820152608401610a40565b5f82815260046020526040902060010154600160a01b900463ffffffff16801580611ab257504263ffffffff168163ffffffff1611155b611ace5760405162461bcd60e51b8152600401610a4090613ce5565b604080516020808201899052818301889052825180830384018152606083018452805190820120608083018b905260a0830181905260c08084018990528451808503909101815260e090930184528251928201929092205f818152600690925292902054909190640100000000900460ff1615611ba05760405162461bcd60e51b815260206004820152602a60248201527f636f6d6d69746d656e74206d757374206e6f742068617665206265656e2072656044820152691d99585b1959081e595d60b21b6064820152608401610a40565b5f8181526006602052604090205463ffffffff428116911611611c115760405162461bcd60e51b8152602060048201526024808201527f72657665616c20646561646c696e65206d757374206e6f7420686176652070616044820152631cdcd95960e21b6064820152608401610a40565b5f818152600660208181526040808420600181018d9055805464ff0000000019166401000000001790558c8452600490915290912001548603611c5857611c588989612fc6565b6040805189815260208101899052908101879052829033908b907fa7b2d313bc7a062e30b2c3b811aa4c9faf09755a6b4ea3bf42deff920944332f9060600160405180910390a4505050505050505050565b335f81815260076020908152604091829020849055815192835282018390527fdca703d022171824d3d639b33c1525fd2338120b4cfb89507c0b59596893acda910160405180910390a150565b5f818152600460205260409020600101548190600160c01b900463ffffffff16611d335760405162461bcd60e51b8152600401610a4090613c26565b5f8181526004602052604090206002015460ff1615611d645760405162461bcd60e51b8152600401610a4090613c53565b5f81815260046020526040902060010154600160e01b900463ffffffff16801580611d9a57504263ffffffff168163ffffffff16115b611db65760405162461bcd60e51b8152600401610a4090613c9b565b5f82815260046020526040902060010154600160a01b900463ffffffff16801580611ded57504263ffffffff168163ffffffff1611155b611e095760405162461bcd60e51b8152600401610a4090613ce5565b5f84815260046020526040902060030154611e25903490613bd9565b5f858152600460205260409081902060030182905551339186917f54d68405b79f2aa4fd4e8db7b67844ad254cf8f208aac476c2894134a9deab6691611e7691349190918252602082015260400190565b60405180910390a350505050565b5f86815260026020526040812054611ed45760405162461bcd60e51b81526020600482015260136024820152721d195b5c1b185d19481b5d5cdd08195e1a5cdd606a1b6044820152606401610a40565b5f878488604051602001611eea93929190613e31565b6040516020818303038152906040528051906020012090505f8187875f303389604051602001611f209796959493929190613e6e565b60405160208183030381529060405280519060200120905081336001600160a01b0316827ffe2dac156a3890636ce13f65f4fdf41dcaee11526e4a5374531572d92194796c8c8c8c8c8c8c42604051611f7f9796959493929190613ef5565b60405180910390a4611f9581838989895f61302e565b98975050505050505050565b5f838152600460205260409020600101548390600160c01b900463ffffffff16611fdd5760405162461bcd60e51b8152600401610a4090613c26565b5f8181526004602052604090206002015460ff161561200e5760405162461bcd60e51b8152600401610a4090613c53565b5f81815260046020526040902060010154600160e01b900463ffffffff1680158061204457504263ffffffff168163ffffffff16115b6120605760405162461bcd60e51b8152600401610a4090613c9b565b5f82815260046020526040902060010154600160a01b900463ffffffff1680158061209757504263ffffffff168163ffffffff1611155b6120b35760405162461bcd60e51b8152600401610a4090613ce5565b855f34116120d35760405162461bcd60e51b8152600401610a4090613d1c565b5f8181526004602052604081206006015490819003612121575f8281526004602052604090206007015434101561211c5760405162461bcd60e51b8152600401610a4090613d4b565b61214b565b61212c816002613d82565b34101561214b5760405162461bcd60e51b8152600401610a4090613d99565b87868015612183575f828152600460205260409020600601548110156121835760405162461bcd60e51b8152600401610a4090613de3565b6121908a8a33345f612ef2565b61219a8a8a612fc6565b50505050505050505050565b5f8181526004602052604081206001810154600290910154600160e01b90910463ffffffff169060ff161580156121e2575063ffffffff811615155b80156121fa57504263ffffffff168163ffffffff1611155b9392505050565b6001545f8181526002602090815260408083204390555191929161222791859101613f44565b60408051601f1981840301815282825280516020918201205f858152600390925291902055339082907fb87fb721c0a557bb8dff89a86796466931d82ba530a66a239263eb8735ade2e49061227d908790613f4f565b60405180910390a3612290816001613bd9565b60015590505b919050565b5f5f6122a688612201565b9050611f95818888888888611e84565b5f816122c1816121a6565b6122dd5760405162461bcd60e51b8152600401610a4090613b7a565b50505f908152600460208190526040909120015490565b5f5f6122ff836122b6565b905060028101612419575f838152600860205260409020548061238a5760405162461bcd60e51b815260206004820152603760248201527f5175657374696f6e2077617320736574746c656420746f6f20736f6f6e20616e60448201527f6420686173206e6f74206265656e2072656f70656e65640000000000000000006064820152608401610a40565b612393816122b6565b9150600282016124175760405162461bcd60e51b815260206004820152604360248201527f5175657374696f6e207265706c6163656d656e742077617320736574746c656460448201527f20746f6f20736f6f6e20616e6420686173206e6f74206265656e2072656f70656064820152621b995960ea1b608482015260a401610a40565b505b92915050565b5f868152600460205260408120600581015460069091015461244691908690869086612c4f565b90505f81801561246c57505f84815260066020526040902054640100000000900460ff16155b15612503575f8481526006602052604090205463ffffffff4281169116106124fc5760405162461bcd60e51b815260206004820152603760248201527f596f75206d757374207761697420666f72207468652072657665616c2064656160448201527f646c696e65206265666f72652066696e616c697a696e670000000000000000006064820152608401610a40565b5084612526565b5f888152600460208190526040909120015487146125215785612523565b825b90505b61180c888883612b02565b5f848152600460205260409020600101548490600160c01b900463ffffffff1661256d5760405162461bcd60e51b8152600401610a4090613c26565b5f8181526004602052604090206002015460ff161561259e5760405162461bcd60e51b8152600401610a4090613c53565b5f81815260046020526040902060010154600160e01b900463ffffffff168015806125d457504263ffffffff168163ffffffff16115b6125f05760405162461bcd60e51b8152600401610a4090613c9b565b5f82815260046020526040902060010154600160a01b900463ffffffff1680158061262757504263ffffffff168163ffffffff1611155b6126435760405162461bcd60e51b8152600401610a4090613ce5565b865f34116126635760405162461bcd60e51b8152600401610a4090613d1c565b5f81815260046020526040812060060154908190036126b1575f828152600460205260409020600701543410156126ac5760405162461bcd60e51b8152600401610a4090613d4b565b6126db565b6126bc816002613d82565b3410156126db5760405162461bcd60e51b8152600401610a4090613d99565b88878015612713575f828152600460205260409020600601548110156127135760405162461bcd60e51b8152600401610a4090613de3565b60408051602081018d90529081018b90523460608201525f9060800160408051601f19818403018152919052805160209091012090505f6001600160a01b038a161561275f5789612761565b335b905061276d8d83613344565b61277b8d8383346001612ef2565b50505050505050505050505050565b5f8181526004602052604090206001015481906001600160a01b031633146127c45760405162461bcd60e51b8152600401610a4090613f61565b5f82815260046020526040902060020154829060ff166127f65760405162461bcd60e51b8152600401610a4090613f98565b5f83815260046020526040902060028101805460ff191690556001015461282a90600160c01b900463ffffffff1642613fdc565b5f84815260046020526040808220600101805463ffffffff94909416600160e01b026001600160e01b0390941693909317909255905184917f71bf7c2b9df0b8818e7eb6746a5bf69699ebbab041f3795f9ed58e469afa9a3a91a2505050565b5f8381526004602052604090206001015483906001600160a01b031633146128c45760405162461bcd60e51b8152600401610a4090613f61565b5f848152600460205260409020600101548490600160c01b900463ffffffff166129005760405162461bcd60e51b8152600401610a4090613c26565b5f8181526004602052604090206002015460ff16156129315760405162461bcd60e51b8152600401610a4090613c53565b5f81815260046020526040902060010154600160e01b900463ffffffff1680158061296757504263ffffffff168163ffffffff16115b6129835760405162461bcd60e51b8152600401610a4090613c9b565b5f82815260046020526040902060010154600160a01b900463ffffffff168015806129ba57504263ffffffff168163ffffffff1611155b6129d65760405162461bcd60e51b8152600401610a4090613ce5565b86858015612a0e575f82815260046020526040902060060154811015612a0e5760405162461bcd60e51b8152600401610a4090613de3565b5f89815260046020526040902060010154600160e01b900463ffffffff16612aa95760405162461bcd60e51b815260206004820152604260248201527f5175657374696f6e206d75737420616c7265616479206861766520616e20616e60448201527f73776572207768656e206172626974726174696f6e2069732072657175657374606482015261195960f21b608482015260a401610a40565b5f89815260046020526040808220600201805460ff19166001179055516001600160a01b038a16918b917f75d7939999bc902187c4aed400872883e445145f1983539166f783fa040b47629190a3505050505050505050565b5f8381526004602052604090206001015483906001600160a01b03163314612b3c5760405162461bcd60e51b8152600401610a4090613f61565b5f84815260046020526040902060020154849060ff16612b6e5760405162461bcd60e51b8152600401610a4090613f98565b6001600160a01b038316612bc45760405162461bcd60e51b815260206004820152601960248201527f616e737765726572206d7573742062652070726f7669646564000000000000006044820152606401610a40565b604051849086907f18d760beffe3717270cd90d9d920ec1a48c194e9ad7bba23eb1c92d3eb974f97905f90a35f858152600460205260408120600201805460ff19169055612c189086908690869080612ef2565b5050505f9182526004602081905260409092209182015560010180546001600160e01b0316600160e01b4263ffffffff1602179055565b5f848484846001604051602001612c6a959493929190613ff8565b604051602081830303815290604052805190602001208603612c8e57506001612d31565b848484845f604051602001612ca7959493929190613ff8565b604051602081830303815290604052805190602001208603612cca57505f612d31565b60405162461bcd60e51b815260206004820152603660248201527f486973746f727920696e7075742070726f766964656420646964206e6f74206d6044820152750c2e8c6d040e8d0ca40caf0e0cac6e8cac840d0c2e6d60531b6064820152608401610a40565b95945050505050565b5f5f8215612daf575f848152600660205260409020548490640100000000900460ff16612d88575f908152600660205260408120805464ffffffffff19168155600101555086905085612e6d565b5f908152600660205260408120600181018054825464ffffffffff19169092559190915593505b888403612e67576001600160a01b038716612e24578596506001195f1b8914158015612dea57505f8a81526004602052604090206003015415155b15612e1f575f8a815260046020526040902060030154612e0d908b908990612e7a565b5f8a8152600460205260408120600301555b612e67565b866001600160a01b0316866001600160a01b031614612e67575f85891015612e4c5788612e4e565b855b9050612e5f8b89610cc1848d613c13565b869750809850505b50869050855b9850989650505050505050565b6001600160a01b0382165f90815260208190526040902054612e9d908290613bd9565b6001600160a01b0383165f81815260208181526040918290209390935551838152909185917f9c121aff33b50c1a53fef034ebec5f83da2d5a5187048f9c76c397ba27c1a1a6910160405180910390a3505050565b5f858152600460209081526040808320600501549051612f1a92889187918991889101613ff8565b6040516020818303038152906040528051906020012090505f831115612f4e575f8681526004602052604090206006018390555b5f86815260046020908152604091829020600501839055815187815290810183905290810184905242606082015282151560808201526001600160a01b0385169087907fe47ca4ebbbc2990134d1168821f38c5e177f3d5ee564bffeadeaa351905e62219060a00160405180910390a3505050505050565b5f82815260046020819052604090912090810182905560010154612ff790600160c01b900463ffffffff1642613fdc565b5f92835260046020526040909220600101805463ffffffff93909316600160e01b026001600160e01b039093169290921790915550565b5f868152600460205260409020600101548690600160c01b900463ffffffff161561309b5760405162461bcd60e51b815260206004820152601760248201527f7175657374696f6e206d757374206e6f742065786973740000000000000000006044820152606401610a40565b5f8463ffffffff16116130f05760405162461bcd60e51b815260206004820152601860248201527f74696d656f7574206d75737420626520706f73697469766500000000000000006044820152606401610a40565b6301e133808463ffffffff16106131545760405162461bcd60e51b815260206004820152602260248201527f74696d656f7574206d757374206265206c657373207468616e20333635206461604482015261797360f01b6064820152608401610a40565b346001600160a01b038616158015906131765750336001600160a01b03871614155b15613239576001600160a01b0386165f90815260076020526040902054808210156131ef5760405162461bcd60e51b8152602060048201526024808201527f4554482070726f7669646564206d75737420636f766572207175657374696f6e6044820152632066656560e01b6064820152608401610a40565b6131f98183613c13565b6001600160a01b0388165f9081526020819052604090205490925061321f908290613bd9565b6001600160a01b0388165f90815260208190526040902055505b5f888152600460205260409020878155600101805463ffffffff878116600160c01b0263ffffffff60c01b19918816600160a01b026001600160c01b03199093166001600160a01b038b1617929092171617905580156132e5575f88815260046020908152604091829020600301839055815183815290810183905233918a917f54d68405b79f2aa4fd4e8db7b67844ad254cf8f208aac476c2894134a9deab66910160405180910390a35b821561180c575f88815260046020526040908190206007018490555188907f9641ca9d53af3bead658ffcc6c7d8c35e7dae9938367bd8eb45bee35d5c62504906133329086815260200190565b60405180910390a25050505050505050565b5f8181526006602052604090205463ffffffff16156133af5760405162461bcd60e51b815260206004820152602160248201527f636f6d6d69746d656e74206d757374206e6f7420616c726561647920657869736044820152601d60fa1b6064820152608401610a40565b5f828152600460205260408120600101546133d990600890600160c01b900463ffffffff16614033565b90506133e58142613fdc565b5f92835260066020526040909220805463ffffffff191663ffffffff909316929092179091555050565b5f6020828403121561341f575f5ffd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b038111828210171561346257613462613426565b604052919050565b5f6001600160401b0382111561348257613482613426565b5060051b60200190565b5f82601f83011261349b575f5ffd5b81356134ae6134a98261346a565b61343a565b8082825260208201915060208360051b8601019250858311156134cf575f5ffd5b602085015b838110156134ec5780358352602092830192016134d4565b5095945050505050565b80356001600160a01b0381168114612296575f5ffd5b5f82601f83011261351b575f5ffd5b81356135296134a98261346a565b8082825260208201915060208360051b86010192508583111561354a575f5ffd5b602085015b838110156134ec57613560816134f6565b83526020928301920161354f565b5f5f5f5f5f60a08688031215613582575f5ffd5b8535945060208601356001600160401b0381111561359e575f5ffd5b6135aa8882890161348c565b94505060408601356001600160401b038111156135c5575f5ffd5b6135d18882890161350c565b93505060608601356001600160401b038111156135ec575f5ffd5b6135f88882890161348c565b92505060808601356001600160401b03811115613613575f5ffd5b61361f8882890161348c565b9150509295509295909350565b5f5f5f5f6080858703121561363f575f5ffd5b84359350602085013592506040850135915061365d606086016134f6565b905092959194509250565b5f82601f830112613677575f5ffd5b81356001600160401b0381111561369057613690613426565b6136a3601f8201601f191660200161343a565b8181528460208386010111156136b7575f5ffd5b816020850160208301375f918101602001919091529392505050565b803563ffffffff81168114612296575f5ffd5b5f5f5f5f5f5f5f5f610100898b0312156136fe575f5ffd5b8835975060208901356001600160401b0381111561371a575f5ffd5b6137268b828c01613668565b97505061373560408a016134f6565b955061374360608a016136d3565b945061375160808a016136d3565b979a969950949793969560a0850135955060c08501359460e001359350915050565b5f5f5f5f5f60a08688031215613787575f5ffd5b853594506020860135935061379e604087016134f6565b92506137ac606087016136d3565b949793965091946080013592915050565b5f5f5f5f5f5f60c087890312156137d2575f5ffd5b86356001600160401b038111156137e7575f5ffd5b6137f389828a0161348c565b96505060208701356001600160401b0381111561380e575f5ffd5b61381a89828a0161348c565b95505060408701356001600160401b03811115613835575f5ffd5b61384189828a0161348c565b94505060608701356001600160401b0381111561385c575f5ffd5b61386889828a0161350c565b93505060808701356001600160401b03811115613883575f5ffd5b61388f89828a0161348c565b92505060a08701356001600160401b038111156138aa575f5ffd5b6138b689828a0161348c565b9150509295509295509295565b5f5f5f5f5f5f5f60e0888a0312156138d9575f5ffd5b8735965060208801356001600160401b038111156138f5575f5ffd5b6139018a828b01613668565b965050613910604089016134f6565b945061391e606089016136d3565b935061392c608089016136d3565b9699959850939692959460a0840135945060c09093013592915050565b5f5f5f5f6080858703121561395c575f5ffd5b5050823594602084013594506040840135936060013592509050565b5f60208284031215613988575f5ffd5b6121fa826134f6565b5f5f5f5f5f5f60c087890312156139a6575f5ffd5b8635955060208701356001600160401b038111156139c2575f5ffd5b6139ce89828a01613668565b9550506139dd604088016134f6565b93506139eb606088016136d3565b92506139f9608088016136d3565b9598949750929591949360a090920135925050565b5f5f5f60608486031215613a20575f5ffd5b505081359360208301359350604090920135919050565b5f60208284031215613a47575f5ffd5b81356001600160401b03811115613a5c575f5ffd5b613a6884828501613668565b949350505050565b5f5f5f5f5f5f60c08789031215613a85575f5ffd5b86356001600160401b03811115613a9a575f5ffd5b613aa689828a01613668565b96505060208701356001600160401b038111156139c2575f5ffd5b5f5f5f5f5f5f60c08789031215613ad6575f5ffd5b8635955060208701359450613aed604088016134f6565b93506060870135925060808701359150613b0960a088016134f6565b90509295509295509295565b5f5f5f60608486031215613b27575f5ffd5b83359250613b37602085016134f6565b929592945050506040919091013590565b5f5f5f60608486031215613b5a575f5ffd5b8335925060208401359150613b71604085016134f6565b90509250925092565b6020808252601a908201527f7175657374696f6e206d7573742062652066696e616c697a6564000000000000604082015260600190565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b8082018082111561241957612419613bc5565b634e487b7160e01b5f52601260045260245ffd5b5f82613c0e57613c0e613bec565b500490565b8181038181111561241957612419613bc5565b6020808252601390820152721c5d595cdd1a5bdb881b5d5cdd08195e1a5cdd606a1b604082015260600190565b60208082526028908201527f7175657374696f6e206d757374206e6f742062652070656e64696e672061726260408201526734ba3930ba34b7b760c11b606082015260800190565b6020808252602a908201527f66696e616c697a6174696f6e20646561646c696e65206d757374206e6f742068604082015269185d99481c185cdcd95960b21b606082015260800190565b6020808252601d908201527f6f70656e696e672064617465206d757374206861766520706173736564000000604082015260600190565b602080825260159082015274626f6e64206d75737420626520706f73697469766560581b604082015260600190565b6020808252601c908201527f626f6e64206d7573742065786365656420746865206d696e696d756d00000000604082015260600190565b808202811582820484141761241957612419613bc5565b6020808252602a908201527f626f6e64206d75737420626520646f75626c65206174206c65617374207072656040820152691d9a5bdd5cc8189bdb9960b21b606082015260800190565b6020808252601d908201527f626f6e64206d75737420657863656564206d61785f70726576696f7573000000604082015260600190565b5f81518060208401855e5f93019283525090919050565b83815260e083901b6001600160e01b03191660208201525f612d316024830184613e1a565b5f60018201613e6757613e67613bc5565b5060010190565b968752606095861b6bffffffffffffffffffffffff19908116602089015260e09590951b6001600160e01b0319166034880152603887019390935290841b8316605886015290921b16606c830152608082015260a00190565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b87815260e060208201525f613f0d60e0830189613ec7565b6001600160a01b039790971660408301525063ffffffff948516606082015292909316608083015260a082015260c0015292915050565b5f6121fa8284613e1a565b602081525f6121fa6020830184613ec7565b6020808252601d908201527f6d73672e73656e646572206d7573742062652061726269747261746f72000000604082015260600190565b60208082526024908201527f7175657374696f6e206d7573742062652070656e64696e6720617262697472616040820152633a34b7b760e11b606082015260800190565b63ffffffff818116838216019081111561241957612419613bc5565b94855260208501939093526040840191909152606090811b6bffffffffffffffffffffffff191690830152151560f81b607482015260750190565b5f63ffffffff83168061404857614048613bec565b8063ffffffff8416049150509291505056fea264697066735822122042b8793a2099a0686688237a82d9e328f50dc3fafd6bcb5d4f018ef013e13b5564736f6c634300081c00337b227469746c65223a20222573222c202274797065223a20226d756c7469706c652d73656c656374222c20226f7574636f6d6573223a205b25735d2c202263617465676f7279223a20222573222c20226c616e67223a20222573227d7b227469746c65223a20222573222c202274797065223a2022626f6f6c222c202263617465676f7279223a20222573222c20226c616e67223a20222573227d7b227469746c65223a20222573222c202274797065223a20226461746574696d65222c202263617465676f7279223a20222573222c20226c616e67223a20222573227d7b227469746c65223a20222573222c202274797065223a202273696e676c652d73656c656374222c20226f7574636f6d6573223a205b25735d2c202263617465676f7279223a20222573222c20226c616e67223a20222573227d7b227469746c65223a20222573222c202274797065223a202275696e74222c2022646563696d616c73223a2031382c202263617465676f7279223a20222573222c20226c616e67223a20222573227d","sourceMap":"442:48333:23:-:0;;;4038:1;4013:26;;7195:552;;;;;;;;;;7219:81;;;;;;;;;;;;;;;;;;:14;:81::i;:::-;;7310:97;;;;;;;;;;;;;;;;;;:14;:97::i;:::-;;7417:108;;;;;;;;;;;;;;;;;;:14;:108::i;:::-;;7535:110;;;;;;;;;;;;;;;;;;:14;:110::i;:::-;;7655:85;;;;;;;;;;;;;;;;;;:14;:85::i;:::-;;442:48333;;8580:352;8699:14:::1;::::0;8667:7;8723:13;;;:9:::1;:13;::::0;;;;;;;8739:12:::1;8723:28:::0;;8793:25;8667:7;;8699:14;8793:25:::1;::::0;8810:7;;8793:25:::1;;:::i;:::-;;::::0;;-1:-1:-1;;8793:25:23;;::::1;::::0;;;;;;8783:36;;8793:25:::1;8783:36:::0;;::::1;::::0;8761:19:::1;::::0;;;:15:::1;:19:::0;;;;;;:58;8853:10:::1;::::0;8777:2;;8834:39:::1;::::0;::::1;::::0;8865:7;;8834:39:::1;:::i;:::-;;;;;;;;8900:6;:2:::0;8905:1:::1;8900:6;:::i;:::-;8883:14;:23:::0;8923:2;8580:352;-1:-1:-1;;8580:352:23:o;14:303:25:-;145:3;183:6;177:13;229:6;222:4;214:6;210:17;205:3;199:37;291:1;255:16;;280:13;;;-1:-1:-1;255:16:25;14:303;-1:-1:-1;14:303:25:o;322:418::-;471:2;460:9;453:21;434:4;503:6;497:13;546:6;541:2;530:9;526:18;519:34;605:6;600:2;592:6;588:15;583:2;572:9;568:18;562:50;661:1;656:2;647:6;636:9;632:22;628:31;621:42;731:2;724;720:7;715:2;707:6;703:15;699:29;688:9;684:45;680:54;672:62;;;322:418;;;;:::o;745:222::-;810:9;;;831:10;;;828:133;;;883:10;878:3;874:20;871:1;864:31;918:4;915:1;908:15;946:4;943:1;936:15;828:133;745:222;;;;:::o;:::-;442:48333:23;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361061025f575f3560e01c80637f8d429e1161013f578063ab5a4e35116100b3578063d44e293c11610078578063d44e293c14610949578063d7cff98614610968578063e83bfb581461097b578063ebbdd2b0146109a9578063f6a94ecb146109c8578063fe92049d146109e7575f5ffd5b8063ab5a4e3514610899578063acae8f4e146108b8578063bc525652146108f3578063c081d8a31461091e578063d09cc57e1461087a575f5ffd5b8063924532fb11610104578063924532fb146106b957806395addb90146106ea5780639e63fa6a146107dc5780639f1025c61461082c578063a1130d0414610867578063a462fb7b1461087a575f5ffd5b80637f8d429e146105b657806382ffa9f7146105d5578063839df9451461060357806383bf46091461066b5780638d552d461461068a575f5ffd5b8063484c0714116101d6578063590158a71161019b578063590158a7146104be57806359245ff3146105275780636fa427421461053a57806370a0823114610565578063762c38fd1461059057806377f325df146105a3575f5ffd5b8063484c0714146103fc5780634dc266b41461042a5780634df6ca2a146104495780634e60f8831461046857806351577ea914610493575f5ffd5b80632417395c116102275780632417395c1461030b5780632518904c1461033957806326d6c97b1461038857806328828b1e146103b65780633ccfd60b146103d5578063484b93c4146103e9575f5ffd5b806306c3b67a146102635780631101a0fd14610297578063111ec138146102b85780631126a9dc146102cb57806312a203c3146102ec575b5f5ffd5b34801561026e575f5ffd5b5061028261027d36600461340f565b610a06565b60405190151581526020015b60405180910390f35b3480156102a2575f5ffd5b506102b66102b136600461356e565b610a1a565b005b6102b66102c636600461362c565b610d0e565b6102de6102d93660046136e6565b610f6a565b60405190815260200161028e565b3480156102f7575f5ffd5b506102de610306366004613773565b6113a3565b348015610316575f5ffd5b506102de61032536600461340f565b5f9081526004602052604090206003015490565b348015610344575f5ffd5b5061037061035336600461340f565b5f908152600460205260409020600101546001600160a01b031690565b6040516001600160a01b03909116815260200161028e565b348015610393575f5ffd5b506102de6103a236600461340f565b5f9081526004602052604090206006015490565b3480156103c1575f5ffd5b506102b66103d03660046137bd565b611578565b3480156103e0575f5ffd5b506102b6611816565b6102de6103f73660046138c3565b61188d565b348015610407575f5ffd5b506102de61041636600461340f565b5f9081526004602052604090206007015490565b348015610435575f5ffd5b506102b6610444366004613949565b6119ab565b348015610454575f5ffd5b506102b661046336600461340f565b611caa565b348015610473575f5ffd5b506102de61048236600461340f565b60036020525f908152604090205481565b34801561049e575f5ffd5b506102de6104ad36600461340f565b5f9081526004602052604090205490565b3480156104c9575f5ffd5b506105026104d836600461340f565b60056020525f90815260409020805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b03909416845260208401929092529082015260600161028e565b6102b661053536600461340f565b611cf7565b348015610545575f5ffd5b506102de610554366004613978565b60076020525f908152604090205481565b348015610570575f5ffd5b506102de61057f366004613978565b5f6020819052908152604090205481565b6102de61059e366004613991565b611e84565b6102b66105b1366004613a0e565b611fa1565b3480156105c1575f5ffd5b506102826105d036600461340f565b6121a6565b3480156105e0575f5ffd5b506102de6105ef36600461340f565b5f9081526004602052604090206005015490565b34801561060e575f5ffd5b5061064961061d36600461340f565b60066020525f90815260409020805460019091015463ffffffff821691640100000000900460ff169083565b6040805163ffffffff909416845291151560208401529082015260600161028e565b348015610676575f5ffd5b506102de610685366004613a37565b612201565b348015610695575f5ffd5b506102de6106a436600461340f565b5f908152600460208190526040909120015490565b3480156106c4575f5ffd5b506102826106d336600461340f565b5f9081526004602052604090206002015460ff1690565b3480156106f5575f5ffd5b5061077561070436600461340f565b600460208190525f91825260409091208054600182015460028301546003840154948401546005850154600686015460079096015494966001600160a01b0385169663ffffffff600160a01b8704811697600160c01b8804821697600160e01b90049091169560ff1694929391908b565b604080519b8c526001600160a01b03909a1660208c015263ffffffff988916998b019990995295871660608a015295909316608088015290151560a087015260c086015260e08501526101008401919091526101208301526101408201526101600161028e565b3480156107e7575f5ffd5b506108176107f636600461340f565b5f90815260046020526040902060010154600160a01b900463ffffffff1690565b60405163ffffffff909116815260200161028e565b348015610837575f5ffd5b5061081761084636600461340f565b5f90815260046020526040902060010154600160c01b900463ffffffff1690565b6102de610875366004613a70565b61229b565b348015610885575f5ffd5b506102de61089436600461340f565b6122b6565b3480156108a4575f5ffd5b506102de6108b336600461340f565b6122f4565b3480156108c3575f5ffd5b506108176108d236600461340f565b5f90815260046020526040902060010154600160e01b900463ffffffff1690565b3480156108fe575f5ffd5b506102de61090d36600461340f565b60026020525f908152604090205481565b348015610929575f5ffd5b506102de61093836600461340f565b60086020525f908152604090205481565b348015610954575f5ffd5b506102b6610963366004613ac1565b61241f565b6102b661097636600461362c565b612531565b348015610986575f5ffd5b5061028261099536600461340f565b60096020525f908152604090205460ff1681565b3480156109b4575f5ffd5b506102b66109c336600461340f565b61278a565b3480156109d3575f5ffd5b506102b66109e2366004613b15565b61288a565b3480156109f2575f5ffd5b506102b6610a01366004613b48565b612b02565b5f600119610a13836122b6565b1492915050565b84610a24816121a6565b610a495760405162461bcd60e51b8152600401610a4090613b7a565b60405180910390fd5b5f855111610ab25760405162461bcd60e51b815260206004820152603060248201527f6174206c65617374206f6e6520686973746f7279206861736820656e7472792060448201526f1b5d5cdd081899481c1c9bdd9a59195960821b6064820152608401610a40565b5f868152600560208181526040808420805460018201546002909201546004948590529286209485015494909301546001600160a01b039093169490939192905b8a51811015610c56575f610b6e848d8481518110610b1357610b13613bb1565b60200260200101518b8581518110610b2d57610b2d613bb1565b60200260200101518d8681518110610b4757610b47613bb1565b60200260200101518f8781518110610b6157610b61613bb1565b6020026020010151612c4f565b9050610b7a8686613bd9565b9450610bd78d84878a8f8781518110610b9557610b95613bb1565b60200260200101518f8881518110610baf57610baf613bb1565b60200260200101518f8981518110610bc957610bc9613bb1565b602002602001015188612d3a565b8098508196505050898281518110610bf157610bf1613bb1565b6020026020010151955060045f8e81526020019081526020015f20600601548614610c2e57610c21602887613c00565b610c2b9087613c13565b95505b8b8281518110610c4057610c40613bb1565b6020908102919091010151935050600101610af3565b8215610cb2576001600160a01b03861615610c7a57610c768c8786612e7a565b5f93505b5f8c815260056020526040902080546001600160a01b0319166001600160a01b03881617815560018101869055600201849055610ced565b610cc68c87610cc18888613bd9565b612e7a565b5f8c815260056020526040812080546001600160a01b031916815560018101829055600201555b50505f998a5260046020526040909920600501989098555050505050505050565b5f848152600460205260409020600101548490600160c01b900463ffffffff16610d4a5760405162461bcd60e51b8152600401610a4090613c26565b5f8181526004602052604090206002015460ff1615610d7b5760405162461bcd60e51b8152600401610a4090613c53565b5f81815260046020526040902060010154600160e01b900463ffffffff16801580610db157504263ffffffff168163ffffffff16115b610dcd5760405162461bcd60e51b8152600401610a4090613c9b565b5f82815260046020526040902060010154600160a01b900463ffffffff16801580610e0457504263ffffffff168163ffffffff1611155b610e205760405162461bcd60e51b8152600401610a4090613ce5565b865f3411610e405760405162461bcd60e51b8152600401610a4090613d1c565b5f8181526004602052604081206006015490819003610e8e575f82815260046020526040902060070154341015610e895760405162461bcd60e51b8152600401610a4090613d4b565b610eb8565b610e99816002613d82565b341015610eb85760405162461bcd60e51b8152600401610a4090613d99565b88878015610ef0575f82815260046020526040902060060154811015610ef05760405162461bcd60e51b8152600401610a4090613de3565b6001600160a01b038816610f465760405162461bcd60e51b815260206004820152601960248201527f616e737765726572206d757374206265206e6f6e2d7a65726f000000000000006044820152606401610a40565b610f538b8b8a345f612ef2565b610f5d8b8b612fc6565b5050505050505050505050565b5f610f7482610a06565b610fe65760405162461bcd60e51b815260206004820152603f60248201527f596f752063616e206f6e6c792072656f70656e207175657374696f6e7320746860448201527f6174207265736f6c76656420617320736574746c656420746f6f20736f6f6e006064820152608401610a40565b5f89868a604051602001610ffc93929190613e31565b60408051601f1981840301815291815281516020928301205f868152600490935291205490915081146110695760405162461bcd60e51b81526020600482015260156024820152740c6dedce8cadce840d0c2e6d040dad2e6dac2e8c6d605b1b6044820152606401610a40565b5f838152600460205260409020600101546001600160a01b038981169116146110ca5760405162461bcd60e51b81526020600482015260136024820152720c2e4c4d2e8e4c2e8dee440dad2e6dac2e8c6d606b1b6044820152606401610a40565b5f8381526004602052604090206001015463ffffffff888116600160c01b909204161461112c5760405162461bcd60e51b815260206004820152601060248201526f0e8d2dacadeeae840dad2e6dac2e8c6d60831b6044820152606401610a40565b5f8381526004602052604090206001015463ffffffff878116600160a01b90920416146111915760405162461bcd60e51b81526020600482015260136024820152720dee0cadcd2dccebee8e640dad2e6dac2e8c6d606b1b6044820152606401610a40565b5f8381526004602052604090206007015484146111e45760405162461bcd60e51b81526020600482015260116024820152700dad2dcbec4dedcc840dad2e6dac2e8c6d607b1b6044820152606401610a40565b5f8381526009602052604090205460ff161561125c5760405162461bcd60e51b815260206004820152603160248201527f5175657374696f6e20697320616c72656164792072656f70656e696e67206120604482015270383932bb34b7bab99038bab2b9ba34b7b760791b6064820152608401610a40565b5f838152600860205260409020548381156112e95761127a82610a06565b6112d15760405162461bcd60e51b815260206004820152602260248201527f5175657374696f6e2068617320616c7265616479206265656e2072656f70656e604482015261195960f21b6064820152608401610a40565b505f818152600960205260409020805460ff19169055805b5f6112f98d8d8d8d8d8d8d61188d565b5f87815260086020908152604080832084905583835260098252808320805460ff191660011790556004909152808220600390810154868452919092209091015491925061134691613bd9565b5f828152600460205260408082206003908101939093558482528082209092018190559051879183917f32e7d5617fb1be6bd0e7c3974d438d4514c4cf349e9330691d8abf6f6fd431219190a39c9b505050505050505050505050565b5f856113ae816121a6565b6113ca5760405162461bcd60e51b8152600401610a4090613b7a565b5f8781526004602052604090205486146114265760405162461bcd60e51b815260206004820152601760248201527f636f6e74656e742068617368206d757374206d617463680000000000000000006044820152606401610a40565b5f878152600460205260409020600101546001600160a01b038681169116146114895760405162461bcd60e51b81526020600482015260156024820152740c2e4c4d2e8e4c2e8dee440daeae6e840dac2e8c6d605b1b6044820152606401610a40565b5f8781526004602052604090206001015463ffffffff600160c01b909104811690851611156114fa5760405162461bcd60e51b815260206004820152601b60248201527f74696d656f7574206d757374206265206c6f6e6720656e6f75676800000000006044820152606401610a40565b5f8781526004602052604090206006015483111561155a5760405162461bcd60e51b815260206004820152601860248201527f626f6e64206d757374206265206869676820656e6f75676800000000000000006044820152606401610a40565b5f878152600460208190526040909120015491505095945050505050565b5f805b8751821015611804575f88838151811061159757611597613bb1565b602002602001015190505f8884815181106115b4576115b4613bb1565b602002602001015190505f816001600160401b038111156115d7576115d7613426565b604051908082528060200260200182016040528015611600578160200160208202803683370190505b5090505f826001600160401b0381111561161c5761161c613426565b604051908082528060200260200182016040528015611645578160200160208202803683370190505b5090505f836001600160401b0381111561166157611661613426565b60405190808252806020026020018201604052801561168a578160200160208202803683370190505b5090505f846001600160401b038111156116a6576116a6613426565b6040519080825280602002602001820160405280156116cf578160200160208202803683370190505b5090505f5b858110156117e4578c88815181106116ee576116ee613bb1565b602002602001015185828151811061170857611708613bb1565b6020026020010181815250508b888151811061172657611726613bb1565b602002602001015184828151811061174057611740613bb1565b60200260200101906001600160a01b031690816001600160a01b0316815250508a888151811061177257611772613bb1565b602002602001015183828151811061178c5761178c613bb1565b6020026020010181815250508988815181106117aa576117aa613bb1565b60200260200101518282815181106117c4576117c4613bb1565b6020908102919091010152876117d981613e56565b9850506001016116d4565b6117f18786868686610a1a565b50506001909601955061157b9350505050565b61180c611816565b5050505050505050565b335f81815260208190526040808220805490839055905190929183156108fc02918491818181858888f19350505050158015611854573d5f5f3e3d5ffd5b5060405181815233907f4ce7033d118120e254016dccf195288400b28fc8936425acd5f17ce2df3ab7089060200160405180910390a250565b5f878152600260205260408120546118dd5760405162461bcd60e51b81526020600482015260136024820152721d195b5c1b185d19481b5d5cdd08195e1a5cdd606a1b6044820152606401610a40565b5f8885896040516020016118f393929190613e31565b6040516020818303038152906040528051906020012090505f8188888630338a6040516020016119299796959493929190613e6e565b60405160208183030381529060405280519060200120905081336001600160a01b0316827ffe2dac156a3890636ce13f65f4fdf41dcaee11526e4a5374531572d92194796c8d8d8d8d8d8d426040516119889796959493929190613ef5565b60405180910390a461199e81838a8a8a8961302e565b9998505050505050505050565b5f848152600460205260409020600101548490600160c01b900463ffffffff166119e75760405162461bcd60e51b8152600401610a4090613c26565b5f81815260046020526040902060010154600160e01b900463ffffffff16801580611a1d57504263ffffffff168163ffffffff16115b611a7b5760405162461bcd60e51b815260206004820152602960248201527f66696e616c697a6174696f6e206465616c696e65206d757374206e6f742068616044820152681d99481c185cdcd95960ba1b6064820152608401610a40565b5f82815260046020526040902060010154600160a01b900463ffffffff16801580611ab257504263ffffffff168163ffffffff1611155b611ace5760405162461bcd60e51b8152600401610a4090613ce5565b604080516020808201899052818301889052825180830384018152606083018452805190820120608083018b905260a0830181905260c08084018990528451808503909101815260e090930184528251928201929092205f818152600690925292902054909190640100000000900460ff1615611ba05760405162461bcd60e51b815260206004820152602a60248201527f636f6d6d69746d656e74206d757374206e6f742068617665206265656e2072656044820152691d99585b1959081e595d60b21b6064820152608401610a40565b5f8181526006602052604090205463ffffffff428116911611611c115760405162461bcd60e51b8152602060048201526024808201527f72657665616c20646561646c696e65206d757374206e6f7420686176652070616044820152631cdcd95960e21b6064820152608401610a40565b5f818152600660208181526040808420600181018d9055805464ff0000000019166401000000001790558c8452600490915290912001548603611c5857611c588989612fc6565b6040805189815260208101899052908101879052829033908b907fa7b2d313bc7a062e30b2c3b811aa4c9faf09755a6b4ea3bf42deff920944332f9060600160405180910390a4505050505050505050565b335f81815260076020908152604091829020849055815192835282018390527fdca703d022171824d3d639b33c1525fd2338120b4cfb89507c0b59596893acda910160405180910390a150565b5f818152600460205260409020600101548190600160c01b900463ffffffff16611d335760405162461bcd60e51b8152600401610a4090613c26565b5f8181526004602052604090206002015460ff1615611d645760405162461bcd60e51b8152600401610a4090613c53565b5f81815260046020526040902060010154600160e01b900463ffffffff16801580611d9a57504263ffffffff168163ffffffff16115b611db65760405162461bcd60e51b8152600401610a4090613c9b565b5f82815260046020526040902060010154600160a01b900463ffffffff16801580611ded57504263ffffffff168163ffffffff1611155b611e095760405162461bcd60e51b8152600401610a4090613ce5565b5f84815260046020526040902060030154611e25903490613bd9565b5f858152600460205260409081902060030182905551339186917f54d68405b79f2aa4fd4e8db7b67844ad254cf8f208aac476c2894134a9deab6691611e7691349190918252602082015260400190565b60405180910390a350505050565b5f86815260026020526040812054611ed45760405162461bcd60e51b81526020600482015260136024820152721d195b5c1b185d19481b5d5cdd08195e1a5cdd606a1b6044820152606401610a40565b5f878488604051602001611eea93929190613e31565b6040516020818303038152906040528051906020012090505f8187875f303389604051602001611f209796959493929190613e6e565b60405160208183030381529060405280519060200120905081336001600160a01b0316827ffe2dac156a3890636ce13f65f4fdf41dcaee11526e4a5374531572d92194796c8c8c8c8c8c8c42604051611f7f9796959493929190613ef5565b60405180910390a4611f9581838989895f61302e565b98975050505050505050565b5f838152600460205260409020600101548390600160c01b900463ffffffff16611fdd5760405162461bcd60e51b8152600401610a4090613c26565b5f8181526004602052604090206002015460ff161561200e5760405162461bcd60e51b8152600401610a4090613c53565b5f81815260046020526040902060010154600160e01b900463ffffffff1680158061204457504263ffffffff168163ffffffff16115b6120605760405162461bcd60e51b8152600401610a4090613c9b565b5f82815260046020526040902060010154600160a01b900463ffffffff1680158061209757504263ffffffff168163ffffffff1611155b6120b35760405162461bcd60e51b8152600401610a4090613ce5565b855f34116120d35760405162461bcd60e51b8152600401610a4090613d1c565b5f8181526004602052604081206006015490819003612121575f8281526004602052604090206007015434101561211c5760405162461bcd60e51b8152600401610a4090613d4b565b61214b565b61212c816002613d82565b34101561214b5760405162461bcd60e51b8152600401610a4090613d99565b87868015612183575f828152600460205260409020600601548110156121835760405162461bcd60e51b8152600401610a4090613de3565b6121908a8a33345f612ef2565b61219a8a8a612fc6565b50505050505050505050565b5f8181526004602052604081206001810154600290910154600160e01b90910463ffffffff169060ff161580156121e2575063ffffffff811615155b80156121fa57504263ffffffff168163ffffffff1611155b9392505050565b6001545f8181526002602090815260408083204390555191929161222791859101613f44565b60408051601f1981840301815282825280516020918201205f858152600390925291902055339082907fb87fb721c0a557bb8dff89a86796466931d82ba530a66a239263eb8735ade2e49061227d908790613f4f565b60405180910390a3612290816001613bd9565b60015590505b919050565b5f5f6122a688612201565b9050611f95818888888888611e84565b5f816122c1816121a6565b6122dd5760405162461bcd60e51b8152600401610a4090613b7a565b50505f908152600460208190526040909120015490565b5f5f6122ff836122b6565b905060028101612419575f838152600860205260409020548061238a5760405162461bcd60e51b815260206004820152603760248201527f5175657374696f6e2077617320736574746c656420746f6f20736f6f6e20616e60448201527f6420686173206e6f74206265656e2072656f70656e65640000000000000000006064820152608401610a40565b612393816122b6565b9150600282016124175760405162461bcd60e51b815260206004820152604360248201527f5175657374696f6e207265706c6163656d656e742077617320736574746c656460448201527f20746f6f20736f6f6e20616e6420686173206e6f74206265656e2072656f70656064820152621b995960ea1b608482015260a401610a40565b505b92915050565b5f868152600460205260408120600581015460069091015461244691908690869086612c4f565b90505f81801561246c57505f84815260066020526040902054640100000000900460ff16155b15612503575f8481526006602052604090205463ffffffff4281169116106124fc5760405162461bcd60e51b815260206004820152603760248201527f596f75206d757374207761697420666f72207468652072657665616c2064656160448201527f646c696e65206265666f72652066696e616c697a696e670000000000000000006064820152608401610a40565b5084612526565b5f888152600460208190526040909120015487146125215785612523565b825b90505b61180c888883612b02565b5f848152600460205260409020600101548490600160c01b900463ffffffff1661256d5760405162461bcd60e51b8152600401610a4090613c26565b5f8181526004602052604090206002015460ff161561259e5760405162461bcd60e51b8152600401610a4090613c53565b5f81815260046020526040902060010154600160e01b900463ffffffff168015806125d457504263ffffffff168163ffffffff16115b6125f05760405162461bcd60e51b8152600401610a4090613c9b565b5f82815260046020526040902060010154600160a01b900463ffffffff1680158061262757504263ffffffff168163ffffffff1611155b6126435760405162461bcd60e51b8152600401610a4090613ce5565b865f34116126635760405162461bcd60e51b8152600401610a4090613d1c565b5f81815260046020526040812060060154908190036126b1575f828152600460205260409020600701543410156126ac5760405162461bcd60e51b8152600401610a4090613d4b565b6126db565b6126bc816002613d82565b3410156126db5760405162461bcd60e51b8152600401610a4090613d99565b88878015612713575f828152600460205260409020600601548110156127135760405162461bcd60e51b8152600401610a4090613de3565b60408051602081018d90529081018b90523460608201525f9060800160408051601f19818403018152919052805160209091012090505f6001600160a01b038a161561275f5789612761565b335b905061276d8d83613344565b61277b8d8383346001612ef2565b50505050505050505050505050565b5f8181526004602052604090206001015481906001600160a01b031633146127c45760405162461bcd60e51b8152600401610a4090613f61565b5f82815260046020526040902060020154829060ff166127f65760405162461bcd60e51b8152600401610a4090613f98565b5f83815260046020526040902060028101805460ff191690556001015461282a90600160c01b900463ffffffff1642613fdc565b5f84815260046020526040808220600101805463ffffffff94909416600160e01b026001600160e01b0390941693909317909255905184917f71bf7c2b9df0b8818e7eb6746a5bf69699ebbab041f3795f9ed58e469afa9a3a91a2505050565b5f8381526004602052604090206001015483906001600160a01b031633146128c45760405162461bcd60e51b8152600401610a4090613f61565b5f848152600460205260409020600101548490600160c01b900463ffffffff166129005760405162461bcd60e51b8152600401610a4090613c26565b5f8181526004602052604090206002015460ff16156129315760405162461bcd60e51b8152600401610a4090613c53565b5f81815260046020526040902060010154600160e01b900463ffffffff1680158061296757504263ffffffff168163ffffffff16115b6129835760405162461bcd60e51b8152600401610a4090613c9b565b5f82815260046020526040902060010154600160a01b900463ffffffff168015806129ba57504263ffffffff168163ffffffff1611155b6129d65760405162461bcd60e51b8152600401610a4090613ce5565b86858015612a0e575f82815260046020526040902060060154811015612a0e5760405162461bcd60e51b8152600401610a4090613de3565b5f89815260046020526040902060010154600160e01b900463ffffffff16612aa95760405162461bcd60e51b815260206004820152604260248201527f5175657374696f6e206d75737420616c7265616479206861766520616e20616e60448201527f73776572207768656e206172626974726174696f6e2069732072657175657374606482015261195960f21b608482015260a401610a40565b5f89815260046020526040808220600201805460ff19166001179055516001600160a01b038a16918b917f75d7939999bc902187c4aed400872883e445145f1983539166f783fa040b47629190a3505050505050505050565b5f8381526004602052604090206001015483906001600160a01b03163314612b3c5760405162461bcd60e51b8152600401610a4090613f61565b5f84815260046020526040902060020154849060ff16612b6e5760405162461bcd60e51b8152600401610a4090613f98565b6001600160a01b038316612bc45760405162461bcd60e51b815260206004820152601960248201527f616e737765726572206d7573742062652070726f7669646564000000000000006044820152606401610a40565b604051849086907f18d760beffe3717270cd90d9d920ec1a48c194e9ad7bba23eb1c92d3eb974f97905f90a35f858152600460205260408120600201805460ff19169055612c189086908690869080612ef2565b5050505f9182526004602081905260409092209182015560010180546001600160e01b0316600160e01b4263ffffffff1602179055565b5f848484846001604051602001612c6a959493929190613ff8565b604051602081830303815290604052805190602001208603612c8e57506001612d31565b848484845f604051602001612ca7959493929190613ff8565b604051602081830303815290604052805190602001208603612cca57505f612d31565b60405162461bcd60e51b815260206004820152603660248201527f486973746f727920696e7075742070726f766964656420646964206e6f74206d6044820152750c2e8c6d040e8d0ca40caf0e0cac6e8cac840d0c2e6d60531b6064820152608401610a40565b95945050505050565b5f5f8215612daf575f848152600660205260409020548490640100000000900460ff16612d88575f908152600660205260408120805464ffffffffff19168155600101555086905085612e6d565b5f908152600660205260408120600181018054825464ffffffffff19169092559190915593505b888403612e67576001600160a01b038716612e24578596506001195f1b8914158015612dea57505f8a81526004602052604090206003015415155b15612e1f575f8a815260046020526040902060030154612e0d908b908990612e7a565b5f8a8152600460205260408120600301555b612e67565b866001600160a01b0316866001600160a01b031614612e67575f85891015612e4c5788612e4e565b855b9050612e5f8b89610cc1848d613c13565b869750809850505b50869050855b9850989650505050505050565b6001600160a01b0382165f90815260208190526040902054612e9d908290613bd9565b6001600160a01b0383165f81815260208181526040918290209390935551838152909185917f9c121aff33b50c1a53fef034ebec5f83da2d5a5187048f9c76c397ba27c1a1a6910160405180910390a3505050565b5f858152600460209081526040808320600501549051612f1a92889187918991889101613ff8565b6040516020818303038152906040528051906020012090505f831115612f4e575f8681526004602052604090206006018390555b5f86815260046020908152604091829020600501839055815187815290810183905290810184905242606082015282151560808201526001600160a01b0385169087907fe47ca4ebbbc2990134d1168821f38c5e177f3d5ee564bffeadeaa351905e62219060a00160405180910390a3505050505050565b5f82815260046020819052604090912090810182905560010154612ff790600160c01b900463ffffffff1642613fdc565b5f92835260046020526040909220600101805463ffffffff93909316600160e01b026001600160e01b039093169290921790915550565b5f868152600460205260409020600101548690600160c01b900463ffffffff161561309b5760405162461bcd60e51b815260206004820152601760248201527f7175657374696f6e206d757374206e6f742065786973740000000000000000006044820152606401610a40565b5f8463ffffffff16116130f05760405162461bcd60e51b815260206004820152601860248201527f74696d656f7574206d75737420626520706f73697469766500000000000000006044820152606401610a40565b6301e133808463ffffffff16106131545760405162461bcd60e51b815260206004820152602260248201527f74696d656f7574206d757374206265206c657373207468616e20333635206461604482015261797360f01b6064820152608401610a40565b346001600160a01b038616158015906131765750336001600160a01b03871614155b15613239576001600160a01b0386165f90815260076020526040902054808210156131ef5760405162461bcd60e51b8152602060048201526024808201527f4554482070726f7669646564206d75737420636f766572207175657374696f6e6044820152632066656560e01b6064820152608401610a40565b6131f98183613c13565b6001600160a01b0388165f9081526020819052604090205490925061321f908290613bd9565b6001600160a01b0388165f90815260208190526040902055505b5f888152600460205260409020878155600101805463ffffffff878116600160c01b0263ffffffff60c01b19918816600160a01b026001600160c01b03199093166001600160a01b038b1617929092171617905580156132e5575f88815260046020908152604091829020600301839055815183815290810183905233918a917f54d68405b79f2aa4fd4e8db7b67844ad254cf8f208aac476c2894134a9deab66910160405180910390a35b821561180c575f88815260046020526040908190206007018490555188907f9641ca9d53af3bead658ffcc6c7d8c35e7dae9938367bd8eb45bee35d5c62504906133329086815260200190565b60405180910390a25050505050505050565b5f8181526006602052604090205463ffffffff16156133af5760405162461bcd60e51b815260206004820152602160248201527f636f6d6d69746d656e74206d757374206e6f7420616c726561647920657869736044820152601d60fa1b6064820152608401610a40565b5f828152600460205260408120600101546133d990600890600160c01b900463ffffffff16614033565b90506133e58142613fdc565b5f92835260066020526040909220805463ffffffff191663ffffffff909316929092179091555050565b5f6020828403121561341f575f5ffd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b038111828210171561346257613462613426565b604052919050565b5f6001600160401b0382111561348257613482613426565b5060051b60200190565b5f82601f83011261349b575f5ffd5b81356134ae6134a98261346a565b61343a565b8082825260208201915060208360051b8601019250858311156134cf575f5ffd5b602085015b838110156134ec5780358352602092830192016134d4565b5095945050505050565b80356001600160a01b0381168114612296575f5ffd5b5f82601f83011261351b575f5ffd5b81356135296134a98261346a565b8082825260208201915060208360051b86010192508583111561354a575f5ffd5b602085015b838110156134ec57613560816134f6565b83526020928301920161354f565b5f5f5f5f5f60a08688031215613582575f5ffd5b8535945060208601356001600160401b0381111561359e575f5ffd5b6135aa8882890161348c565b94505060408601356001600160401b038111156135c5575f5ffd5b6135d18882890161350c565b93505060608601356001600160401b038111156135ec575f5ffd5b6135f88882890161348c565b92505060808601356001600160401b03811115613613575f5ffd5b61361f8882890161348c565b9150509295509295909350565b5f5f5f5f6080858703121561363f575f5ffd5b84359350602085013592506040850135915061365d606086016134f6565b905092959194509250565b5f82601f830112613677575f5ffd5b81356001600160401b0381111561369057613690613426565b6136a3601f8201601f191660200161343a565b8181528460208386010111156136b7575f5ffd5b816020850160208301375f918101602001919091529392505050565b803563ffffffff81168114612296575f5ffd5b5f5f5f5f5f5f5f5f610100898b0312156136fe575f5ffd5b8835975060208901356001600160401b0381111561371a575f5ffd5b6137268b828c01613668565b97505061373560408a016134f6565b955061374360608a016136d3565b945061375160808a016136d3565b979a969950949793969560a0850135955060c08501359460e001359350915050565b5f5f5f5f5f60a08688031215613787575f5ffd5b853594506020860135935061379e604087016134f6565b92506137ac606087016136d3565b949793965091946080013592915050565b5f5f5f5f5f5f60c087890312156137d2575f5ffd5b86356001600160401b038111156137e7575f5ffd5b6137f389828a0161348c565b96505060208701356001600160401b0381111561380e575f5ffd5b61381a89828a0161348c565b95505060408701356001600160401b03811115613835575f5ffd5b61384189828a0161348c565b94505060608701356001600160401b0381111561385c575f5ffd5b61386889828a0161350c565b93505060808701356001600160401b03811115613883575f5ffd5b61388f89828a0161348c565b92505060a08701356001600160401b038111156138aa575f5ffd5b6138b689828a0161348c565b9150509295509295509295565b5f5f5f5f5f5f5f60e0888a0312156138d9575f5ffd5b8735965060208801356001600160401b038111156138f5575f5ffd5b6139018a828b01613668565b965050613910604089016134f6565b945061391e606089016136d3565b935061392c608089016136d3565b9699959850939692959460a0840135945060c09093013592915050565b5f5f5f5f6080858703121561395c575f5ffd5b5050823594602084013594506040840135936060013592509050565b5f60208284031215613988575f5ffd5b6121fa826134f6565b5f5f5f5f5f5f60c087890312156139a6575f5ffd5b8635955060208701356001600160401b038111156139c2575f5ffd5b6139ce89828a01613668565b9550506139dd604088016134f6565b93506139eb606088016136d3565b92506139f9608088016136d3565b9598949750929591949360a090920135925050565b5f5f5f60608486031215613a20575f5ffd5b505081359360208301359350604090920135919050565b5f60208284031215613a47575f5ffd5b81356001600160401b03811115613a5c575f5ffd5b613a6884828501613668565b949350505050565b5f5f5f5f5f5f60c08789031215613a85575f5ffd5b86356001600160401b03811115613a9a575f5ffd5b613aa689828a01613668565b96505060208701356001600160401b038111156139c2575f5ffd5b5f5f5f5f5f5f60c08789031215613ad6575f5ffd5b8635955060208701359450613aed604088016134f6565b93506060870135925060808701359150613b0960a088016134f6565b90509295509295509295565b5f5f5f60608486031215613b27575f5ffd5b83359250613b37602085016134f6565b929592945050506040919091013590565b5f5f5f60608486031215613b5a575f5ffd5b8335925060208401359150613b71604085016134f6565b90509250925092565b6020808252601a908201527f7175657374696f6e206d7573742062652066696e616c697a6564000000000000604082015260600190565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b8082018082111561241957612419613bc5565b634e487b7160e01b5f52601260045260245ffd5b5f82613c0e57613c0e613bec565b500490565b8181038181111561241957612419613bc5565b6020808252601390820152721c5d595cdd1a5bdb881b5d5cdd08195e1a5cdd606a1b604082015260600190565b60208082526028908201527f7175657374696f6e206d757374206e6f742062652070656e64696e672061726260408201526734ba3930ba34b7b760c11b606082015260800190565b6020808252602a908201527f66696e616c697a6174696f6e20646561646c696e65206d757374206e6f742068604082015269185d99481c185cdcd95960b21b606082015260800190565b6020808252601d908201527f6f70656e696e672064617465206d757374206861766520706173736564000000604082015260600190565b602080825260159082015274626f6e64206d75737420626520706f73697469766560581b604082015260600190565b6020808252601c908201527f626f6e64206d7573742065786365656420746865206d696e696d756d00000000604082015260600190565b808202811582820484141761241957612419613bc5565b6020808252602a908201527f626f6e64206d75737420626520646f75626c65206174206c65617374207072656040820152691d9a5bdd5cc8189bdb9960b21b606082015260800190565b6020808252601d908201527f626f6e64206d75737420657863656564206d61785f70726576696f7573000000604082015260600190565b5f81518060208401855e5f93019283525090919050565b83815260e083901b6001600160e01b03191660208201525f612d316024830184613e1a565b5f60018201613e6757613e67613bc5565b5060010190565b968752606095861b6bffffffffffffffffffffffff19908116602089015260e09590951b6001600160e01b0319166034880152603887019390935290841b8316605886015290921b16606c830152608082015260a00190565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b87815260e060208201525f613f0d60e0830189613ec7565b6001600160a01b039790971660408301525063ffffffff948516606082015292909316608083015260a082015260c0015292915050565b5f6121fa8284613e1a565b602081525f6121fa6020830184613ec7565b6020808252601d908201527f6d73672e73656e646572206d7573742062652061726269747261746f72000000604082015260600190565b60208082526024908201527f7175657374696f6e206d7573742062652070656e64696e6720617262697472616040820152633a34b7b760e11b606082015260800190565b63ffffffff818116838216019081111561241957612419613bc5565b94855260208501939093526040840191909152606090811b6bffffffffffffffffffffffff191690830152151560f81b607482015260750190565b5f63ffffffff83168061404857614048613bec565b8063ffffffff8416049150509291505056fea264697066735822122042b8793a2099a0686688237a82d9e328f50dc3fafd6bcb5d4f018ef013e13b5564736f6c634300081c0033","sourceMap":"442:48333:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29436:146;;;;;;;;;;-1:-1:-1;29436:146:23;;;;;:::i;:::-;;:::i;:::-;;;410:14:25;;403:22;385:41;;373:2;358:18;29436:146:23;;;;;;;;37339:3171;;;;;;;;;;-1:-1:-1;37339:3171:23;;;;;:::i;:::-;;:::i;:::-;;17808:483;;;;;;:::i;:::-;;:::i;31583:3034::-;;;;;;:::i;:::-;;:::i;:::-;;;6266:25:25;;;6254:2;6239:18;31583:3034:23;6120:177:25;35364:657:23;;;;;;;;;;-1:-1:-1;35364:657:23;;;;;:::i;:::-;;:::i;47577:127::-;;;;;;;;;;-1:-1:-1;47577:127:23;;;;;:::i;:::-;47642:7;47668:22;;;:9;:22;;;;;:29;;;;47577:127;46190:135;;;;;;;;;;-1:-1:-1;46190:135:23;;;;;:::i;:::-;46259:7;46285:22;;;:9;:22;;;;;:33;;;-1:-1:-1;;;;;46285:33:23;;46190:135;;;;-1:-1:-1;;;;;7267:32:25;;;7249:51;;7237:2;7222:18;46190:135:23;7103:203:25;48394:123:23;;;;;;;;;;-1:-1:-1;48394:123:23;;;;;:::i;:::-;48457:7;48483:22;;;:9;:22;;;;;:27;;;;48394:123;44742:1045;;;;;;;;;;-1:-1:-1;44742:1045:23;;;;;:::i;:::-;;:::i;232:205::-;;;;;;;;;;;;;:::i;13040:1004::-;;;;;;:::i;:::-;;:::i;48643:129::-;;;;;;;;;;-1:-1:-1;48643:129:23;;;;;:::i;:::-;48708:7;48734:22;;;:9;:22;;;;;:31;;;;48643:129;21414:885;;;;;;;;;;-1:-1:-1;21414:885:23;;;;;:::i;:::-;;:::i;8021:179::-;;;;;;;;;;-1:-1:-1;8021:179:23;;;;;:::i;:::-;;:::i;4095:50::-;;;;;;;;;;-1:-1:-1;4095:50:23;;;;;:::i;:::-;;;;;;;;;;;;;;45931:138;;;;;;;;;;-1:-1:-1;45931:138:23;;;;;:::i;:::-;46001:7;46027:22;;;:9;:22;;;;;:35;;45931:138;4202:48;;;;;;;;;;-1:-1:-1;4202:48:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4202:48:23;;;;;;;;;;;-1:-1:-1;;;;;10823:32:25;;;10805:51;;10887:2;10872:18;;10865:34;;;;10915:18;;;10908:34;10793:2;10778:18;4202:48:23;10603:345:25;16028:291:23;;;;;;:::i;:::-;;:::i;4311:59::-;;;;;;;;;;-1:-1:-1;4311:59:23;;;;;:::i;:::-;;;;;;;;;;;;;;97:44;;;;;;;;;;-1:-1:-1;97:44:23;;;;;:::i;:::-;;;;;;;;;;;;;;;11126:959;;;;;;:::i;:::-;;:::i;16810:393::-;;;;;;:::i;:::-;;:::i;28214:287::-;;;;;;;;;;-1:-1:-1;28214:287:23;;;;;:::i;:::-;;:::i;48129:138::-;;;;;;;;;;-1:-1:-1;48129:138:23;;;;;:::i;:::-;48199:7;48225:22;;;:9;:22;;;;;:35;;;;48129:138;4256:49;;;;;;;;;;-1:-1:-1;4256:49:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12621:10:25;12609:23;;;12591:42;;12676:14;;12669:22;12664:2;12649:18;;12642:50;12708:18;;;12701:34;12579:2;12564:18;4256:49:23;12397:344:25;8580:352:23;;;;;;;;;;-1:-1:-1;8580:352:23;;;;;:::i;:::-;;:::i;47809:136::-;;;;;;;;;;-1:-1:-1;47809:136:23;;;;;:::i;:::-;47878:7;47904:22;;;:9;:22;;;;;;;;:34;;;47809:136;47247:151;;;;;;;;;;-1:-1:-1;47247:151:23;;;;;:::i;:::-;47323:4;47346:22;;;:9;:22;;;;;:45;;;;;;47247:151;4151:45;;;;;;;;;;-1:-1:-1;4151:45:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4151:45:23;;;;-1:-1:-1;;;4151:45:23;;;;;-1:-1:-1;;;4151:45:23;;;;;-1:-1:-1;;;4151:45:23;;;;;;;;;;;;;;;;;;;13489:25:25;;;-1:-1:-1;;;;;13550:32:25;;;13545:2;13530:18;;13523:60;13631:10;13619:23;;;13599:18;;;13592:51;;;;13679:23;;;13674:2;13659:18;;13652:51;13740:23;;;;13734:3;13719:19;;13712:52;13808:14;;13801:22;13570:3;13780:19;;13773:51;13855:3;13840:19;;13833:35;13899:3;13884:19;;13877:35;13943:3;13928:19;;13921:35;;;;13987:3;13972:19;;13965:35;14031:3;14016:19;;14009:36;13476:3;13461:19;4151:45:23;13073:978:25;46460:133:23;;;;;;;;;;-1:-1:-1;46460:133:23;;;;;:::i;:::-;46528:6;46553:22;;;:9;:22;;;;;:33;;;-1:-1:-1;;;46553:33:23;;;;;46460:133;;;;14230:10:25;14218:23;;;14200:42;;14188:2;14173:18;46460:133:23;14056:192:25;46720:128:23;;;;;;;;;;-1:-1:-1;46720:128:23;;;;;:::i;:::-;46786:6;46811:22;;;:9;:22;;;;;:30;;;-1:-1:-1;;;46811:30:23;;;;;46720:128;9806:438;;;;;;:::i;:::-;;:::i;28716:176::-;;;;;;;;;;-1:-1:-1;28716:176:23;;;;;:::i;:::-;;:::i;29797:702::-;;;;;;;;;;-1:-1:-1;29797:702:23;;;;;:::i;:::-;;:::i;46987:135::-;;;;;;;;;;-1:-1:-1;46987:135:23;;;;;:::i;:::-;47056:6;47081:22;;;:9;:22;;;;;:34;;;-1:-1:-1;;;47081:34:23;;;;;46987:135;4045:44;;;;;;;;;;-1:-1:-1;4045:44:23;;;;;:::i;:::-;;;;;;;;;;;;;;4377:53;;;;;;;;;;-1:-1:-1;4377:53:23;;;;;:::i;:::-;;;;;;;;;;;;;;26944:1091;;;;;;;;;;-1:-1:-1;26944:1091:23;;;;;:::i;:::-;;:::i;19824:615::-;;;;;;:::i;:::-;;:::i;4436:50::-;;;;;;;;;;-1:-1:-1;4436:50:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;24771:364;;;;;;;;;;-1:-1:-1;24771:364:23;;;;;:::i;:::-;;:::i;24020:522::-;;;;;;;;;;-1:-1:-1;24020:522:23;;;;;:::i;:::-;;:::i;25731:507::-;;;;;;;;;;-1:-1:-1;25731:507:23;;;;;:::i;:::-;;:::i;29436:146::-;29507:4;-1:-1:-1;;29531:22:23;29541:11;29531:9;:22::i;:::-;:43;;29436:146;-1:-1:-1;;29436:146:23:o;37339:3171::-;37537:11;6246:24;6258:11;6246;:24::i;:::-;6238:63;;;;-1:-1:-1;;;6238:63:23;;;;;;;:::i;:::-;;;;;;;;;37604:1:::1;37580:14;:21;:25;37572:86;;;::::0;-1:-1:-1;;;37572:86:23;;17280:2:25;37572:86:23::1;::::0;::::1;17262:21:25::0;17319:2;17299:18;;;17292:30;17358:34;17338:18;;;17331:62;-1:-1:-1;;;17409:18:25;;;17402:46;17465:19;;37572:86:23::1;17078:412:25::0;37572:86:23::1;37749:13;37765:28:::0;;;:15:::1;:28;::::0;;;;;;;:34;;;37830:38;::::1;::::0;37902:41:::1;::::0;;::::1;::::0;38192:9:::1;:22:::0;;;;;;;:35;;::::1;::::0;38260:34;;;::::1;::::0;-1:-1:-1;;;;;37765:34:23;;::::1;::::0;37830:38;;37902:41;;38260:34;38324:1113:::1;38340:14;:21;38336:1;:25;38324:1113;;;38502:18;38523:97;38551:17;38570:14;38585:1;38570:17;;;;;;;;:::i;:::-;;;;;;;38589:7;38597:1;38589:10;;;;;;;;:::i;:::-;;;;;;;38601:5;38607:1;38601:8;;;;;;;;:::i;:::-;;;;;;;38611:5;38617:1;38611:8;;;;;;;;:::i;:::-;;;;;;;38523:27;:97::i;:::-;38502:118:::0;-1:-1:-1;38662:24:23::1;38677:9:::0;38662:12;:24:::1;:::i;:::-;38647:39;;38725:147;38762:11;38775;38788:12;38802:5;38826;38832:1;38826:8;;;;;;;;:::i;:::-;;;;;;;38836:5;38842:1;38836:8;;;;;;;;:::i;:::-;;;;;;;38846:7;38854:1;38846:10;;;;;;;;:::i;:::-;;;;;;;38858:13;38725:19;:147::i;:::-;38701:171;;;;;;;;38996:5;39002:1;38996:8;;;;;;;;:::i;:::-;;;;;;;38984:20;;39251:9;:22;39261:11;39251:22;;;;;;;;;;;:27;;;39238:9;:40;39234:140;;39322:37;1156:2;39322:9:::0;:37:::1;:::i;:::-;39310:49;::::0;:9;:49:::1;:::i;:::-;39298:61;;39234:140;39408:14;39423:1;39408:17;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;38363:3:23::1;;38324:1113;;;39452:30:::0;;39448:989:::1;;-1:-1:-1::0;;;;;39887:21:23;::::1;::::0;39883:137:::1;;39928:43;39938:11;39951:5;39958:12;39928:9;:43::i;:::-;40004:1;39989:16;;39883:137;40034:28;::::0;;;:15:::1;:28;::::0;;;;:42;;-1:-1:-1;;;;;;40034:42:23::1;-1:-1:-1::0;;;;;40034:42:23;::::1;;::::0;;-1:-1:-1;40090:38:23;::::1;:50:::0;;;40154:41:::1;;:56:::0;;;39448:989:::1;;;40322:55;40332:11:::0;40345:5;40352:24:::1;40367:9:::0;40352:12;:24:::1;:::i;:::-;40322:9;:55::i;:::-;40398:28;::::0;;;:15:::1;:28;::::0;;;;40391:35;;-1:-1:-1;;;;;;40391:35:23::1;::::0;;;;::::1;::::0;;;::::1;;::::0;39448:989:::1;-1:-1:-1::0;;40447:22:23::1;::::0;;;:9:::1;:22;::::0;;;;;:35:::1;;:55:::0;;;;-1:-1:-1;;;;;;;;37339:3171:23:o;17808:483::-;4948:1;4915:22;;;:9;:22;;;;;:30;;;:22;;-1:-1:-1;;;4915:30:23;;;;4907:66;;;;-1:-1:-1;;;4907:66:23;;;;;;;:::i;:::-;4992:22;;;;:9;:22;;;;;:45;;;;;4991:46;4983:99;;;;-1:-1:-1;;;4983:99:23;;;;;;;:::i;:::-;5092:18;5113:22;;;:9;:22;;;;;:34;;;-1:-1:-1;;;5113:34:23;;;;5165:25;;;:66;;;5215:15;5194:37;;:11;:37;;;5165:66;5157:121;;;;-1:-1:-1;;;5157:121:23;;;;;;;:::i;:::-;5288:17;5308:22;;;:9;:22;;;;;:33;;;-1:-1:-1;;;5308:33:23;;;;5359:15;;;:56;;;5399:15;5378:37;;:10;:37;;;;5359:56;5351:98;;;;-1:-1:-1;;;5351:98:23;;;;;;;:::i;:::-;17979:11:::1;6415:1;6403:9;:13;6395:47;;;;-1:-1:-1::0;;;6395:47:23::1;;;;;;;:::i;:::-;6453:20;6476:22:::0;;;:9:::1;:22;::::0;;;;:27:::1;;::::0;;6517:17;;;6513:252:::1;;6572:22;::::0;;;:9:::1;:22;::::0;;;;:31:::1;;::::0;6558:9:::1;:46;;6550:87;;;;-1:-1:-1::0;;;6550:87:23::1;;;;;;;:::i;:::-;6513:252;;;6690:16;:12:::0;6705:1:::1;6690:16;:::i;:::-;6676:9;:31;;6668:86;;;;-1:-1:-1::0;;;6668:86:23::1;;;;;;;:::i;:::-;18035:11:::0;18048:12;6889:16;;6885:132:::2;;6929:22;::::0;;;:9:::2;:22;::::0;;;;:27:::2;;::::0;:43;-1:-1:-1;6929:43:23::2;6921:85;;;;-1:-1:-1::0;;;6921:85:23::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;18101:24:23;::::3;18093:62;;;::::0;-1:-1:-1;;;18093:62:23;;21656:2:25;18093:62:23::3;::::0;::::3;21638:21:25::0;21695:2;21675:18;;;21668:30;21734:27;21714:18;;;21707:55;21779:18;;18093:62:23::3;21454:349:25::0;18093:62:23::3;18165:68;18185:11;18198:6;18206:8;18216:9;18227:5;18165:19;:68::i;:::-;18243:41;18264:11;18277:6;18243:20;:41::i;:::-;6774:1:::2;;6385:397:::1;5460:1;4897:571:::0;;17808:483;;;;;:::o;31583:3034::-;31865:7;31893:37;31910:19;31893:16;:37::i;:::-;31885:113;;;;-1:-1:-1;;;31885:113:23;;22010:2:25;31885:113:23;;;21992:21:25;22049:2;22029:18;;;22022:30;22088:34;22068:18;;;22061:62;22159:33;22139:18;;;22132:61;22210:19;;31885:113:23;21808:427:25;31885:113:23;32009:20;32059:11;32072:10;32084:8;32042:51;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;32042:51:23;;;;;;;;;32032:62;;32042:51;32032:62;;;;32231:30;;;;:9;:30;;;;;:43;32032:62;;-1:-1:-1;32215:59:23;;32207:93;;;;-1:-1:-1;;;32207:93:23;;23021:2:25;32207:93:23;;;23003:21:25;23060:2;23040:18;;;23033:30;-1:-1:-1;;;23079:18:25;;;23072:51;23140:18;;32207:93:23;22819:345:25;32207:93:23;32332:30;;;;:9;:30;;;;;:41;;;-1:-1:-1;;;;;32318:55:23;;;32332:41;;32318:55;32310:87;;;;-1:-1:-1;;;32310:87:23;;23371:2:25;32310:87:23;;;23353:21:25;23410:2;23390:18;;;23383:30;-1:-1:-1;;;23429:18:25;;;23422:49;23488:18;;32310:87:23;23169:343:25;32310:87:23;32426:30;;;;:9;:30;;;;;:38;;;;32415:49;;;-1:-1:-1;;;32426:38:23;;;;32415:49;32407:78;;;;-1:-1:-1;;;32407:78:23;;23719:2:25;32407:78:23;;;23701:21:25;23758:2;23738:18;;;23731:30;-1:-1:-1;;;23777:18:25;;;23770:46;23833:18;;32407:78:23;23517:340:25;32407:78:23;32517:30;;;;:9;:30;;;;;:41;;;;32503:55;;;-1:-1:-1;;;32517:41:23;;;;32503:55;32495:88;;;;-1:-1:-1;;;32495:88:23;;24064:2:25;32495:88:23;;;24046:21:25;24103:2;24083:18;;;24076:30;-1:-1:-1;;;24122:18:25;;;24115:49;24181:18;;32495:88:23;23862:343:25;32495:88:23;32613:30;;;;:9;:30;;;;;:39;;;32601:51;;32593:81;;;;-1:-1:-1;;;32593:81:23;;24412:2:25;32593:81:23;;;24394:21:25;24451:2;24431:18;;;24424:30;-1:-1:-1;;;24470:18:25;;;24463:47;24527:18;;32593:81:23;24210:341:25;32593:81:23;32922:39;;;;:18;:39;;;;;;;;32921:40;32913:102;;;;-1:-1:-1;;;32913:102:23;;24758:2:25;32913:102:23;;;24740:21:25;24797:2;24777:18;;;24770:30;24836:34;24816:18;;;24809:62;-1:-1:-1;;;24887:18:25;;;24880:47;24944:19;;32913:102:23;24556:413:25;32913:102:23;33155:35;33193:39;;;:18;:39;;;;;;33212:19;33558:41;;33554:540;;33623:45;33640:27;33623:16;:45::i;:::-;33615:92;;;;-1:-1:-1;;;33615:92:23;;25176:2:25;33615:92:23;;;25158:21:25;25215:2;25195:18;;;25188:30;25254:34;25234:18;;;25227:62;-1:-1:-1;;;25305:18:25;;;25298:32;25347:19;;33615:92:23;24974:398:25;33615:92:23;-1:-1:-1;34006:5:23;33956:47;;;:18;:47;;;;;:55;;-1:-1:-1;;33956:55:23;;;33975:27;33554:540;34104:19;34126:95;34149:11;34162:8;34172:10;34184:7;34193:10;34205:5;34212:8;34126:22;:95::i;:::-;34232:39;;;;:18;:39;;;;;;;;:53;;;34295:31;;;:18;:31;;;;;:38;;-1:-1:-1;;34295:38:23;34329:4;34295:38;;;34425:9;:22;;;;;;:29;;;;;34376:39;;;;;;;:46;;;;34104:117;;-1:-1:-1;34376:78:23;;;:::i;:::-;34344:22;;;;:9;:22;;;;;;:29;;;;:110;;;;34464:39;;;;;;:46;;;:50;;;34530:51;;34561:19;;34354:11;;34530:51;;34344:22;34530:51;34599:11;31583:3034;-1:-1:-1;;;;;;;;;;;;31583:3034:23:o;35364:657::-;35585:7;35545:11;6246:24;6258:11;6246;:24::i;:::-;6238:63;;;;-1:-1:-1;;;6238:63:23;;;;;;;:::i;:::-;35628:22:::1;::::0;;;:9:::1;:22;::::0;;;;:35;35612:51;::::1;35604:87;;;::::0;-1:-1:-1;;;35604:87:23;;25579:2:25;35604:87:23::1;::::0;::::1;25561:21:25::0;25618:2;25598:18;;;25591:30;25657:25;25637:18;;;25630:53;25700:18;;35604:87:23::1;25377:347:25::0;35604:87:23::1;35723:22;::::0;;;:9:::1;:22;::::0;;;;:33:::1;;::::0;-1:-1:-1;;;;;35709:47:23;;::::1;35723:33:::0;::::1;35709:47;35701:81;;;::::0;-1:-1:-1;;;35701:81:23;;25931:2:25;35701:81:23::1;::::0;::::1;25913:21:25::0;25970:2;25950:18;;;25943:30;-1:-1:-1;;;25989:18:25;;;25982:51;26050:18;;35701:81:23::1;25729:345:25::0;35701:81:23::1;35815:22;::::0;;;:9:::1;:22;::::0;;;;:30:::1;;::::0;::::1;-1:-1:-1::0;;;35815:30:23;;::::1;::::0;::::1;35800:45:::0;;::::1;;;35792:85;;;::::0;-1:-1:-1;;;35792:85:23;;26281:2:25;35792:85:23::1;::::0;::::1;26263:21:25::0;26320:2;26300:18;;;26293:30;26359:29;26339:18;;;26332:57;26406:18;;35792:85:23::1;26079:351:25::0;35792:85:23::1;35907:22;::::0;;;:9:::1;:22;::::0;;;;:27:::1;;::::0;35895:39;::::1;;35887:76;;;::::0;-1:-1:-1;;;35887:76:23;;26637:2:25;35887:76:23::1;::::0;::::1;26619:21:25::0;26676:2;26656:18;;;26649:30;26715:26;26695:18;;;26688:54;26759:18;;35887:76:23::1;26435:348:25::0;35887:76:23::1;35980:22;::::0;;;:9:::1;:22;::::0;;;;;;;:34:::1;::::0;;-1:-1:-1;35364:657:23;;;;;;;;:::o;44742:1045::-;45083:10:::1;::::0;45122:639:::1;45140:12;:19;45135:2;:24;45122:639;;;45181:11;45195:12;45208:2;45195:16;;;;;;;;:::i;:::-;;;;;;;45181:30;;45225:10;45238:7;45246:2;45238:11;;;;;;;;:::i;:::-;;;;;;;45225:24;;45263:19;45299:2;-1:-1:-1::0;;;;;45285:17:23::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;45285:17:23::1;;45263:39;;45316:19;45352:2;-1:-1:-1::0;;;;;45338:17:23::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;45338:17:23::1;;45316:39;;45369:19;45405:2;-1:-1:-1::0;;;;;45391:17:23::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;45391:17:23::1;;45369:39;;45422:19;45458:2;-1:-1:-1::0;;;;;45444:17:23::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;45444:17:23::1;-1:-1:-1::0;45422:39:23;-1:-1:-1;45475:9:23::1;45498:205;45514:2;45510:1;:6;45498:205;;;45549:11;45561:1;45549:14;;;;;;;;:::i;:::-;;;;;;;45541:2;45544:1;45541:5;;;;;;;;:::i;:::-;;;;;;:22;;;::::0;::::1;45589:5;45595:1;45589:8;;;;;;;;:::i;:::-;;;;;;;45581:2;45584:1;45581:5;;;;;;;;:::i;:::-;;;;;;:16;-1:-1:-1::0;;;;;45581:16:23::1;;;-1:-1:-1::0;;;;;45581:16:23::1;;;::::0;::::1;45623:5;45629:1;45623:8;;;;;;;;:::i;:::-;;;;;;;45615:2;45618:1;45615:5;;;;;;;;:::i;:::-;;;;;;:16;;;::::0;::::1;45657:7;45665:1;45657:10;;;;;;;;:::i;:::-;;;;;;;45649:2;45652:1;45649:5;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:18;45685:3;::::1;::::0;::::1;:::i;:::-;::::0;-1:-1:-1;;45518:3:23::1;;45498:205;;;45716:34;45730:3;45735:2;45739;45743;45747;45716:13;:34::i;:::-;-1:-1:-1::0;;45161:4:23::1;::::0;;::::1;::::0;-1:-1:-1;45122:639:23::1;::::0;-1:-1:-1;;;;45122:639:23::1;;45770:10;:8;:10::i;:::-;45064:723;;44742:1045:::0;;;;;;:::o;232:205::-;298:10;274:11;288:21;;;;;;;;;;;;;319:25;;;;354:33;;288:21;;298:10;354:33;;;;;288:21;;354:33;274:11;354:33;288:21;298:10;354:33;;;;;;;;;;;;;;;;;;;;-1:-1:-1;402:28:23;;6266:25:25;;;414:10:23;;402:28;;6254:2:25;6239:18;402:28:23;;;;;;;264:173;232:205::o;13040:1004::-;13302:7;13330:22;;;:9;:22;;;;;;13322:58;;;;-1:-1:-1;;;13322:58:23;;27130:2:25;13322:58:23;;;27112:21:25;27169:2;27149:18;;;27142:30;-1:-1:-1;;;27188:18:25;;;27181:49;27247:18;;13322:58:23;26928:343:25;13322:58:23;13391:20;13441:11;13454:10;13466:8;13424:51;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13414:62;;;;;;13391:85;;13486:19;13535:12;13549:10;13561:7;13570:8;13588:4;13595:10;13607:5;13518:95;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13508:106;;;;;;13486:128;;13846:12;13811:10;-1:-1:-1;;;;;13783:133:23;13798:11;13783:133;13823:11;13836:8;13860:10;13872:7;13881:10;13893:5;13900:15;13783:133;;;;;;;;;;;;:::i;:::-;;;;;;;;13926:82;13939:11;13952:12;13966:10;13978:7;13987:10;13999:8;13926:12;:82::i;:::-;14026:11;13040:1004;-1:-1:-1;;;;;;;;;13040:1004:23:o;21414:885::-;5767:1;5734:22;;;:9;:22;;;;;:30;;;:22;;-1:-1:-1;;;5734:30:23;;;;5726:66;;;;-1:-1:-1;;;5726:66:23;;;;;;;:::i;:::-;5802:18;5823:22;;;:9;:22;;;;;:34;;;-1:-1:-1;;;5823:34:23;;;;5875:25;;;:66;;;5925:15;5904:37;;:11;:37;;;5875:66;5867:120;;;;-1:-1:-1;;;5867:120:23;;29262:2:25;5867:120:23;;;29244:21:25;29301:2;29281:18;;;29274:30;29340:34;29320:18;;;29313:62;-1:-1:-1;;;29391:18:25;;;29384:39;29440:19;;5867:120:23;29060:405:25;5867:120:23;5997:17;6017:22;;;:9;:22;;;;;:33;;;-1:-1:-1;;;6017:33:23;;;;6068:15;;;:56;;;6108:15;6087:37;;:10;:37;;;;6068:56;6060:98;;;;-1:-1:-1;;;6060:98:23;;;;;;;:::i;:::-;21616:31:::1;::::0;;::::1;::::0;;::::1;29627:19:25::0;;;29662:12;;;29655:28;;;21616:31:23;;;;;;;;;29699:12:25;;;21616:31:23;;21606:42;;;;::::1;::::0;21692:48;;;29907:19:25;;;29942:12;;;29935:28;;;29979:12;;;;29972:28;;;21692:48:23;;;;;;;;;;30016:12:25;;;;21692:48:23;;21682:59;;;;::::1;::::0;;;;-1:-1:-1;21761:26:23;;;:11:::1;:26:::0;;;;;;:38;21606:42;;21682:59;21761:38;;::::1;;;21760:39;21752:94;;;::::0;-1:-1:-1;;;21752:94:23;;30241:2:25;21752:94:23::1;::::0;::::1;30223:21:25::0;30280:2;30260:18;;;30253:30;30319:34;30299:18;;;30292:62;-1:-1:-1;;;30370:18:25;;;30363:40;30420:19;;21752:94:23::1;30039:406:25::0;21752:94:23::1;21864:26;::::0;;;:11:::1;:26;::::0;;;;:36;:62:::1;21910:15;21864:62:::0;::::1;:36:::0;::::1;:62;21856:111;;;::::0;-1:-1:-1;;;21856:111:23;;30652:2:25;21856:111:23::1;::::0;::::1;30634:21:25::0;30691:2;30671:18;;;30664:30;30730:34;30710:18;;;30703:62;-1:-1:-1;;;30781:18:25;;;30774:34;30825:19;;21856:111:23::1;30450:400:25::0;21856:111:23::1;21978:26;::::0;;;:11:::1;:26;::::0;;;;;;;:42:::1;::::0;::::1;:51:::0;;;22039:45;;-1:-1:-1;;22039:45:23::1;::::0;::::1;::::0;;22107:22;;;22039:38:::1;22107:22:::0;;;;;;:27:::1;::::0;22099:35;;22095:107:::1;;22150:41;22171:11;22184:6;22150:20;:41::i;:::-;22217:74;::::0;;31057:25:25;;;31113:2;31098:18;;31091:34;;;31141:18;;;31134:34;;;22258:11:23;;22246:10:::1;::::0;22233:11;;22217:74:::1;::::0;31045:2:25;31030:18;22217:74:23::1;;;;;;;21573:726;;5716:461:::0;;21414:885;;;;;:::o;8021:179::-;8127:10:::1;8102:36;::::0;;;:24:::1;:36;::::0;;;;;;;;:42;;;8159:34;;31353:51:25;;;31420:18;;31413:34;;;8159::23::1;::::0;31326:18:25;8159:34:23::1;;;;;;;8021:179:::0;:::o;16028:291::-;4948:1;4915:22;;;:9;:22;;;;;:30;;;:22;;-1:-1:-1;;;4915:30:23;;;;4907:66;;;;-1:-1:-1;;;4907:66:23;;;;;;;:::i;:::-;4992:22;;;;:9;:22;;;;;:45;;;;;4991:46;4983:99;;;;-1:-1:-1;;;4983:99:23;;;;;;;:::i;:::-;5092:18;5113:22;;;:9;:22;;;;;:34;;;-1:-1:-1;;;5113:34:23;;;;5165:25;;;:66;;;5215:15;5194:37;;:11;:37;;;5165:66;5157:121;;;;-1:-1:-1;;;5157:121:23;;;;;;;:::i;:::-;5288:17;5308:22;;;:9;:22;;;;;:33;;;-1:-1:-1;;;5308:33:23;;;;5359:15;;;:56;;;5399:15;5378:37;;:10;:37;;;;5359:56;5351:98;;;;-1:-1:-1;;;5351:98:23;;;;;;;:::i;:::-;16170:22:::1;::::0;;;:9:::1;:22;::::0;;;;:29:::1;;::::0;:41:::1;::::0;16202:9:::1;::::0;16170:41:::1;:::i;:::-;16138:22;::::0;;;:9:::1;:22;::::0;;;;;;:29:::1;;:73:::0;;;16226:86;16301:10:::1;::::0;16148:11;;16226:86:::1;::::0;::::1;::::0;16259:9:::1;::::0;16138:73;31632:25:25;;;31688:2;31673:18;;31666:34;31620:2;31605:18;;31458:248;16226:86:23::1;;;;;;;;4897:571:::0;;16028:291;;:::o;11126:959::-;11359:7;11387:22;;;:9;:22;;;;;;11379:58;;;;-1:-1:-1;;;11379:58:23;;27130:2:25;11379:58:23;;;27112:21:25;27169:2;27149:18;;;27142:30;-1:-1:-1;;;27188:18:25;;;27181:49;27247:18;;11379:58:23;26928:343:25;11379:58:23;11448:20;11498:11;11511:10;11523:8;11481:51;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11471:62;;;;;;11448:85;;11543:19;11592:12;11606:10;11618:7;11635:1;11647:4;11654:10;11666:5;11575:97;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11565:108;;;;;;11543:130;;11894:12;11859:10;-1:-1:-1;;;;;11831:133:23;11846:11;11831:133;11871:11;11884:8;11908:10;11920:7;11929:10;11941:5;11948:15;11831:133;;;;;;;;;;;;:::i;:::-;;;;;;;;11974:75;11987:11;12000:12;12014:10;12026:7;12035:10;12047:1;11974:12;:75::i;:::-;12067:11;11126:959;-1:-1:-1;;;;;;;;11126:959:23:o;16810:393::-;4948:1;4915:22;;;:9;:22;;;;;:30;;;:22;;-1:-1:-1;;;4915:30:23;;;;4907:66;;;;-1:-1:-1;;;4907:66:23;;;;;;;:::i;:::-;4992:22;;;;:9;:22;;;;;:45;;;;;4991:46;4983:99;;;;-1:-1:-1;;;4983:99:23;;;;;;;:::i;:::-;5092:18;5113:22;;;:9;:22;;;;;:34;;;-1:-1:-1;;;5113:34:23;;;;5165:25;;;:66;;;5215:15;5194:37;;:11;:37;;;5165:66;5157:121;;;;-1:-1:-1;;;5157:121:23;;;;;;;:::i;:::-;5288:17;5308:22;;;:9;:22;;;;;:33;;;-1:-1:-1;;;5308:33:23;;;;5359:15;;;:56;;;5399:15;5378:37;;:10;:37;;;;5359:56;5351:98;;;;-1:-1:-1;;;5351:98:23;;;;;;;:::i;:::-;16961:11:::1;6415:1;6403:9;:13;6395:47;;;;-1:-1:-1::0;;;6395:47:23::1;;;;;;;:::i;:::-;6453:20;6476:22:::0;;;:9:::1;:22;::::0;;;;:27:::1;;::::0;;6517:17;;;6513:252:::1;;6572:22;::::0;;;:9:::1;:22;::::0;;;;:31:::1;;::::0;6558:9:::1;:46;;6550:87;;;;-1:-1:-1::0;;;6550:87:23::1;;;;;;;:::i;:::-;6513:252;;;6690:16;:12:::0;6705:1:::1;6690:16;:::i;:::-;6676:9;:31;;6668:86;;;;-1:-1:-1::0;;;6668:86:23::1;;;;;;;:::i;:::-;17017:11:::0;17030:12;6889:16;;6885:132:::2;;6929:22;::::0;;;:9:::2;:22;::::0;;;;:27:::2;;::::0;:43;-1:-1:-1;6929:43:23::2;6921:85;;;;-1:-1:-1::0;;;6921:85:23::2;;;;;;;:::i;:::-;17075:70:::3;17095:11;17108:6;17116:10;17128:9;17139:5;17075:19;:70::i;:::-;17155:41;17176:11;17189:6;17155:20;:41::i;:::-;6774:1:::2;;6385:397:::1;5460:1;4897:571:::0;;16810:393;;;;:::o;28214:287::-;28282:4;28319:22;;;:9;:22;;;;;:34;;;;28373:45;;;;;-1:-1:-1;;;28319:34:23;;;;;;28373:45;;28372:46;:76;;;;-1:-1:-1;28423:24:23;;;;;28372:76;:120;;;;;28475:15;28453:38;;:11;:38;;;;28372:120;28363:131;28214:287;-1:-1:-1;;;28214:287:23:o;8580:352::-;8699:14:::1;::::0;8667:7;8723:13;;;:9:::1;:13;::::0;;;;;;;8739:12:::1;8723:28:::0;;8793:25;8667:7;;8699:14;8793:25:::1;::::0;8810:7;;8793:25:::1;;:::i;:::-;;::::0;;-1:-1:-1;;8793:25:23;;::::1;::::0;;;;;;8783:36;;8793:25:::1;8783:36:::0;;::::1;::::0;8761:19:::1;::::0;;;:15:::1;:19:::0;;;;;;:58;8853:10:::1;::::0;8777:2;;8834:39:::1;::::0;::::1;::::0;8865:7;;8834:39:::1;:::i;:::-;;;;;;;;8900:6;:2:::0;8905:1:::1;8900:6;:::i;:::-;8883:14;:23:::0;8923:2;-1:-1:-1;4692:1:23::1;8580:352:::0;;;:::o;9806:438::-;10082:7;10101:19;10123:23;10138:7;10123:14;:23::i;:::-;10101:45;;10163:74;10175:11;10188:8;10198:10;10210:7;10219:10;10231:5;10163:11;:74::i;28716:176::-;28825:7;28785:11;6246:24;6258:11;6246;:24::i;:::-;6238:63;;;;-1:-1:-1;;;6238:63:23;;;;;;;:::i;:::-;-1:-1:-1;;28851:22:23::1;::::0;;;:9:::1;:22;::::0;;;;;;;:34:::1;::::0;;28716:176::o;29797:702::-;29874:7;29893:14;29910:22;29920:11;29910:9;:22::i;:::-;29893:39;-1:-1:-1;29946:27:23;;;29942:528;;30024:22;30049:31;;;:18;:31;;;;;;;30094:98;;;;-1:-1:-1;;;30094:98:23;;32346:2:25;30094:98:23;;;32328:21:25;32385:2;32365:18;;;32358:30;32424:34;32404:18;;;32397:62;32495:25;32475:18;;;32468:53;32538:19;;30094:98:23;32144:419:25;30094:98:23;30313:25;30323:14;30313:9;:25::i;:::-;30304:34;-1:-1:-1;30360:27:23;;;30352:107;;;;-1:-1:-1;;;30352:107:23;;32770:2:25;30352:107:23;;;32752:21:25;32809:2;32789:18;;;32782:30;32848:34;32828:18;;;32821:62;32919:34;32899:18;;;32892:62;-1:-1:-1;;;32970:19:25;;;32963:34;33014:19;;30352:107:23;32568:471:25;30352:107:23;29975:495;29942:528;30486:6;29797:702;-1:-1:-1;;29797:702:23:o;26944:1091::-;27166:18;27215:22;;;:9;:22;;;;;:35;;;;27301:27;;;;;27187:157;;27215:35;27252:17;;27271:28;;27330:13;27187:27;:157::i;:::-;27166:178;;27355:13;27570;:71;;;;-1:-1:-1;27588:41:23;;;;:11;:41;;;;;:53;;;;;;27587:54;27570:71;27566:401;;;27665:41;;;;:11;:41;;;;;:51;:77;27726:15;27665:77;;:51;;:77;27657:145;;;;-1:-1:-1;;;27657:145:23;;33246:2:25;27657:145:23;;;33228:21:25;33285:2;33265:18;;;33258:30;33324:34;33304:18;;;33297:62;33395:25;33375:18;;;33368:53;33438:19;;27657:145:23;33044:419:25;27657:145:23;-1:-1:-1;27824:14:23;27566:401;;;27878:22;;;;:9;:22;;;;;;;;:34;;:44;;27877:79;;27942:14;27877:79;;;27926:13;27877:79;27869:87;;27566:401;27976:52;28001:11;28014:6;28022:5;27976:24;:52::i;19824:615::-;4948:1;4915:22;;;:9;:22;;;;;:30;;;:22;;-1:-1:-1;;;4915:30:23;;;;4907:66;;;;-1:-1:-1;;;4907:66:23;;;;;;;:::i;:::-;4992:22;;;;:9;:22;;;;;:45;;;;;4991:46;4983:99;;;;-1:-1:-1;;;4983:99:23;;;;;;;:::i;:::-;5092:18;5113:22;;;:9;:22;;;;;:34;;;-1:-1:-1;;;5113:34:23;;;;5165:25;;;:66;;;5215:15;5194:37;;:11;:37;;;5165:66;5157:121;;;;-1:-1:-1;;;5157:121:23;;;;;;;:::i;:::-;5288:17;5308:22;;;:9;:22;;;;;:33;;;-1:-1:-1;;;5308:33:23;;;;5359:15;;;:56;;;5399:15;5378:37;;:10;:37;;;;5359:56;5351:98;;;;-1:-1:-1;;;5351:98:23;;;;;;;:::i;:::-;20009:11:::1;6415:1;6403:9;:13;6395:47;;;;-1:-1:-1::0;;;6395:47:23::1;;;;;;;:::i;:::-;6453:20;6476:22:::0;;;:9:::1;:22;::::0;;;;:27:::1;;::::0;;6517:17;;;6513:252:::1;;6572:22;::::0;;;:9:::1;:22;::::0;;;;:31:::1;;::::0;6558:9:::1;:46;;6550:87;;;;-1:-1:-1::0;;;6550:87:23::1;;;;;;;:::i;:::-;6513:252;;;6690:16;:12:::0;6705:1:::1;6690:16;:::i;:::-;6676:9;:31;;6668:86;;;;-1:-1:-1::0;;;6668:86:23::1;;;;;;;:::i;:::-;20065:11:::0;20078:12;6889:16;;6885:132:::2;;6929:22;::::0;;;:9:::2;:22;::::0;;;;:27:::2;;::::0;:43;-1:-1:-1;6929:43:23::2;6921:85;;;;-1:-1:-1::0;;;6921:85:23::2;;;;;;;:::i;:::-;20158:53:::3;::::0;;::::3;::::0;::::3;29907:19:25::0;;;29942:12;;;29935:28;;;20201:9:23::3;29979:12:25::0;;;29972:28;20124:21:23::3;::::0;30016:12:25;;20158:53:23::3;::::0;;-1:-1:-1;;20158:53:23;;::::3;::::0;;;;;;20148:64;;20158:53:::3;20148:64:::0;;::::3;::::0;;-1:-1:-1;20222:16:23::3;-1:-1:-1::0;;;;;20242:25:23;::::3;::::0;20241:52:::3;;20284:9;20241:52;;;20271:10;20241:52;20222:71;;20303:44;20320:11;20333:13;20303:16;:44::i;:::-;20357:74;20377:11;20390:13;20405:8;20415:9;20426:4;20357:19;:74::i;:::-;20113:326;;6774:1:::2;;6385:397:::1;5460:1;4897:571:::0;;19824:615;;;;;:::o;24771:364::-;4571:22;;;;:9;:22;;;;;:33;;;:22;;-1:-1:-1;;;;;4571:33:23;4557:10;:47;4549:89;;;;-1:-1:-1;;;4549:89:23;;;;;;;:::i;:::-;5546:22:::1;::::0;;;:9:::1;:22;::::0;;;;:45:::1;;::::0;24888:11;;5546:45:::1;;5538:94;;;;-1:-1:-1::0;;;5538:94:23::1;;;;;;;:::i;:::-;24972:5:::2;24924:22:::0;;;:9:::2;:22;::::0;;;;:45:::2;::::0;::::2;:53:::0;;-1:-1:-1;;24924:53:23::2;::::0;;-1:-1:-1;25050:30:23::2;::::0;25024:56:::2;::::0;-1:-1:-1;;;25050:30:23;::::2;;;25031:15;25024:56;:::i;:::-;24987:22;::::0;;;:9:::2;:22;::::0;;;;;:34:::2;;:93:::0;;::::2;::::0;;;::::2;-1:-1:-1::0;;;24987:93:23::2;-1:-1:-1::0;;;;;24987:93:23;;::::2;::::0;;;::::2;::::0;;;25095:33;;24997:11;;25095:33:::2;::::0;::::2;4648:1:::1;24771:364:::0;;:::o;24020:522::-;4571:22;;;;:9;:22;;;;;:33;;;:22;;-1:-1:-1;;;;;4571:33:23;4557:10;:47;4549:89;;;;-1:-1:-1;;;4549:89:23;;;;;;;:::i;:::-;4948:1:::1;4915:22:::0;;;:9:::1;:22;::::0;;;;:30:::1;;::::0;:22;;-1:-1:-1;;;4915:30:23;::::1;;;4907:66;;;;-1:-1:-1::0;;;4907:66:23::1;;;;;;;:::i;:::-;4992:22;::::0;;;:9:::1;:22;::::0;;;;:45:::1;;::::0;::::1;;4991:46;4983:99;;;;-1:-1:-1::0;;;4983:99:23::1;;;;;;;:::i;:::-;5092:18;5113:22:::0;;;:9:::1;:22;::::0;;;;:34:::1;;::::0;-1:-1:-1;;;5113:34:23;::::1;;;5165:25:::0;;;:66:::1;;;5215:15;5194:37;;:11;:37;;;5165:66;5157:121;;;;-1:-1:-1::0;;;5157:121:23::1;;;;;;;:::i;:::-;5288:17;5308:22:::0;;;:9:::1;:22;::::0;;;;:33:::1;;::::0;-1:-1:-1;;;5308:33:23;::::1;;;5359:15:::0;;;:56:::1;;;5399:15;5378:37;;:10;:37;;;;5359:56;5351:98;;;;-1:-1:-1::0;;;5351:98:23::1;;;;;;;:::i;:::-;24229:11:::0;24242:12;6889:16;;6885:132:::2;;6929:22;::::0;;;:9:::2;:22;::::0;;;;:27:::2;;::::0;:43;-1:-1:-1;6929:43:23::2;6921:85;;;;-1:-1:-1::0;;;6921:85:23::2;;;;;;;:::i;:::-;779:1:::3;24287:22:::0;;;:9:::3;:22;::::0;;;;:34:::3;;::::0;-1:-1:-1;;;24287:34:23;::::3;:47;:34;24279:126;;;::::0;-1:-1:-1;;;24279:126:23;;34605:2:25;24279:126:23::3;::::0;::::3;34587:21:25::0;34644:2;34624:18;;;34617:30;34683:34;34663:18;;;34656:62;34754:34;34734:18;;;34727:62;-1:-1:-1;;;34805:19:25;;;34798:33;34848:19;;24279:126:23::3;34403:470:25::0;24279:126:23::3;24415:22;::::0;;;:9:::3;:22;::::0;;;;;:45:::3;;:52:::0;;-1:-1:-1;;24415:52:23::3;24463:4;24415:52;::::0;;24482:53;-1:-1:-1;;;;;24482:53:23;::::3;::::0;24425:11;;24482:53:::3;::::0;24415:22;24482:53:::3;5460:1:::2;;4897:571:::1;;4648:1;24020:522:::0;;;;:::o;25731:507::-;4571:22;;;;:9;:22;;;;;:33;;;:22;;-1:-1:-1;;;;;4571:33:23;4557:10;:47;4549:89;;;;-1:-1:-1;;;4549:89:23;;;;;;;:::i;:::-;5546:22:::1;::::0;;;:9:::1;:22;::::0;;;;:45:::1;;::::0;25889:11;;5546:45:::1;;5538:94;;;;-1:-1:-1::0;;;5538:94:23::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;25932:24:23;::::2;25924:62;;;::::0;-1:-1:-1;;;25924:62:23;;35080:2:25;25924:62:23::2;::::0;::::2;35062:21:25::0;35119:2;35099:18;;;35092:30;35158:27;35138:18;;;35131:55;35203:18;;25924:62:23::2;34878:349:25::0;25924:62:23::2;26001:32;::::0;26026:6;;26013:11;;26001:32:::2;::::0;;;::::2;26092:5;26044:22:::0;;;:9:::2;:22;::::0;;;;:45:::2;;:53:::0;;-1:-1:-1;;26044:53:23::2;::::0;;26107:60:::2;::::0;26054:11;;26140:6;;26148:8;;26092:5;26107:19:::2;:60::i;:::-;-1:-1:-1::0;;;23419:22:23;;;;:9;:22;;;;;;;;:34;;;:43;23472:34;;:60;;-1:-1:-1;;;;;23472:60:23;-1:-1:-1;;;23516:15:23;23472:60;;;;;;25731:507::o;40716:549::-;40895:4;40963:12;40977:6;40985:4;40991;40997;40946:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;40936:67;;;;;;40915:17;:88;40911:131;;-1:-1:-1;41027:4:23;41020:11;;40911:131;41103:12;41117:6;41125:4;41131;41137:5;41086:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;41076:68;;;;;;41055:17;:89;41051:133;;-1:-1:-1;41168:5:23;41161:12;;41051:133;41194:64;;-1:-1:-1;;;41194:64:23;;35950:2:25;41194:64:23;;;35932:21:25;35989:2;35969:18;;;35962:30;36028:34;36008:18;;;36001:62;-1:-1:-1;;;36079:18:25;;;36072:52;36141:19;;41194:64:23;35748:418:25;40716:549:23;;;;;;;;:::o;41271:2526::-;41497:7;41506;41714:13;41710:482;;;41743:21;41889:26;;;:11;:26;;;;;:38;:26;;:38;;;;;41884:298;;41954:26;;;;:11;:26;;;;;41947:33;;-1:-1:-1;;41947:33:23;;;;;;-1:-1:-1;42006:12:23;;-1:-1:-1;42020:5:23;41998:28;;41884:298;42074:26;;;;:11;:26;;;;;:42;;;;;42134:33;;-1:-1:-1;;42134:33:23;;;;;;;;42074:42;-1:-1:-1;41710:482:23;42216:11;42206:6;:21;42202:1549;;-1:-1:-1;;;;;42248:21:23;;42244:1496;;42426:4;42418:12;;-1:-1:-1;;42468:17:23;;42453:11;:32;;:69;;;;-1:-1:-1;42521:1:23;42489:22;;;:9;:22;;;;;:29;;;:33;;42453:69;42449:231;;;42576:22;;;;:9;:22;;;;;:29;;;42546:60;;42556:11;;42569:5;;42546:9;:60::i;:::-;42660:1;42628:22;;;:9;:22;;;;;:29;;:33;42449:231;42244:1496;;;42713:5;-1:-1:-1;;;;;42705:13:23;:4;-1:-1:-1;;;;;42705:13:23;;42701:1039;;43339:27;43386:4;43370:12;:20;;43369:44;;43401:12;43369:44;;;43394:4;43369:44;43339:74;-1:-1:-1;43495:65:23;43505:11;43518:5;43525:34;43339:74;43525:12;:34;:::i;43495:65::-;43668:4;43660:12;;43705:19;43690:34;;42720:1020;42701:1039;-1:-1:-1;43769:12:23;;-1:-1:-1;43783:5:23;41271:2526;;;;;;;;;;;;:::o;40516:194::-;-1:-1:-1;;;;;40629:16:23;;:9;:16;;;;;;;;;;;:24;;40648:5;;40629:24;:::i;:::-;-1:-1:-1;;;;;40610:16:23;;:9;:16;;;;;;;;;;;;:43;;;;40668:35;6266:25:25;;;40610:16:23;;40677:11;;40668:35;;6239:18:25;40668:35:23;;;;;;;40516:194;;;:::o;22305:690::-;22469:24;22523:22;;;:9;:22;;;;;;;;:35;;;22506:109;;;;22560:23;;22585:4;;22591:8;;22601:13;;22506:109;;:::i;:::-;;;;;;;;;;;;;22496:120;;;;;;22469:147;;22731:1;22724:4;:8;22720:73;;;22748:22;;;;:9;:22;;;;;:27;;:34;;;22720:73;22802:22;;;;:9;:22;;;;;;;;;:35;;:54;;;22872:116;;36424:25:25;;;36465:18;;;36458:34;;;36508:18;;;36501:34;;;22957:15:23;36566:2:25;36551:18;;36544:34;36622:14;;36615:22;36609:3;36594:19;;36587:51;-1:-1:-1;;;;;22872:116:23;;;22802:22;;22872:116;;36411:3:25;36396:19;22872:116:23;;;;;;;22459:536;22305:690;;;;;:::o;23001:243::-;23091:22;;;;:9;:22;;;;;;;;:34;;;:43;;;23207:30;;;23181:56;;-1:-1:-1;;;23207:30:23;;;;23188:15;23181:56;:::i;:::-;23144:22;;;;:9;:22;;;;;;:34;;:93;;;;;;;-1:-1:-1;;;23144:93:23;-1:-1:-1;;;;;23144:93:23;;;;;;;;;;-1:-1:-1;23001:243:23:o;14050:1729::-;4770:22;;;;:9;:22;;;;;:30;;;:22;;-1:-1:-1;;;4770:30:23;;;;:35;4762:71;;;;-1:-1:-1;;;4762:71:23;;36851:2:25;4762:71:23;;;36833:21:25;36890:2;36870:18;;;36863:30;36929:25;36909:18;;;36902:53;36972:18;;4762:71:23;36649:347:25;4762:71:23;14350:1:::1;14340:7;:11;;;14332:48;;;::::0;-1:-1:-1;;;14332:48:23;;37203:2:25;14332:48:23::1;::::0;::::1;37185:21:25::0;37242:2;37222:18;;;37215:30;37281:26;37261:18;;;37254:54;37325:18;;14332:48:23::1;37001:348:25::0;14332:48:23::1;14409:8;14399:7;:18;;;14391:65;;;::::0;-1:-1:-1;;;14391:65:23;;37556:2:25;14391:65:23::1;::::0;::::1;37538:21:25::0;37595:2;37575:18;;;37568:30;37634:34;37614:18;;;37607:62;-1:-1:-1;;;37685:18:25;;;37678:32;37727:19;;14391:65:23::1;37354:398:25::0;14391:65:23::1;14485:9;-1:-1:-1::0;;;;;14886:26:23;::::1;::::0;;::::1;::::0;:54:::1;;-1:-1:-1::0;14916:10:23::1;-1:-1:-1::0;;;;;14916:24:23;::::1;;;14886:54;14882:348;;;-1:-1:-1::0;;;;;14979:36:23;::::1;14956:20;14979:36:::0;;;:24:::1;:36;::::0;;;;;15037:22;;::::1;;15029:71;;;::::0;-1:-1:-1;;;15029:71:23;;37959:2:25;15029:71:23::1;::::0;::::1;37941:21:25::0;37998:2;37978:18;;;37971:30;38037:34;38017:18;;;38010:62;-1:-1:-1;;;38088:18:25;;;38081:34;38132:19;;15029:71:23::1;37757:400:25::0;15029:71:23::1;15124:21;15133:12:::0;15124:6;:21:::1;:::i;:::-;-1:-1:-1::0;;;;;15183:21:23;::::1;:9;:21:::0;;;::::1;::::0;;;;;;;15115:30;;-1:-1:-1;15183:36:23::1;::::0;15207:12;;15183:36:::1;:::i;:::-;-1:-1:-1::0;;;;;15159:21:23;::::1;:9;:21:::0;;;::::1;::::0;;;;;;:60;-1:-1:-1;14882:348:23::1;15240:22;::::0;;;:9:::1;:22;::::0;;;;:50;;;15300:33:::1;;:46:::0;;15356::::1;15412:40:::0;;::::1;-1:-1:-1::0;;;15412:40:23::1;-1:-1:-1::0;;;;15356:46:23;;::::1;-1:-1:-1::0;;;15356:46:23::1;-1:-1:-1::0;;;;;;15356:46:23;;;-1:-1:-1;;;;;15300:46:23;::::1;15356::::0;;;;::::1;15412:40;;::::0;;15467:10;;15463:158:::1;;15493:22;::::0;;;:9:::1;:22;::::0;;;;;;;;:29:::1;;:38:::0;;;15550:60;;31632:25:25;;;31673:18;;;31666:34;;;15599:10:23::1;::::0;15493:22;;15550:60:::1;::::0;31605:18:25;15550:60:23::1;;;;;;;15463:158;15635:12:::0;;15631:141:::1;;15663:22;::::0;;;:9:::1;:22;::::0;;;;;;:31:::1;;:42:::0;;;15724:37;15673:11;;15724:37:::1;::::0;::::1;::::0;15697:8;6266:25:25;;6254:2;6239:18;;6120:177;15724:37:23::1;;;;;;;;14239:1540;14050:1729:::0;;;;;;;:::o;18484:403::-;916:1;18590:26;;;:11;:26;;;;;:36;;;:63;18582:109;;;;-1:-1:-1;;;18582:109:23;;38364:2:25;18582:109:23;;;38346:21:25;38403:2;38383:18;;;38376:30;38442:34;38422:18;;;38415:62;-1:-1:-1;;;38493:18:25;;;38486:31;38534:19;;18582:109:23;38162:397:25;18582:109:23;18702:25;18730:22;;;:9;:22;;;;;:30;;;:57;;1044:1;;-1:-1:-1;;;18730:30:23;;;;:57;:::i;:::-;18702:85;-1:-1:-1;18836:44:23;18702:85;18843:15;18836:44;:::i;:::-;18797:26;;;;:11;:26;;;;;;:83;;-1:-1:-1;;18797:83:23;;;;;;;;;;;;-1:-1:-1;;18484:403:23:o;14:226:25:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:25;;14:226;-1:-1:-1;14:226:25:o;437:127::-;498:10;493:3;489:20;486:1;479:31;529:4;526:1;519:15;553:4;550:1;543:15;569:275;640:2;634:9;705:2;686:13;;-1:-1:-1;;682:27:25;670:40;;-1:-1:-1;;;;;725:34:25;;761:22;;;722:62;719:88;;;787:18;;:::i;:::-;823:2;816:22;569:275;;-1:-1:-1;569:275:25:o;849:183::-;909:4;-1:-1:-1;;;;;934:6:25;931:30;928:56;;;964:18;;:::i;:::-;-1:-1:-1;1009:1:25;1005:14;1021:4;1001:25;;849:183::o;1037:723::-;1091:5;1144:3;1137:4;1129:6;1125:17;1121:27;1111:55;;1162:1;1159;1152:12;1111:55;1202:6;1189:20;1229:64;1245:47;1285:6;1245:47;:::i;:::-;1229:64;:::i;:::-;1317:3;1341:6;1336:3;1329:19;1373:4;1368:3;1364:14;1357:21;;1434:4;1424:6;1421:1;1417:14;1409:6;1405:27;1401:38;1387:52;;1462:3;1454:6;1451:15;1448:35;;;1479:1;1476;1469:12;1448:35;1515:4;1507:6;1503:17;1529:200;1545:6;1540:3;1537:15;1529:200;;;1637:17;;1667:18;;1714:4;1705:14;;;;1562;1529:200;;;-1:-1:-1;1747:7:25;1037:723;-1:-1:-1;;;;;1037:723:25:o;1765:173::-;1833:20;;-1:-1:-1;;;;;1882:31:25;;1872:42;;1862:70;;1928:1;1925;1918:12;1943:675;1997:5;2050:3;2043:4;2035:6;2031:17;2027:27;2017:55;;2068:1;2065;2058:12;2017:55;2108:6;2095:20;2135:64;2151:47;2191:6;2151:47;:::i;2135:64::-;2223:3;2247:6;2242:3;2235:19;2279:4;2274:3;2270:14;2263:21;;2340:4;2330:6;2327:1;2323:14;2315:6;2311:27;2307:38;2293:52;;2368:3;2360:6;2357:15;2354:35;;;2385:1;2382;2375:12;2354:35;2421:4;2413:6;2409:17;2435:152;2451:6;2446:3;2443:15;2435:152;;;2519:23;2538:3;2519:23;:::i;:::-;2507:36;;2572:4;2563:14;;;;2468;2435:152;;2623:1190;2818:6;2826;2834;2842;2850;2903:3;2891:9;2882:7;2878:23;2874:33;2871:53;;;2920:1;2917;2910:12;2871:53;2965:23;;;-1:-1:-1;3063:2:25;3048:18;;3035:32;-1:-1:-1;;;;;3079:30:25;;3076:50;;;3122:1;3119;3112:12;3076:50;3145:61;3198:7;3189:6;3178:9;3174:22;3145:61;:::i;:::-;3135:71;;;3259:2;3248:9;3244:18;3231:32;-1:-1:-1;;;;;3278:8:25;3275:32;3272:52;;;3320:1;3317;3310:12;3272:52;3343:63;3398:7;3387:8;3376:9;3372:24;3343:63;:::i;:::-;3333:73;;;3459:2;3448:9;3444:18;3431:32;-1:-1:-1;;;;;3478:8:25;3475:32;3472:52;;;3520:1;3517;3510:12;3472:52;3543:63;3598:7;3587:8;3576:9;3572:24;3543:63;:::i;:::-;3533:73;;;3659:3;3648:9;3644:19;3631:33;-1:-1:-1;;;;;3679:8:25;3676:32;3673:52;;;3721:1;3718;3711:12;3673:52;3744:63;3799:7;3788:8;3777:9;3773:24;3744:63;:::i;:::-;3734:73;;;2623:1190;;;;;;;;:::o;3818:541::-;3904:6;3912;3920;3928;3981:3;3969:9;3960:7;3956:23;3952:33;3949:53;;;3998:1;3995;3988:12;3949:53;4043:23;;;-1:-1:-1;4163:2:25;4148:18;;4135:32;;-1:-1:-1;4266:2:25;4251:18;;4238:32;;-1:-1:-1;4315:38:25;4349:2;4334:18;;4315:38;:::i;:::-;4305:48;;3818:541;;;;;;;:::o;4364:559::-;4407:5;4460:3;4453:4;4445:6;4441:17;4437:27;4427:55;;4478:1;4475;4468:12;4427:55;4518:6;4505:20;-1:-1:-1;;;;;4540:6:25;4537:30;4534:56;;;4570:18;;:::i;:::-;4614:59;4661:2;4638:17;;-1:-1:-1;;4634:31:25;4667:4;4630:42;4614:59;:::i;:::-;4698:6;4689:7;4682:23;4752:3;4745:4;4736:6;4728;4724:19;4720:30;4717:39;4714:59;;;4769:1;4766;4759:12;4714:59;4834:6;4827:4;4819:6;4815:17;4808:4;4799:7;4795:18;4782:59;4890:1;4861:20;;;4883:4;4857:31;4850:42;;;;4865:7;4364:559;-1:-1:-1;;;4364:559:25:o;4928:163::-;4995:20;;5055:10;5044:22;;5034:33;;5024:61;;5081:1;5078;5071:12;5096:1019;5226:6;5234;5242;5250;5258;5266;5274;5282;5335:3;5323:9;5314:7;5310:23;5306:33;5303:53;;;5352:1;5349;5342:12;5303:53;5397:23;;;-1:-1:-1;5495:2:25;5480:18;;5467:32;-1:-1:-1;;;;;5511:30:25;;5508:50;;;5554:1;5551;5544:12;5508:50;5577;5619:7;5610:6;5599:9;5595:22;5577:50;:::i;:::-;5567:60;;;5646:38;5680:2;5669:9;5665:18;5646:38;:::i;:::-;5636:48;;5703:37;5736:2;5725:9;5721:18;5703:37;:::i;:::-;5693:47;;5759:38;5792:3;5781:9;5777:19;5759:38;:::i;:::-;5096:1019;;;;-1:-1:-1;5096:1019:25;;;;5749:48;5870:3;5855:19;;5842:33;;-1:-1:-1;5974:3:25;5959:19;;5946:33;;6078:3;6063:19;6050:33;;-1:-1:-1;5096:1019:25;-1:-1:-1;;5096:1019:25:o;6302:614::-;6396:6;6404;6412;6420;6428;6481:3;6469:9;6460:7;6456:23;6452:33;6449:53;;;6498:1;6495;6488:12;6449:53;6543:23;;;-1:-1:-1;6663:2:25;6648:18;;6635:32;;-1:-1:-1;6712:38:25;6746:2;6731:18;;6712:38;:::i;:::-;6702:48;;6769:37;6802:2;6791:9;6787:18;6769:37;:::i;:::-;6302:614;;;;-1:-1:-1;6302:614:25;;6879:3;6864:19;6851:33;;6302:614;-1:-1:-1;;6302:614:25:o;7311:1561::-;7565:6;7573;7581;7589;7597;7605;7658:3;7646:9;7637:7;7633:23;7629:33;7626:53;;;7675:1;7672;7665:12;7626:53;7715:9;7702:23;-1:-1:-1;;;;;7740:6:25;7737:30;7734:50;;;7780:1;7777;7770:12;7734:50;7803:61;7856:7;7847:6;7836:9;7832:22;7803:61;:::i;:::-;7793:71;;;7917:2;7906:9;7902:18;7889:32;-1:-1:-1;;;;;7936:8:25;7933:32;7930:52;;;7978:1;7975;7968:12;7930:52;8001:63;8056:7;8045:8;8034:9;8030:24;8001:63;:::i;:::-;7991:73;;;8117:2;8106:9;8102:18;8089:32;-1:-1:-1;;;;;8136:8:25;8133:32;8130:52;;;8178:1;8175;8168:12;8130:52;8201:63;8256:7;8245:8;8234:9;8230:24;8201:63;:::i;:::-;8191:73;;;8317:2;8306:9;8302:18;8289:32;-1:-1:-1;;;;;8336:8:25;8333:32;8330:52;;;8378:1;8375;8368:12;8330:52;8401:63;8456:7;8445:8;8434:9;8430:24;8401:63;:::i;:::-;8391:73;;;8517:3;8506:9;8502:19;8489:33;-1:-1:-1;;;;;8537:8:25;8534:32;8531:52;;;8579:1;8576;8569:12;8531:52;8602:63;8657:7;8646:8;8635:9;8631:24;8602:63;:::i;:::-;8592:73;;;8718:3;8707:9;8703:19;8690:33;-1:-1:-1;;;;;8738:8:25;8735:32;8732:52;;;8780:1;8777;8770:12;8732:52;8803:63;8858:7;8847:8;8836:9;8832:24;8803:63;:::i;:::-;8793:73;;;7311:1561;;;;;;;;:::o;8877:898::-;8998:6;9006;9014;9022;9030;9038;9046;9099:3;9087:9;9078:7;9074:23;9070:33;9067:53;;;9116:1;9113;9106:12;9067:53;9161:23;;;-1:-1:-1;9259:2:25;9244:18;;9231:32;-1:-1:-1;;;;;9275:30:25;;9272:50;;;9318:1;9315;9308:12;9272:50;9341;9383:7;9374:6;9363:9;9359:22;9341:50;:::i;:::-;9331:60;;;9410:38;9444:2;9433:9;9429:18;9410:38;:::i;:::-;9400:48;;9467:37;9500:2;9489:9;9485:18;9467:37;:::i;:::-;9457:47;;9523:38;9556:3;9545:9;9541:19;9523:38;:::i;:::-;8877:898;;;;-1:-1:-1;8877:898:25;;;;9513:48;9634:3;9619:19;;9606:33;;-1:-1:-1;9738:3:25;9723:19;;;9710:33;;8877:898;-1:-1:-1;;8877:898:25:o;9780:587::-;9866:6;9874;9882;9890;9943:3;9931:9;9922:7;9918:23;9914:33;9911:53;;;9960:1;9957;9950:12;9911:53;-1:-1:-1;;10005:23:25;;;10125:2;10110:18;;10097:32;;-1:-1:-1;10228:2:25;10213:18;;10200:32;;10331:2;10316:18;10303:32;;-1:-1:-1;9780:587:25;-1:-1:-1;9780:587:25:o;10953:186::-;11012:6;11065:2;11053:9;11044:7;11040:23;11036:32;11033:52;;;11081:1;11078;11071:12;11033:52;11104:29;11123:9;11104:29;:::i;11144:777::-;11256:6;11264;11272;11280;11288;11296;11349:3;11337:9;11328:7;11324:23;11320:33;11317:53;;;11366:1;11363;11356:12;11317:53;11411:23;;;-1:-1:-1;11509:2:25;11494:18;;11481:32;-1:-1:-1;;;;;11525:30:25;;11522:50;;;11568:1;11565;11558:12;11522:50;11591;11633:7;11624:6;11613:9;11609:22;11591:50;:::i;:::-;11581:60;;;11660:38;11694:2;11683:9;11679:18;11660:38;:::i;:::-;11650:48;;11717:37;11750:2;11739:9;11735:18;11717:37;:::i;:::-;11707:47;;11773:38;11806:3;11795:9;11791:19;11773:38;:::i;:::-;11144:777;;;;-1:-1:-1;11144:777:25;;;;;11884:3;11869:19;;;11856:33;;-1:-1:-1;;11144:777:25:o;11926:466::-;12003:6;12011;12019;12072:2;12060:9;12051:7;12047:23;12043:32;12040:52;;;12088:1;12085;12078:12;12040:52;-1:-1:-1;;12133:23:25;;;12253:2;12238:18;;12225:32;;-1:-1:-1;12356:2:25;12341:18;;;12328:32;;11926:466;-1:-1:-1;11926:466:25:o;12746:322::-;12815:6;12868:2;12856:9;12847:7;12843:23;12839:32;12836:52;;;12884:1;12881;12874:12;12836:52;12924:9;12911:23;-1:-1:-1;;;;;12949:6:25;12946:30;12943:50;;;12989:1;12986;12979:12;12943:50;13012;13054:7;13045:6;13034:9;13030:22;13012:50;:::i;:::-;13002:60;12746:322;-1:-1:-1;;;;12746:322:25:o;14253:873::-;14375:6;14383;14391;14399;14407;14415;14468:3;14456:9;14447:7;14443:23;14439:33;14436:53;;;14485:1;14482;14475:12;14436:53;14525:9;14512:23;-1:-1:-1;;;;;14550:6:25;14547:30;14544:50;;;14590:1;14587;14580:12;14544:50;14613;14655:7;14646:6;14635:9;14631:22;14613:50;:::i;:::-;14603:60;;;14716:2;14705:9;14701:18;14688:32;-1:-1:-1;;;;;14735:8:25;14732:32;14729:52;;;14777:1;14774;14767:12;15131:737;15235:6;15243;15251;15259;15267;15275;15328:3;15316:9;15307:7;15303:23;15299:33;15296:53;;;15345:1;15342;15335:12;15296:53;15390:23;;;-1:-1:-1;15510:2:25;15495:18;;15482:32;;-1:-1:-1;15559:38:25;15593:2;15578:18;;15559:38;:::i;:::-;15549:48;-1:-1:-1;15670:2:25;15655:18;;15642:32;;-1:-1:-1;15773:3:25;15758:19;;15745:33;;-1:-1:-1;15823:39:25;15857:3;15842:19;;15823:39;:::i;:::-;15813:49;;15131:737;;;;;;;;:::o;15873:420::-;15950:6;15958;15966;16019:2;16007:9;15998:7;15994:23;15990:32;15987:52;;;16035:1;16032;16025:12;15987:52;16080:23;;;-1:-1:-1;16146:38:25;16180:2;16165:18;;16146:38;:::i;:::-;15873:420;;16136:48;;-1:-1:-1;;;16257:2:25;16242:18;;;;16229:32;;15873:420::o;16298:::-;16375:6;16383;16391;16444:2;16432:9;16423:7;16419:23;16415:32;16412:52;;;16460:1;16457;16450:12;16412:52;16505:23;;;-1:-1:-1;16625:2:25;16610:18;;16597:32;;-1:-1:-1;16674:38:25;16708:2;16693:18;;16674:38;:::i;:::-;16664:48;;16298:420;;;;;:::o;16723:350::-;16925:2;16907:21;;;16964:2;16944:18;;;16937:30;17003:28;16998:2;16983:18;;16976:56;17064:2;17049:18;;16723:350::o;17495:127::-;17556:10;17551:3;17547:20;17544:1;17537:31;17587:4;17584:1;17577:15;17611:4;17608:1;17601:15;17627:127;17688:10;17683:3;17679:20;17676:1;17669:31;17719:4;17716:1;17709:15;17743:4;17740:1;17733:15;17759:125;17824:9;;;17845:10;;;17842:36;;;17858:18;;:::i;17889:127::-;17950:10;17945:3;17941:20;17938:1;17931:31;17981:4;17978:1;17971:15;18005:4;18002:1;17995:15;18021:120;18061:1;18087;18077:35;;18092:18;;:::i;:::-;-1:-1:-1;18126:9:25;;18021:120::o;18146:128::-;18213:9;;;18234:11;;;18231:37;;;18248:18;;:::i;18279:343::-;18481:2;18463:21;;;18520:2;18500:18;;;18493:30;-1:-1:-1;;;18554:2:25;18539:18;;18532:49;18613:2;18598:18;;18279:343::o;18627:404::-;18829:2;18811:21;;;18868:2;18848:18;;;18841:30;18907:34;18902:2;18887:18;;18880:62;-1:-1:-1;;;18973:2:25;18958:18;;18951:38;19021:3;19006:19;;18627:404::o;19036:406::-;19238:2;19220:21;;;19277:2;19257:18;;;19250:30;19316:34;19311:2;19296:18;;19289:62;-1:-1:-1;;;19382:2:25;19367:18;;19360:40;19432:3;19417:19;;19036:406::o;19447:353::-;19649:2;19631:21;;;19688:2;19668:18;;;19661:30;19727:31;19722:2;19707:18;;19700:59;19791:2;19776:18;;19447:353::o;19805:345::-;20007:2;19989:21;;;20046:2;20026:18;;;20019:30;-1:-1:-1;;;20080:2:25;20065:18;;20058:51;20141:2;20126:18;;19805:345::o;20155:352::-;20357:2;20339:21;;;20396:2;20376:18;;;20369:30;20435;20430:2;20415:18;;20408:58;20498:2;20483:18;;20155:352::o;20512:168::-;20585:9;;;20616;;20633:15;;;20627:22;;20613:37;20603:71;;20654:18;;:::i;20685:406::-;20887:2;20869:21;;;20926:2;20906:18;;;20899:30;20965:34;20960:2;20945:18;;20938:62;-1:-1:-1;;;21031:2:25;21016:18;;21009:40;21081:3;21066:19;;20685:406::o;21096:353::-;21298:2;21280:21;;;21337:2;21317:18;;;21310:30;21376:31;21371:2;21356:18;;21349:59;21440:2;21425:18;;21096:353::o;22240:212::-;22282:3;22320:5;22314:12;22364:6;22357:4;22350:5;22346:16;22341:3;22335:36;22426:1;22390:16;;22415:13;;;-1:-1:-1;22390:16:25;;22240:212;-1:-1:-1;22240:212:25:o;22457:357::-;22660:19;;;22735:3;22713:16;;;-1:-1:-1;;;;;;22709:43:25;22704:2;22695:12;;22688:65;-1:-1:-1;22769:39:25;22804:2;22795:12;;22787:6;22769:39;:::i;26788:135::-;26827:3;26848:17;;;26845:43;;26868:18;;:::i;:::-;-1:-1:-1;26915:1:25;26904:13;;26788:135::o;27276:751::-;27571:19;;;27628:2;27624:15;;;-1:-1:-1;;27620:53:25;;;27615:2;27606:12;;27599:75;27730:3;27708:16;;;;-1:-1:-1;;;;;;27704:43:25;27699:2;27690:12;;27683:65;27773:2;27764:12;;27757:28;;;;27819:15;;;27815:53;;27810:2;27801:12;;27794:75;27904:15;;;27900:53;27894:3;27885:13;;27878:76;27979:3;27970:13;;27963:29;28017:3;28008:13;;27276:751::o;28032:300::-;28085:3;28123:5;28117:12;28150:6;28145:3;28138:19;28206:6;28199:4;28192:5;28188:16;28181:4;28176:3;28172:14;28166:47;28258:1;28251:4;28242:6;28237:3;28233:16;28229:27;28222:38;28321:4;28314:2;28310:7;28305:2;28297:6;28293:15;28289:29;28284:3;28280:39;28276:50;28269:57;;;28032:300;;;;:::o;28337:718::-;28650:6;28639:9;28632:25;28693:3;28688:2;28677:9;28673:18;28666:31;28613:4;28714:57;28766:3;28755:9;28751:19;28743:6;28714:57;:::i;:::-;-1:-1:-1;;;;;28807:32:25;;;;28802:2;28787:18;;28780:60;-1:-1:-1;28888:10:25;28876:23;;;28871:2;28856:18;;28849:51;28937:23;;;;28931:3;28916:19;;28909:52;28827:3;28977:19;;28970:35;29036:3;29021:19;29014:35;28706:65;28337:718;-1:-1:-1;;28337:718:25:o;31711:192::-;31842:3;31867:30;31893:3;31885:6;31867:30;:::i;31908:231::-;32057:2;32046:9;32039:21;32020:4;32077:56;32129:2;32118:9;32114:18;32106:6;32077:56;:::i;33468:353::-;33670:2;33652:21;;;33709:2;33689:18;;;33682:30;33748:31;33743:2;33728:18;;33721:59;33812:2;33797:18;;33468:353::o;33826:400::-;34028:2;34010:21;;;34067:2;34047:18;;;34040:30;34106:34;34101:2;34086:18;;34079:62;-1:-1:-1;;;34172:2:25;34157:18;;34150:34;34216:3;34201:19;;33826:400::o;34231:167::-;34326:10;34299:18;;;34319;;;34295:43;;34350:19;;34347:45;;;34372:18;;:::i;35232:511::-;35467:19;;;35511:2;35502:12;;35495:28;;;;35548:2;35539:12;;35532:28;;;;35598:2;35594:15;;;-1:-1:-1;;35590:53:25;35576:12;;;35569:75;35691:14;35684:22;35679:3;35675:32;35669:3;35660:13;;35653:55;35733:3;35724:13;;35232:511::o;38564:178::-;38603:1;38637:10;38634:1;38630:18;38667:3;38657:37;;38674:18;;:::i;:::-;38732:3;38719:10;38716:1;38712:18;38708:28;38703:33;;;38564:178;;;;:::o","linkReferences":{}},"methodIdentifiers":{"arbitrator_question_fees(address)":"6fa42742","askQuestion(uint256,string,address,uint32,uint32,uint256)":"762c38fd","askQuestionWithMinBond(uint256,string,address,uint32,uint32,uint256,uint256)":"484b93c4","assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)":"d44e293c","balanceOf(address)":"70a08231","cancelArbitration(bytes32)":"ebbdd2b0","claimMultipleAndWithdrawBalance(bytes32[],uint256[],bytes32[],address[],uint256[],bytes32[])":"28828b1e","claimWinnings(bytes32,bytes32[],address[],uint256[],bytes32[])":"1101a0fd","commitments(bytes32)":"839df945","createTemplate(string)":"83bf4609","createTemplateAndAskQuestion(string,string,address,uint32,uint32,uint256)":"a1130d04","fundAnswerBounty(bytes32)":"59245ff3","getArbitrator(bytes32)":"2518904c","getBestAnswer(bytes32)":"8d552d46","getBond(bytes32)":"26d6c97b","getBounty(bytes32)":"2417395c","getContentHash(bytes32)":"51577ea9","getFinalAnswer(bytes32)":"a462fb7b","getFinalAnswerIfMatches(bytes32,bytes32,address,uint32,uint256)":"12a203c3","getFinalizeTS(bytes32)":"acae8f4e","getHistoryHash(bytes32)":"82ffa9f7","getMinBond(bytes32)":"484c0714","getOpeningTS(bytes32)":"9e63fa6a","getTimeout(bytes32)":"9f1025c6","isFinalized(bytes32)":"7f8d429e","isPendingArbitration(bytes32)":"924532fb","isSettledTooSoon(bytes32)":"06c3b67a","notifyOfArbitrationRequest(bytes32,address,uint256)":"f6a94ecb","question_claims(bytes32)":"590158a7","questions(bytes32)":"95addb90","reopenQuestion(uint256,string,address,uint32,uint32,uint256,uint256,bytes32)":"1126a9dc","reopened_questions(bytes32)":"c081d8a3","reopener_questions(bytes32)":"e83bfb58","resultFor(bytes32)":"d09cc57e","resultForOnceSettled(bytes32)":"ab5a4e35","setQuestionFee(uint256)":"4df6ca2a","submitAnswer(bytes32,bytes32,uint256)":"77f325df","submitAnswerByArbitrator(bytes32,bytes32,address)":"fe92049d","submitAnswerCommitment(bytes32,bytes32,uint256,address)":"d7cff986","submitAnswerFor(bytes32,bytes32,uint256,address)":"111ec138","submitAnswerReveal(bytes32,bytes32,uint256,uint256)":"4dc266b4","template_hashes(uint256)":"4e60f883","templates(uint256)":"bc525652","withdraw()":"3ccfd60b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"answer_hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"answer\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"}],\"name\":\"LogAnswerReveal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"LogCancelArbitration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"answer\",\"type\":\"bytes32\"}],\"name\":\"LogFinalize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bounty_added\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bounty\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"LogFundAnswerBounty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"min_bond\",\"type\":\"uint256\"}],\"name\":\"LogMinimumBond\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"answer\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"history_hash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"is_commitment\",\"type\":\"bool\"}],\"name\":\"LogNewAnswer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"template_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"content_hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"arbitrator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"timeout\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"opening_ts\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"name\":\"LogNewQuestion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"template_id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"question_text\",\"type\":\"string\"}],\"name\":\"LogNewTemplate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"LogNotifyOfArbitrationRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"reopened_question_id\",\"type\":\"bytes32\"}],\"name\":\"LogReopenQuestion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"arbitrator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogSetQuestionFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"arbitrator_question_fees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"template_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"arbitrator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"timeout\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"opening_ts\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"askQuestion\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"template_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"arbitrator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"timeout\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"opening_ts\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min_bond\",\"type\":\"uint256\"}],\"name\":\"askQuestionWithMinBond\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"answer\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"payee_if_wrong\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"last_history_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"last_answer_or_commitment_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"last_answerer\",\"type\":\"address\"}],\"name\":\"assignWinnerAndSubmitAnswerByArbitrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"cancelArbitration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"question_ids\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"lengths\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"hist_hashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"bonds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"answers\",\"type\":\"bytes32[]\"}],\"name\":\"claimMultipleAndWithdrawBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"history_hashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"bonds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"answers\",\"type\":\"bytes32[]\"}],\"name\":\"claimWinnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"reveal_ts\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"is_revealed\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"revealed_answer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"}],\"name\":\"createTemplate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"arbitrator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"timeout\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"opening_ts\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"createTemplateAndAskQuestion\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"fundAnswerBounty\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"getArbitrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"getBestAnswer\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"getBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"getBounty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"getContentHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"getFinalAnswer\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"content_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"arbitrator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"min_timeout\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"min_bond\",\"type\":\"uint256\"}],\"name\":\"getFinalAnswerIfMatches\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"getFinalizeTS\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"getHistoryHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"getMinBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"getOpeningTS\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"getTimeout\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"isFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"isPendingArbitration\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"isSettledTooSoon\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"max_previous\",\"type\":\"uint256\"}],\"name\":\"notifyOfArbitrationRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"question_claims\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"last_bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"queued_funds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"questions\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"content_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"arbitrator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"opening_ts\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"timeout\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"finalize_ts\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"is_pending_arbitration\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"bounty\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"best_answer\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"history_hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min_bond\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"template_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"arbitrator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"timeout\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"opening_ts\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min_bond\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"reopens_question_id\",\"type\":\"bytes32\"}],\"name\":\"reopenQuestion\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"reopened_questions\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"reopener_questions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"resultFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"}],\"name\":\"resultForOnceSettled\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setQuestionFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"answer\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"max_previous\",\"type\":\"uint256\"}],\"name\":\"submitAnswer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"answer\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"answerer\",\"type\":\"address\"}],\"name\":\"submitAnswerByArbitrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"answer_hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"max_previous\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_answerer\",\"type\":\"address\"}],\"name\":\"submitAnswerCommitment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"answer\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"max_previous\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"answerer\",\"type\":\"address\"}],\"name\":\"submitAnswerFor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"question_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"answer\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"}],\"name\":\"submitAnswerReveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"template_hashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"templates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"askQuestion(uint256,string,address,uint32,uint32,uint256)\":{\"details\":\"Template data is only stored in the event logs, but its block number is kept in contract storage.\",\"params\":{\"arbitrator\":\"The arbitration contract that will have the final word on the answer if there is a dispute\",\"nonce\":\"A user-specified nonce used in the question ID. Change it to repeat a question.\",\"opening_ts\":\"If set, the earliest time it should be possible to answer the question.\",\"question\":\"A string containing the parameters that will be passed into the template to make the question\",\"template_id\":\"The ID number of the template the question will use\",\"timeout\":\"How long the contract should wait after the answer is changed before finalizing on that answer\"},\"returns\":{\"_0\":\"The ID of the newly-created question, created deterministically.\"}},\"askQuestionWithMinBond(uint256,string,address,uint32,uint32,uint256,uint256)\":{\"details\":\"Template data is only stored in the event logs, but its block number is kept in contract storage.\",\"params\":{\"arbitrator\":\"The arbitration contract that will have the final word on the answer if there is a dispute\",\"min_bond\":\"The minimum bond that may be used for an answer.\",\"nonce\":\"A user-specified nonce used in the question ID. Change it to repeat a question.\",\"opening_ts\":\"If set, the earliest time it should be possible to answer the question.\",\"question\":\"A string containing the parameters that will be passed into the template to make the question\",\"template_id\":\"The ID number of the template the question will use\",\"timeout\":\"How long the contract should wait after the answer is changed before finalizing on that answer\"},\"returns\":{\"_0\":\"The ID of the newly-created question, created deterministically.\"}},\"assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)\":{\"details\":\"Doesn't require (or allow) a bond.\",\"params\":{\"answer\":\"The answer, encoded into bytes32\",\"last_answer_or_commitment_id\":\"The last answer given, or the commitment ID if it was a commitment.\",\"last_answerer\":\"The address that supplied the last answer\",\"last_history_hash\":\"The history hash before the final one\",\"payee_if_wrong\":\"The account to by credited as winner if the last answer given is wrong, usually the account that paid the arbitrator\",\"question_id\":\"The ID of the question\"}},\"cancelArbitration(bytes32)\":{\"details\":\"Useful when doing arbitration across chains that can't be requested atomically\",\"params\":{\"question_id\":\"The ID of the question\"}},\"claimMultipleAndWithdrawBalance(bytes32[],uint256[],bytes32[],address[],uint256[],bytes32[])\":{\"details\":\"Can be called by anyone to assign bonds/bounties, but funds are only withdrawn for the user making the call.\",\"params\":{\"addrs\":\"In a single list for all supplied questions, the address of each answerer or commitment sender\",\"answers\":\"In a single list for all supplied questions, each answer supplied, or commitment ID \",\"bonds\":\"In a single list for all supplied questions, the bond supplied with each answer or commitment\",\"hist_hashes\":\"In a single list for all supplied questions, the hash of each history entry.\",\"lengths\":\"The number of history entries you will supply for each question ID\",\"question_ids\":\"The IDs of the questions you want to claim for\"}},\"claimWinnings(bytes32,bytes32[],address[],uint256[],bytes32[])\":{\"details\":\"Works up the chain and assign bonds to the person who gave the right answer If someone gave the winning answer earlier, they must get paid from the higher bond That means we can't pay out the bond added at n until we have looked at n-1 The first answer is authenticated by checking against the stored history_hash. One of the inputs to history_hash is the history_hash before it, so we use that to authenticate the next entry, etc Once we get to a null hash we'll know we're done and there are no more answers. Usually you would call the whole thing in a single transaction, but if not then the data is persisted to pick up later.\",\"params\":{\"addrs\":\"Last-to-first, the address of each answerer or commitment sender\",\"answers\":\"Last-to-first, each answer supplied, or commitment ID if the answer was supplied with commit->reveal\",\"bonds\":\"Last-to-first, the bond supplied with each answer or commitment\",\"history_hashes\":\"Second-last-to-first, the hash of each history entry. (Final one should be empty).\",\"question_id\":\"The ID of the question\"}},\"constructor\":{\"details\":\"Creates some generalized templates for different question types used in the DApp.\"},\"createTemplate(string)\":{\"details\":\"Template data is only stored in the event logs, but its block number is kept in contract storage.\",\"params\":{\"content\":\"The template content\"},\"returns\":{\"_0\":\"The ID of the newly-created template, which is created sequentially.\"}},\"createTemplateAndAskQuestion(string,string,address,uint32,uint32,uint256)\":{\"details\":\"Template data is only stored in the event logs, but its block number is kept in contract storage.\",\"params\":{\"arbitrator\":\"The arbitration contract that will have the final word on the answer if there is a dispute\",\"content\":\"The template content\",\"nonce\":\"A user-specified nonce used in the question ID. Change it to repeat a question.\",\"opening_ts\":\"If set, the earliest time it should be possible to answer the question.\",\"question\":\"A string containing the parameters that will be passed into the template to make the question\",\"timeout\":\"How long the contract should wait after the answer is changed before finalizing on that answer\"},\"returns\":{\"_0\":\"The ID of the newly-created template, which is created sequentially.\"}},\"fundAnswerBounty(bytes32)\":{\"details\":\"Add bounty funds after the initial question creation. Can be done any time until the question is finalized.\",\"params\":{\"question_id\":\"The ID of the question you wish to fund\"}},\"getArbitrator(bytes32)\":{\"params\":{\"question_id\":\"The ID of the question \"}},\"getBestAnswer(bytes32)\":{\"params\":{\"question_id\":\"The ID of the question \"}},\"getBond(bytes32)\":{\"params\":{\"question_id\":\"The ID of the question \"}},\"getBounty(bytes32)\":{\"details\":\"Set back to zero once the bounty has been claimed\",\"params\":{\"question_id\":\"The ID of the question \"}},\"getContentHash(bytes32)\":{\"params\":{\"question_id\":\"The ID of the question \"}},\"getFinalAnswer(bytes32)\":{\"params\":{\"question_id\":\"The ID of the question\"},\"returns\":{\"_0\":\"The answer formatted as a bytes32\"}},\"getFinalAnswerIfMatches(bytes32,bytes32,address,uint32,uint256)\":{\"details\":\"Reverts if the question is not finalized, or if it does not match the specified criteria.\",\"params\":{\"arbitrator\":\"The arbitrator chosen for the question (regardless of whether they are asked to arbitrate)\",\"content_hash\":\"The hash of the question content (template ID + opening time + question parameter string)\",\"min_bond\":\"The bond sent with the final answer must be this high or higher\",\"min_timeout\":\"The timeout set in the initial question settings must be this high or higher\",\"question_id\":\"The ID of the question\"},\"returns\":{\"_0\":\"The answer formatted as a bytes32\"}},\"getFinalizeTS(bytes32)\":{\"params\":{\"question_id\":\"The ID of the question \"}},\"getHistoryHash(bytes32)\":{\"details\":\"Updated on each answer, then rewound as each is claimed\",\"params\":{\"question_id\":\"The ID of the question \"}},\"getMinBond(bytes32)\":{\"params\":{\"question_id\":\"The ID of the question\"}},\"getOpeningTS(bytes32)\":{\"params\":{\"question_id\":\"The ID of the question \"}},\"getTimeout(bytes32)\":{\"params\":{\"question_id\":\"The ID of the question \"}},\"isFinalized(bytes32)\":{\"params\":{\"question_id\":\"The ID of the question\"},\"returns\":{\"_0\":\"Return true if finalized\"}},\"isPendingArbitration(bytes32)\":{\"params\":{\"question_id\":\"The ID of the question \"}},\"isSettledTooSoon(bytes32)\":{\"params\":{\"question_id\":\"The ID of the question \"}},\"notifyOfArbitrationRequest(bytes32,address,uint256)\":{\"details\":\"The arbitrator contract is trusted to only call this if they've been paid, and tell us who paid them.\",\"params\":{\"max_previous\":\"If specified, reverts if a bond higher than this was submitted after you sent your transaction.\",\"question_id\":\"The ID of the question\",\"requester\":\"The account that requested arbitration\"}},\"reopenQuestion(uint256,string,address,uint32,uint32,uint256,uint256,bytes32)\":{\"details\":\"A special version of askQuestion() that replaces a previous question that was settled too soon\",\"params\":{\"arbitrator\":\"The arbitration contract that will have the final word on the answer if there is a dispute\",\"min_bond\":\"The minimum bond that can be used to provide the first answer.\",\"nonce\":\"A user-specified nonce used in the question ID. Change it to repeat a question.\",\"opening_ts\":\"If set, the earliest time it should be possible to answer the question.\",\"question\":\"A string containing the parameters that will be passed into the template to make the question\",\"reopens_question_id\":\"The ID of the question this reopens\",\"template_id\":\"The ID number of the template the question will use\",\"timeout\":\"How long the contract should wait after the answer is changed before finalizing on that answer\"},\"returns\":{\"_0\":\"The ID of the newly-created question, created deterministically.\"}},\"resultFor(bytes32)\":{\"params\":{\"question_id\":\"The ID of the question\"},\"returns\":{\"_0\":\"The answer formatted as a bytes32\"}},\"resultForOnceSettled(bytes32)\":{\"params\":{\"question_id\":\"The ID of the question \"}},\"setQuestionFee(uint256)\":{\"details\":\"The per-question fee, charged when a question is asked, is intended as an anti-spam measure.\",\"params\":{\"fee\":\"The fee to be charged by the arbitrator when a question is asked\"}},\"submitAnswer(bytes32,bytes32,uint256)\":{\"details\":\"Adds the answer to the history and updates the current \\\"best\\\" answer. May be subject to front-running attacks; Substitute submitAnswerCommitment()->submitAnswerReveal() to prevent them.\",\"params\":{\"answer\":\"The answer, encoded into bytes32\",\"max_previous\":\"If specified, reverts if a bond higher than this was submitted after you sent your transaction.\",\"question_id\":\"The ID of the question\"}},\"submitAnswerByArbitrator(bytes32,bytes32,address)\":{\"details\":\"Doesn't require (or allow) a bond. If the current final answer is correct, the account should be whoever submitted it. If the current final answer is wrong, the account should be whoever paid for arbitration. However, the answerer stipulations are not enforced by the contract.\",\"params\":{\"answer\":\"The answer, encoded into bytes32\",\"answerer\":\"The account credited with this answer for the purpose of bond claims\",\"question_id\":\"The ID of the question\"}},\"submitAnswerCommitment(bytes32,bytes32,uint256,address)\":{\"details\":\"Creates a hash, commitment_id, uniquely identifying this answer, to this question, with this bond. The commitment_id is stored in the answer history where the answer would normally go. Does not update the current best answer - this is left to the later submitAnswerReveal() transaction.Specifying the answerer is useful if you want to delegate the commit-and-reveal to a third-party.\",\"params\":{\"_answerer\":\"If specified, the address to be given as the question answerer. Defaults to the sender.\",\"answer_hash\":\"The hash of your answer, plus a nonce that you will later reveal\",\"max_previous\":\"If specified, reverts if a bond higher than this was submitted after you sent your transaction.\",\"question_id\":\"The ID of the question\"}},\"submitAnswerFor(bytes32,bytes32,uint256,address)\":{\"details\":\"Adds the answer to the history and updates the current \\\"best\\\" answer. May be subject to front-running attacks; Substitute submitAnswerCommitment()->submitAnswerReveal() to prevent them.\",\"params\":{\"answer\":\"The answer, encoded into bytes32\",\"answerer\":\"The account to which the answer should be credited\",\"max_previous\":\"If specified, reverts if a bond higher than this was submitted after you sent your transaction.\",\"question_id\":\"The ID of the question\"}},\"submitAnswerReveal(bytes32,bytes32,uint256,uint256)\":{\"details\":\"Checks the parameters supplied recreate an existing commitment, and stores the revealed answer Updates the current answer unless someone has since supplied a new answer with a higher bond msg.sender is intentionally not restricted to the user who originally sent the commitment;  For example, the user may want to provide the answer+nonce to a third-party service and let them send the tx NB If we are pending arbitration, it will be up to the arbitrator to wait and see any outstanding reveal is sent\",\"params\":{\"answer\":\"The answer, encoded as bytes32\",\"bond\":\"The bond that you paid in your submitAnswerCommitment() transaction\",\"nonce\":\"The nonce that, combined with the answer, recreates the answer_hash you gave in submitAnswerCommitment()\",\"question_id\":\"The ID of the question\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"askQuestion(uint256,string,address,uint32,uint32,uint256)\":{\"notice\":\"Ask a new question and return the ID\"},\"askQuestionWithMinBond(uint256,string,address,uint32,uint32,uint256,uint256)\":{\"notice\":\"Ask a new question and return the ID\"},\"assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)\":{\"notice\":\"Submit the answer for a question, for use by the arbitrator, working out the appropriate winner based on the last answer details.\"},\"cancelArbitration(bytes32)\":{\"notice\":\"Cancel a previously-requested arbitration and extend the timeout\"},\"claimMultipleAndWithdrawBalance(bytes32[],uint256[],bytes32[],address[],uint256[],bytes32[])\":{\"notice\":\"Convenience function to assign bounties/bonds for multiple questions in one go, then withdraw all your funds. Caller must provide the answer history for each question, in reverse order\"},\"claimWinnings(bytes32,bytes32[],address[],uint256[],bytes32[])\":{\"notice\":\"Assigns the winnings (bounty and bonds) to everyone who gave the accepted answer Caller must provide the answer history, in reverse order\"},\"constructor\":{\"notice\":\"Constructor, sets up some initial templates\"},\"createTemplate(string)\":{\"notice\":\"Create a reusable template, which should be a JSON document. Placeholders should use gettext() syntax, eg %s.\"},\"createTemplateAndAskQuestion(string,string,address,uint32,uint32,uint256)\":{\"notice\":\"Create a new reusable template and use it to ask a question\"},\"fundAnswerBounty(bytes32)\":{\"notice\":\"Add funds to the bounty for a question\"},\"getArbitrator(bytes32)\":{\"notice\":\"Returns the arbitrator address for the question\"},\"getBestAnswer(bytes32)\":{\"notice\":\"Returns the current best answer\"},\"getBond(bytes32)\":{\"notice\":\"Returns the highest bond posted so far for a question\"},\"getBounty(bytes32)\":{\"notice\":\"Returns the current total unclaimed bounty\"},\"getContentHash(bytes32)\":{\"notice\":\"Returns the questions's content hash, identifying the question content\"},\"getFinalAnswer(bytes32)\":{\"notice\":\"(Deprecated) Return the final answer to the specified question, or revert if there isn't one\"},\"getFinalAnswerIfMatches(bytes32,bytes32,address,uint32,uint256)\":{\"notice\":\"Return the final answer to the specified question, provided it matches the specified criteria.\"},\"getFinalizeTS(bytes32)\":{\"notice\":\"Returns the timestamp at which the question will be/was finalized\"},\"getHistoryHash(bytes32)\":{\"notice\":\"Returns the history hash of the question \"},\"getMinBond(bytes32)\":{\"notice\":\"Returns the minimum bond that can answer the question\"},\"getOpeningTS(bytes32)\":{\"notice\":\"Returns the timestamp when the question can first be answered\"},\"getTimeout(bytes32)\":{\"notice\":\"Returns the timeout in seconds used after each answer\"},\"isFinalized(bytes32)\":{\"notice\":\"Report whether the answer to the specified question is finalized\"},\"isPendingArbitration(bytes32)\":{\"notice\":\"Returns whether the question is pending arbitration\"},\"isSettledTooSoon(bytes32)\":{\"notice\":\"Returns whether the question was answered before it had an answer, ie resolved to UNRESOLVED_ANSWER\"},\"notifyOfArbitrationRequest(bytes32,address,uint256)\":{\"notice\":\"Notify the contract that the arbitrator has been paid for a question, freezing it pending their decision.\"},\"reopenQuestion(uint256,string,address,uint32,uint32,uint256,uint256,bytes32)\":{\"notice\":\"Asks a new question reopening a previously-asked question that was settled too soon\"},\"resultFor(bytes32)\":{\"notice\":\"Return the final answer to the specified question, or revert if there isn't one\"},\"resultForOnceSettled(bytes32)\":{\"notice\":\"Like resultFor(), but errors out if settled too soon, or returns the result of a replacement if it was reopened at the right time and settled\"},\"setQuestionFee(uint256)\":{\"notice\":\"Function for arbitrator to set an optional per-question fee. \"},\"submitAnswer(bytes32,bytes32,uint256)\":{\"notice\":\"Submit an answer for a question.\"},\"submitAnswerByArbitrator(bytes32,bytes32,address)\":{\"notice\":\"Submit the answer for a question, for use by the arbitrator.\"},\"submitAnswerCommitment(bytes32,bytes32,uint256,address)\":{\"notice\":\"Submit the hash of an answer, laying your claim to that answer if you reveal it in a subsequent transaction.\"},\"submitAnswerFor(bytes32,bytes32,uint256,address)\":{\"notice\":\"Submit an answer for a question, crediting it to the specified account.\"},\"submitAnswerReveal(bytes32,bytes32,uint256,uint256)\":{\"notice\":\"Submit the answer whose hash you sent in a previous submitAnswerCommitment() transaction\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"staticlib/RealityETH-3.0.sol\":\"RealityETH_v3_0\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"staticlib/RealityETH-3.0.sol\":{\"keccak256\":\"0x7c94ebd3ddc3e1d0a99d529832712aa2f898f607bcc2f6f7180f15a95482359b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://761b8a3ff3a0e124da15134f8774849f1c8e87eaebb8c63389149d1698b82363\",\"dweb:/ipfs/QmQ9NTeYZFmHGBP3AfzFvZHvjngWy73K2poUJkokDukrLz\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32","indexed":true},{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"bytes32","name":"answer_hash","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"answer","type":"bytes32","indexed":false},{"internalType":"uint256","name":"nonce","type":"uint256","indexed":false},{"internalType":"uint256","name":"bond","type":"uint256","indexed":false}],"type":"event","name":"LogAnswerReveal","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32","indexed":true}],"type":"event","name":"LogCancelArbitration","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32","indexed":true},{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"LogClaim","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"answer","type":"bytes32","indexed":true}],"type":"event","name":"LogFinalize","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32","indexed":true},{"internalType":"uint256","name":"bounty_added","type":"uint256","indexed":false},{"internalType":"uint256","name":"bounty","type":"uint256","indexed":false},{"internalType":"address","name":"user","type":"address","indexed":true}],"type":"event","name":"LogFundAnswerBounty","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32","indexed":true},{"internalType":"uint256","name":"min_bond","type":"uint256","indexed":false}],"type":"event","name":"LogMinimumBond","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"answer","type":"bytes32","indexed":false},{"internalType":"bytes32","name":"question_id","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"history_hash","type":"bytes32","indexed":false},{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"bond","type":"uint256","indexed":false},{"internalType":"uint256","name":"ts","type":"uint256","indexed":false},{"internalType":"bool","name":"is_commitment","type":"bool","indexed":false}],"type":"event","name":"LogNewAnswer","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32","indexed":true},{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"template_id","type":"uint256","indexed":false},{"internalType":"string","name":"question","type":"string","indexed":false},{"internalType":"bytes32","name":"content_hash","type":"bytes32","indexed":true},{"internalType":"address","name":"arbitrator","type":"address","indexed":false},{"internalType":"uint32","name":"timeout","type":"uint32","indexed":false},{"internalType":"uint32","name":"opening_ts","type":"uint32","indexed":false},{"internalType":"uint256","name":"nonce","type":"uint256","indexed":false},{"internalType":"uint256","name":"created","type":"uint256","indexed":false}],"type":"event","name":"LogNewQuestion","anonymous":false},{"inputs":[{"internalType":"uint256","name":"template_id","type":"uint256","indexed":true},{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"string","name":"question_text","type":"string","indexed":false}],"type":"event","name":"LogNewTemplate","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32","indexed":true},{"internalType":"address","name":"user","type":"address","indexed":true}],"type":"event","name":"LogNotifyOfArbitrationRequest","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"reopened_question_id","type":"bytes32","indexed":true}],"type":"event","name":"LogReopenQuestion","anonymous":false},{"inputs":[{"internalType":"address","name":"arbitrator","type":"address","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"LogSetQuestionFee","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"LogWithdraw","anonymous":false},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"arbitrator_question_fees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"template_id","type":"uint256"},{"internalType":"string","name":"question","type":"string"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint32","name":"timeout","type":"uint32"},{"internalType":"uint32","name":"opening_ts","type":"uint32"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"payable","type":"function","name":"askQuestion","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"template_id","type":"uint256"},{"internalType":"string","name":"question","type":"string"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint32","name":"timeout","type":"uint32"},{"internalType":"uint32","name":"opening_ts","type":"uint32"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"min_bond","type":"uint256"}],"stateMutability":"payable","type":"function","name":"askQuestionWithMinBond","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"bytes32","name":"answer","type":"bytes32"},{"internalType":"address","name":"payee_if_wrong","type":"address"},{"internalType":"bytes32","name":"last_history_hash","type":"bytes32"},{"internalType":"bytes32","name":"last_answer_or_commitment_id","type":"bytes32"},{"internalType":"address","name":"last_answerer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"assignWinnerAndSubmitAnswerByArbitrator"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"cancelArbitration"},{"inputs":[{"internalType":"bytes32[]","name":"question_ids","type":"bytes32[]"},{"internalType":"uint256[]","name":"lengths","type":"uint256[]"},{"internalType":"bytes32[]","name":"hist_hashes","type":"bytes32[]"},{"internalType":"address[]","name":"addrs","type":"address[]"},{"internalType":"uint256[]","name":"bonds","type":"uint256[]"},{"internalType":"bytes32[]","name":"answers","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"claimMultipleAndWithdrawBalance"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"bytes32[]","name":"history_hashes","type":"bytes32[]"},{"internalType":"address[]","name":"addrs","type":"address[]"},{"internalType":"uint256[]","name":"bonds","type":"uint256[]"},{"internalType":"bytes32[]","name":"answers","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"claimWinnings"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"commitments","outputs":[{"internalType":"uint32","name":"reveal_ts","type":"uint32"},{"internalType":"bool","name":"is_revealed","type":"bool"},{"internalType":"bytes32","name":"revealed_answer","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"content","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createTemplate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"content","type":"string"},{"internalType":"string","name":"question","type":"string"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint32","name":"timeout","type":"uint32"},{"internalType":"uint32","name":"opening_ts","type":"uint32"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"payable","type":"function","name":"createTemplateAndAskQuestion","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"fundAnswerBounty"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getArbitrator","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getBestAnswer","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getBond","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getBounty","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getContentHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getFinalAnswer","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"bytes32","name":"content_hash","type":"bytes32"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint32","name":"min_timeout","type":"uint32"},{"internalType":"uint256","name":"min_bond","type":"uint256"}],"stateMutability":"view","type":"function","name":"getFinalAnswerIfMatches","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getFinalizeTS","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getHistoryHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getMinBond","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getOpeningTS","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getTimeout","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isFinalized","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isPendingArbitration","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isSettledTooSoon","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"address","name":"requester","type":"address"},{"internalType":"uint256","name":"max_previous","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"notifyOfArbitrationRequest"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"question_claims","outputs":[{"internalType":"address","name":"payee","type":"address"},{"internalType":"uint256","name":"last_bond","type":"uint256"},{"internalType":"uint256","name":"queued_funds","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"questions","outputs":[{"internalType":"bytes32","name":"content_hash","type":"bytes32"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint32","name":"opening_ts","type":"uint32"},{"internalType":"uint32","name":"timeout","type":"uint32"},{"internalType":"uint32","name":"finalize_ts","type":"uint32"},{"internalType":"bool","name":"is_pending_arbitration","type":"bool"},{"internalType":"uint256","name":"bounty","type":"uint256"},{"internalType":"bytes32","name":"best_answer","type":"bytes32"},{"internalType":"bytes32","name":"history_hash","type":"bytes32"},{"internalType":"uint256","name":"bond","type":"uint256"},{"internalType":"uint256","name":"min_bond","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"template_id","type":"uint256"},{"internalType":"string","name":"question","type":"string"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint32","name":"timeout","type":"uint32"},{"internalType":"uint32","name":"opening_ts","type":"uint32"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"min_bond","type":"uint256"},{"internalType":"bytes32","name":"reopens_question_id","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"reopenQuestion","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"reopened_questions","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"reopener_questions","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"resultFor","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"resultForOnceSettled","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"fee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setQuestionFee"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"bytes32","name":"answer","type":"bytes32"},{"internalType":"uint256","name":"max_previous","type":"uint256"}],"stateMutability":"payable","type":"function","name":"submitAnswer"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"bytes32","name":"answer","type":"bytes32"},{"internalType":"address","name":"answerer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"submitAnswerByArbitrator"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"bytes32","name":"answer_hash","type":"bytes32"},{"internalType":"uint256","name":"max_previous","type":"uint256"},{"internalType":"address","name":"_answerer","type":"address"}],"stateMutability":"payable","type":"function","name":"submitAnswerCommitment"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"bytes32","name":"answer","type":"bytes32"},{"internalType":"uint256","name":"max_previous","type":"uint256"},{"internalType":"address","name":"answerer","type":"address"}],"stateMutability":"payable","type":"function","name":"submitAnswerFor"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"bytes32","name":"answer","type":"bytes32"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"bond","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"submitAnswerReveal"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"template_hashes","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"templates","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"withdraw"}],"devdoc":{"kind":"dev","methods":{"askQuestion(uint256,string,address,uint32,uint32,uint256)":{"details":"Template data is only stored in the event logs, but its block number is kept in contract storage.","params":{"arbitrator":"The arbitration contract that will have the final word on the answer if there is a dispute","nonce":"A user-specified nonce used in the question ID. Change it to repeat a question.","opening_ts":"If set, the earliest time it should be possible to answer the question.","question":"A string containing the parameters that will be passed into the template to make the question","template_id":"The ID number of the template the question will use","timeout":"How long the contract should wait after the answer is changed before finalizing on that answer"},"returns":{"_0":"The ID of the newly-created question, created deterministically."}},"askQuestionWithMinBond(uint256,string,address,uint32,uint32,uint256,uint256)":{"details":"Template data is only stored in the event logs, but its block number is kept in contract storage.","params":{"arbitrator":"The arbitration contract that will have the final word on the answer if there is a dispute","min_bond":"The minimum bond that may be used for an answer.","nonce":"A user-specified nonce used in the question ID. Change it to repeat a question.","opening_ts":"If set, the earliest time it should be possible to answer the question.","question":"A string containing the parameters that will be passed into the template to make the question","template_id":"The ID number of the template the question will use","timeout":"How long the contract should wait after the answer is changed before finalizing on that answer"},"returns":{"_0":"The ID of the newly-created question, created deterministically."}},"assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)":{"details":"Doesn't require (or allow) a bond.","params":{"answer":"The answer, encoded into bytes32","last_answer_or_commitment_id":"The last answer given, or the commitment ID if it was a commitment.","last_answerer":"The address that supplied the last answer","last_history_hash":"The history hash before the final one","payee_if_wrong":"The account to by credited as winner if the last answer given is wrong, usually the account that paid the arbitrator","question_id":"The ID of the question"}},"cancelArbitration(bytes32)":{"details":"Useful when doing arbitration across chains that can't be requested atomically","params":{"question_id":"The ID of the question"}},"claimMultipleAndWithdrawBalance(bytes32[],uint256[],bytes32[],address[],uint256[],bytes32[])":{"details":"Can be called by anyone to assign bonds/bounties, but funds are only withdrawn for the user making the call.","params":{"addrs":"In a single list for all supplied questions, the address of each answerer or commitment sender","answers":"In a single list for all supplied questions, each answer supplied, or commitment ID ","bonds":"In a single list for all supplied questions, the bond supplied with each answer or commitment","hist_hashes":"In a single list for all supplied questions, the hash of each history entry.","lengths":"The number of history entries you will supply for each question ID","question_ids":"The IDs of the questions you want to claim for"}},"claimWinnings(bytes32,bytes32[],address[],uint256[],bytes32[])":{"details":"Works up the chain and assign bonds to the person who gave the right answer If someone gave the winning answer earlier, they must get paid from the higher bond That means we can't pay out the bond added at n until we have looked at n-1 The first answer is authenticated by checking against the stored history_hash. One of the inputs to history_hash is the history_hash before it, so we use that to authenticate the next entry, etc Once we get to a null hash we'll know we're done and there are no more answers. Usually you would call the whole thing in a single transaction, but if not then the data is persisted to pick up later.","params":{"addrs":"Last-to-first, the address of each answerer or commitment sender","answers":"Last-to-first, each answer supplied, or commitment ID if the answer was supplied with commit->reveal","bonds":"Last-to-first, the bond supplied with each answer or commitment","history_hashes":"Second-last-to-first, the hash of each history entry. (Final one should be empty).","question_id":"The ID of the question"}},"constructor":{"details":"Creates some generalized templates for different question types used in the DApp."},"createTemplate(string)":{"details":"Template data is only stored in the event logs, but its block number is kept in contract storage.","params":{"content":"The template content"},"returns":{"_0":"The ID of the newly-created template, which is created sequentially."}},"createTemplateAndAskQuestion(string,string,address,uint32,uint32,uint256)":{"details":"Template data is only stored in the event logs, but its block number is kept in contract storage.","params":{"arbitrator":"The arbitration contract that will have the final word on the answer if there is a dispute","content":"The template content","nonce":"A user-specified nonce used in the question ID. Change it to repeat a question.","opening_ts":"If set, the earliest time it should be possible to answer the question.","question":"A string containing the parameters that will be passed into the template to make the question","timeout":"How long the contract should wait after the answer is changed before finalizing on that answer"},"returns":{"_0":"The ID of the newly-created template, which is created sequentially."}},"fundAnswerBounty(bytes32)":{"details":"Add bounty funds after the initial question creation. Can be done any time until the question is finalized.","params":{"question_id":"The ID of the question you wish to fund"}},"getArbitrator(bytes32)":{"params":{"question_id":"The ID of the question "}},"getBestAnswer(bytes32)":{"params":{"question_id":"The ID of the question "}},"getBond(bytes32)":{"params":{"question_id":"The ID of the question "}},"getBounty(bytes32)":{"details":"Set back to zero once the bounty has been claimed","params":{"question_id":"The ID of the question "}},"getContentHash(bytes32)":{"params":{"question_id":"The ID of the question "}},"getFinalAnswer(bytes32)":{"params":{"question_id":"The ID of the question"},"returns":{"_0":"The answer formatted as a bytes32"}},"getFinalAnswerIfMatches(bytes32,bytes32,address,uint32,uint256)":{"details":"Reverts if the question is not finalized, or if it does not match the specified criteria.","params":{"arbitrator":"The arbitrator chosen for the question (regardless of whether they are asked to arbitrate)","content_hash":"The hash of the question content (template ID + opening time + question parameter string)","min_bond":"The bond sent with the final answer must be this high or higher","min_timeout":"The timeout set in the initial question settings must be this high or higher","question_id":"The ID of the question"},"returns":{"_0":"The answer formatted as a bytes32"}},"getFinalizeTS(bytes32)":{"params":{"question_id":"The ID of the question "}},"getHistoryHash(bytes32)":{"details":"Updated on each answer, then rewound as each is claimed","params":{"question_id":"The ID of the question "}},"getMinBond(bytes32)":{"params":{"question_id":"The ID of the question"}},"getOpeningTS(bytes32)":{"params":{"question_id":"The ID of the question "}},"getTimeout(bytes32)":{"params":{"question_id":"The ID of the question "}},"isFinalized(bytes32)":{"params":{"question_id":"The ID of the question"},"returns":{"_0":"Return true if finalized"}},"isPendingArbitration(bytes32)":{"params":{"question_id":"The ID of the question "}},"isSettledTooSoon(bytes32)":{"params":{"question_id":"The ID of the question "}},"notifyOfArbitrationRequest(bytes32,address,uint256)":{"details":"The arbitrator contract is trusted to only call this if they've been paid, and tell us who paid them.","params":{"max_previous":"If specified, reverts if a bond higher than this was submitted after you sent your transaction.","question_id":"The ID of the question","requester":"The account that requested arbitration"}},"reopenQuestion(uint256,string,address,uint32,uint32,uint256,uint256,bytes32)":{"details":"A special version of askQuestion() that replaces a previous question that was settled too soon","params":{"arbitrator":"The arbitration contract that will have the final word on the answer if there is a dispute","min_bond":"The minimum bond that can be used to provide the first answer.","nonce":"A user-specified nonce used in the question ID. Change it to repeat a question.","opening_ts":"If set, the earliest time it should be possible to answer the question.","question":"A string containing the parameters that will be passed into the template to make the question","reopens_question_id":"The ID of the question this reopens","template_id":"The ID number of the template the question will use","timeout":"How long the contract should wait after the answer is changed before finalizing on that answer"},"returns":{"_0":"The ID of the newly-created question, created deterministically."}},"resultFor(bytes32)":{"params":{"question_id":"The ID of the question"},"returns":{"_0":"The answer formatted as a bytes32"}},"resultForOnceSettled(bytes32)":{"params":{"question_id":"The ID of the question "}},"setQuestionFee(uint256)":{"details":"The per-question fee, charged when a question is asked, is intended as an anti-spam measure.","params":{"fee":"The fee to be charged by the arbitrator when a question is asked"}},"submitAnswer(bytes32,bytes32,uint256)":{"details":"Adds the answer to the history and updates the current \"best\" answer. May be subject to front-running attacks; Substitute submitAnswerCommitment()->submitAnswerReveal() to prevent them.","params":{"answer":"The answer, encoded into bytes32","max_previous":"If specified, reverts if a bond higher than this was submitted after you sent your transaction.","question_id":"The ID of the question"}},"submitAnswerByArbitrator(bytes32,bytes32,address)":{"details":"Doesn't require (or allow) a bond. If the current final answer is correct, the account should be whoever submitted it. If the current final answer is wrong, the account should be whoever paid for arbitration. However, the answerer stipulations are not enforced by the contract.","params":{"answer":"The answer, encoded into bytes32","answerer":"The account credited with this answer for the purpose of bond claims","question_id":"The ID of the question"}},"submitAnswerCommitment(bytes32,bytes32,uint256,address)":{"details":"Creates a hash, commitment_id, uniquely identifying this answer, to this question, with this bond. The commitment_id is stored in the answer history where the answer would normally go. Does not update the current best answer - this is left to the later submitAnswerReveal() transaction.Specifying the answerer is useful if you want to delegate the commit-and-reveal to a third-party.","params":{"_answerer":"If specified, the address to be given as the question answerer. Defaults to the sender.","answer_hash":"The hash of your answer, plus a nonce that you will later reveal","max_previous":"If specified, reverts if a bond higher than this was submitted after you sent your transaction.","question_id":"The ID of the question"}},"submitAnswerFor(bytes32,bytes32,uint256,address)":{"details":"Adds the answer to the history and updates the current \"best\" answer. May be subject to front-running attacks; Substitute submitAnswerCommitment()->submitAnswerReveal() to prevent them.","params":{"answer":"The answer, encoded into bytes32","answerer":"The account to which the answer should be credited","max_previous":"If specified, reverts if a bond higher than this was submitted after you sent your transaction.","question_id":"The ID of the question"}},"submitAnswerReveal(bytes32,bytes32,uint256,uint256)":{"details":"Checks the parameters supplied recreate an existing commitment, and stores the revealed answer Updates the current answer unless someone has since supplied a new answer with a higher bond msg.sender is intentionally not restricted to the user who originally sent the commitment;  For example, the user may want to provide the answer+nonce to a third-party service and let them send the tx NB If we are pending arbitration, it will be up to the arbitrator to wait and see any outstanding reveal is sent","params":{"answer":"The answer, encoded as bytes32","bond":"The bond that you paid in your submitAnswerCommitment() transaction","nonce":"The nonce that, combined with the answer, recreates the answer_hash you gave in submitAnswerCommitment()","question_id":"The ID of the question"}}},"version":1},"userdoc":{"kind":"user","methods":{"askQuestion(uint256,string,address,uint32,uint32,uint256)":{"notice":"Ask a new question and return the ID"},"askQuestionWithMinBond(uint256,string,address,uint32,uint32,uint256,uint256)":{"notice":"Ask a new question and return the ID"},"assignWinnerAndSubmitAnswerByArbitrator(bytes32,bytes32,address,bytes32,bytes32,address)":{"notice":"Submit the answer for a question, for use by the arbitrator, working out the appropriate winner based on the last answer details."},"cancelArbitration(bytes32)":{"notice":"Cancel a previously-requested arbitration and extend the timeout"},"claimMultipleAndWithdrawBalance(bytes32[],uint256[],bytes32[],address[],uint256[],bytes32[])":{"notice":"Convenience function to assign bounties/bonds for multiple questions in one go, then withdraw all your funds. Caller must provide the answer history for each question, in reverse order"},"claimWinnings(bytes32,bytes32[],address[],uint256[],bytes32[])":{"notice":"Assigns the winnings (bounty and bonds) to everyone who gave the accepted answer Caller must provide the answer history, in reverse order"},"constructor":{"notice":"Constructor, sets up some initial templates"},"createTemplate(string)":{"notice":"Create a reusable template, which should be a JSON document. Placeholders should use gettext() syntax, eg %s."},"createTemplateAndAskQuestion(string,string,address,uint32,uint32,uint256)":{"notice":"Create a new reusable template and use it to ask a question"},"fundAnswerBounty(bytes32)":{"notice":"Add funds to the bounty for a question"},"getArbitrator(bytes32)":{"notice":"Returns the arbitrator address for the question"},"getBestAnswer(bytes32)":{"notice":"Returns the current best answer"},"getBond(bytes32)":{"notice":"Returns the highest bond posted so far for a question"},"getBounty(bytes32)":{"notice":"Returns the current total unclaimed bounty"},"getContentHash(bytes32)":{"notice":"Returns the questions's content hash, identifying the question content"},"getFinalAnswer(bytes32)":{"notice":"(Deprecated) Return the final answer to the specified question, or revert if there isn't one"},"getFinalAnswerIfMatches(bytes32,bytes32,address,uint32,uint256)":{"notice":"Return the final answer to the specified question, provided it matches the specified criteria."},"getFinalizeTS(bytes32)":{"notice":"Returns the timestamp at which the question will be/was finalized"},"getHistoryHash(bytes32)":{"notice":"Returns the history hash of the question "},"getMinBond(bytes32)":{"notice":"Returns the minimum bond that can answer the question"},"getOpeningTS(bytes32)":{"notice":"Returns the timestamp when the question can first be answered"},"getTimeout(bytes32)":{"notice":"Returns the timeout in seconds used after each answer"},"isFinalized(bytes32)":{"notice":"Report whether the answer to the specified question is finalized"},"isPendingArbitration(bytes32)":{"notice":"Returns whether the question is pending arbitration"},"isSettledTooSoon(bytes32)":{"notice":"Returns whether the question was answered before it had an answer, ie resolved to UNRESOLVED_ANSWER"},"notifyOfArbitrationRequest(bytes32,address,uint256)":{"notice":"Notify the contract that the arbitrator has been paid for a question, freezing it pending their decision."},"reopenQuestion(uint256,string,address,uint32,uint32,uint256,uint256,bytes32)":{"notice":"Asks a new question reopening a previously-asked question that was settled too soon"},"resultFor(bytes32)":{"notice":"Return the final answer to the specified question, or revert if there isn't one"},"resultForOnceSettled(bytes32)":{"notice":"Like resultFor(), but errors out if settled too soon, or returns the result of a replacement if it was reopened at the right time and settled"},"setQuestionFee(uint256)":{"notice":"Function for arbitrator to set an optional per-question fee. "},"submitAnswer(bytes32,bytes32,uint256)":{"notice":"Submit an answer for a question."},"submitAnswerByArbitrator(bytes32,bytes32,address)":{"notice":"Submit the answer for a question, for use by the arbitrator."},"submitAnswerCommitment(bytes32,bytes32,uint256,address)":{"notice":"Submit the hash of an answer, laying your claim to that answer if you reveal it in a subsequent transaction."},"submitAnswerFor(bytes32,bytes32,uint256,address)":{"notice":"Submit an answer for a question, crediting it to the specified account."},"submitAnswerReveal(bytes32,bytes32,uint256,uint256)":{"notice":"Submit the answer whose hash you sent in a previous submitAnswerCommitment() transaction"}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"staticlib/RealityETH-3.0.sol":"RealityETH_v3_0"},"evmVersion":"cancun","libraries":{}},"sources":{"staticlib/RealityETH-3.0.sol":{"keccak256":"0x7c94ebd3ddc3e1d0a99d529832712aa2f898f607bcc2f6f7180f15a95482359b","urls":["bzz-raw://761b8a3ff3a0e124da15134f8774849f1c8e87eaebb8c63389149d1698b82363","dweb:/ipfs/QmQ9NTeYZFmHGBP3AfzFvZHvjngWy73K2poUJkokDukrLz"],"license":"GPL-3.0-only"}},"version":1},"id":23}